{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mrcea/Desktop/Nunua/template/packages/web/containers/SignUpForm/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport Router from 'next/router';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Icon from 'react-icons-kit';\nimport { locked } from 'react-icons-kit/iconic/locked';\nimport { phone } from 'react-icons-kit/iconic/phone';\nimport Text from 'reusecore/src/elements/Text';\nimport Button from 'reusecore/src/elements/Button';\nimport AuthHeader from '../../components/AuthHeader';\nimport Input from '../../components/Input';\nimport Box from 'reusecore/src/elements/Box';\nimport { FormGroup, ErrorNotification } from '../SignInForm/style';\nimport { REGISTER } from 'core/graphql/Mutations';\nimport { useMutation } from '@apollo/react-hooks';\nimport AuthHelper from '../../helpers/authHelper';\nimport { setFirebaseCookie } from '../../helpers/session';\nimport redirect from '../../helpers/redirect';\nconst SignupEnhancher = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: props => ({\n    email: '',\n    password: ''\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Invalid email address').required('Email is required!'),\n    password: Yup.string().required('Password is required')\n  })\n});\nlet token = '';\n\nconst SignUpForm = ({\n  values,\n  touched,\n  errors,\n  handleChange,\n  handleSubmit,\n  handleBlur,\n  setFieldValue\n}) => {\n  const {\n    0: error,\n    1: setError\n  } = useState({});\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const [registerMutation, {\n    data\n  }] = useMutation(REGISTER);\n\n  handleSubmit = async () => {\n    setLoading(true);\n\n    if (!Object.keys(errors).length) {\n      const {\n        email,\n        password\n      } = values;\n      const provider = 'password';\n      const {\n        user,\n        error\n      } = await AuthHelper.signUp(provider, email, password);\n\n      if (user) {\n        token = await user.getIdToken();\n        setFieldValue('token', token);\n      } else if (error) {\n        setLoading(false);\n        setError(error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    (async function () {\n      try {\n        if (values.token) {\n          const res = await registerMutation({\n            variables: {\n              user: {\n                email: values.email,\n                token: values.token\n              }\n            }\n          });\n\n          if (res && res.data && res.data.register) {\n            setLoading(false);\n            const user = res.data.register;\n            setFirebaseCookie('id_token', token);\n            setFirebaseCookie('user', _objectSpread({}, user));\n            redirect({}, '/');\n          }\n        }\n      } catch (error) {\n        setLoading(false);\n      }\n    })();\n  }, [values.token]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AuthHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      className: errors.email ? 'hasErrorMsg' : '',\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        elementType: \"input\",\n        elementConfig: {\n          type: 'email',\n          required: 'required'\n        },\n        value: values.email,\n        error: errors.email,\n        touched: touched,\n        label: \"Email\",\n        onBlur: handleBlur('email'),\n        changed: handleChange('email'),\n        highlightColor: \"#f09\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"errorMsg\",\n        children: errors.email && touched.email && errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      className: errors.password ? 'hasErrorMsg' : '',\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        elementType: \"input\",\n        elementConfig: {\n          type: 'password',\n          required: 'required'\n        },\n        value: values.password,\n        error: errors.password,\n        onBlur: handleBlur('password'),\n        touched: touched,\n        label: \"Password\",\n        changed: handleChange('password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"errorMsg\",\n        children: errors.password && touched.password && errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), error.message ? /*#__PURE__*/_jsxDEV(Box, {\n      flexBox: true,\n      mt: 20,\n      mb: 15,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(ErrorNotification, {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : '', /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      title: \"Sign up now\",\n      width: 1,\n      isLoading: loading,\n      loaderColor: \"#fff\",\n      icon: /*#__PURE__*/_jsxDEV(Icon, {\n        icon: locked,\n        size: 21\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }, this),\n      mt: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      flexBox: true,\n      mt: 20,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        content: \" Have an account ?\",\n        color: \"#8C8C8C\",\n        mb: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Sign In\",\n        variant: \"textButton\",\n        ml: \"5px\",\n        onClick: () => Router.push('/signin')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default SignupEnhancher(SignUpForm);","map":{"version":3,"sources":["/Users/mrcea/Desktop/Nunua/template/packages/web/containers/SignUpForm/index.js"],"names":["React","useEffect","useState","Router","withFormik","Yup","Icon","locked","phone","Text","Button","AuthHeader","Input","Box","FormGroup","ErrorNotification","REGISTER","useMutation","AuthHelper","setFirebaseCookie","redirect","SignupEnhancher","enableReinitialize","mapPropsToValues","props","email","password","validationSchema","object","shape","string","required","token","SignUpForm","values","touched","errors","handleChange","handleSubmit","handleBlur","setFieldValue","error","setError","loading","setLoading","registerMutation","data","Object","keys","length","provider","user","signUp","getIdToken","res","variables","register","type","message","push"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,MAAT,QAAuB,+BAAvB;AACA,SAASC,KAAT,QAAsB,8BAAtB;AAEA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,qBAA7C;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,MAAMC,eAAe,GAAGjB,UAAU,CAAC;AACjCkB,EAAAA,kBAAkB,EAAE,IADa;AAEjCC,EAAAA,gBAAgB,EAAEC,KAAK,KAAK;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAL,CAFU;AAGjCC,EAAAA,gBAAgB,EAAEtB,GAAG,CAACuB,MAAJ,GAAaC,KAAb,CAAmB;AACnCJ,IAAAA,KAAK,EAAEpB,GAAG,CAACyB,MAAJ,GACJL,KADI,CACE,uBADF,EAEJM,QAFI,CAEK,oBAFL,CAD4B;AAInCL,IAAAA,QAAQ,EAAErB,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB;AAJyB,GAAnB;AAHe,CAAD,CAAlC;AAUA,IAAIC,KAAK,GAAG,EAAZ;;AACA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,MADkB;AAElBC,EAAAA,OAFkB;AAGlBC,EAAAA,MAHkB;AAIlBC,EAAAA,YAJkB;AAKlBC,EAAAA,YALkB;AAMlBC,EAAAA,UANkB;AAOlBC,EAAAA;AAPkB,CAAD,KAQb;AACJ,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBxC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACyC,OAAD;AAAA,OAAUC;AAAV,MAAwB1C,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAC2C,gBAAD,EAAmB;AAAEC,IAAAA;AAAF,GAAnB,IAA+B7B,WAAW,CAACD,QAAD,CAAhD;;AACAsB,EAAAA,YAAY,GAAG,YAAY;AACzBM,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI,CAACG,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAAzB,EAAiC;AAC/B,YAAM;AAAExB,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsBQ,MAA5B;AACA,YAAMgB,QAAQ,GAAG,UAAjB;AACA,YAAM;AAAEC,QAAAA,IAAF;AAAQV,QAAAA;AAAR,UAAkB,MAAMvB,UAAU,CAACkC,MAAX,CAC5BF,QAD4B,EAE5BzB,KAF4B,EAG5BC,QAH4B,CAA9B;;AAKA,UAAIyB,IAAJ,EAAU;AACRnB,QAAAA,KAAK,GAAG,MAAMmB,IAAI,CAACE,UAAL,EAAd;AACAb,QAAAA,aAAa,CAAC,OAAD,EAAUR,KAAV,CAAb;AACD,OAHD,MAGO,IAAIS,KAAJ,EAAW;AAChBG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF;AACF,GAlBD;;AAmBAxC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,kBAAiB;AAChB,UAAI;AACF,YAAIiC,MAAM,CAACF,KAAX,EAAkB;AAChB,gBAAMsB,GAAG,GAAG,MAAMT,gBAAgB,CAAC;AACjCU,YAAAA,SAAS,EAAE;AAAEJ,cAAAA,IAAI,EAAE;AAAE1B,gBAAAA,KAAK,EAAES,MAAM,CAACT,KAAhB;AAAuBO,gBAAAA,KAAK,EAAEE,MAAM,CAACF;AAArC;AAAR;AADsB,WAAD,CAAlC;;AAGA,cAAIsB,GAAG,IAAIA,GAAG,CAACR,IAAX,IAAmBQ,GAAG,CAACR,IAAJ,CAASU,QAAhC,EAA0C;AACxCZ,YAAAA,UAAU,CAAC,KAAD,CAAV;AACA,kBAAMO,IAAI,GAAGG,GAAG,CAACR,IAAJ,CAASU,QAAtB;AACArC,YAAAA,iBAAiB,CAAC,UAAD,EAAaa,KAAb,CAAjB;AACAb,YAAAA,iBAAiB,CAAC,MAAD,oBAAcgC,IAAd,EAAjB;AACA/B,YAAAA,QAAQ,CAAC,EAAD,EAAK,GAAL,CAAR;AACD;AACF;AACF,OAbD,CAaE,OAAOqB,KAAP,EAAc;AACdG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAjBD;AAkBD,GAnBQ,EAmBN,CAACV,MAAM,CAACF,KAAR,CAnBM,CAAT;AAoBA,sBACE;AAAA,4BAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEI,MAAM,CAACX,KAAP,GAAe,aAAf,GAA+B,EAArD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,aAAa,EAAE;AACbgC,UAAAA,IAAI,EAAE,OADO;AAEb1B,UAAAA,QAAQ,EAAE;AAFG,SAFjB;AAME,QAAA,KAAK,EAAEG,MAAM,CAACT,KANhB;AAOE,QAAA,KAAK,EAAEW,MAAM,CAACX,KAPhB;AAQE,QAAA,OAAO,EAAEU,OARX;AASE,QAAA,KAAK,EAAC,OATR;AAUE,QAAA,MAAM,EAAEI,UAAU,CAAC,OAAD,CAVpB;AAWE,QAAA,OAAO,EAAEF,YAAY,CAAC,OAAD,CAXvB;AAYE,QAAA,cAAc,EAAC;AAZjB;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA,kBACGD,MAAM,CAACX,KAAP,IAAgBU,OAAO,CAACV,KAAxB,IAAiCW,MAAM,CAACX;AAD3C;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAyBE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEW,MAAM,CAACV,QAAP,GAAkB,aAAlB,GAAkC,EAAxD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,aAAa,EAAE;AACb+B,UAAAA,IAAI,EAAE,UADO;AAEb1B,UAAAA,QAAQ,EAAE;AAFG,SAFjB;AAME,QAAA,KAAK,EAAEG,MAAM,CAACR,QANhB;AAOE,QAAA,KAAK,EAAEU,MAAM,CAACV,QAPhB;AAQE,QAAA,MAAM,EAAEa,UAAU,CAAC,UAAD,CARpB;AASE,QAAA,OAAO,EAAEJ,OATX;AAUE,QAAA,KAAK,EAAC,UAVR;AAWE,QAAA,OAAO,EAAEE,YAAY,CAAC,UAAD;AAXvB;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA,kBACGD,MAAM,CAACV,QAAP,IAAmBS,OAAO,CAACT,QAA3B,IAAuCU,MAAM,CAACV;AADjD;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF,EA4CGe,KAAK,CAACiB,OAAN,gBACC,QAAC,GAAD;AACE,MAAA,OAAO,MADT;AAEE,MAAA,EAAE,EAAE,EAFN;AAGE,MAAA,EAAE,EAAE,EAHN;AAIE,MAAA,cAAc,EAAC,QAJjB;AAKE,MAAA,UAAU,EAAC,QALb;AAAA,6BAOE,QAAC,iBAAD;AAAA,kBAAoBjB,KAAK,CAACiB;AAA1B;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YADD,GAWC,EAvDJ,eA0DE,QAAC,MAAD;AACE,MAAA,OAAO,EAAEpB,YADX;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,KAAK,EAAE,CAHT;AAIE,MAAA,SAAS,EAAEK,OAJb;AAKE,MAAA,WAAW,EAAC,MALd;AAME,MAAA,IAAI,eAAE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEpC,MAAZ;AAAoB,QAAA,IAAI,EAAE;AAA1B;AAAA;AAAA;AAAA;AAAA,cANR;AAOE,MAAA,EAAE,EAAE;AAPN;AAAA;AAAA;AAAA;AAAA,YA1DF,eAsFE,QAAC,GAAD;AAAK,MAAA,OAAO,MAAZ;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,cAAc,EAAC,QAApC;AAA6C,MAAA,UAAU,EAAC,QAAxD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAC,oBAAd;AAAmC,QAAA,KAAK,EAAC,SAAzC;AAAmD,QAAA,EAAE,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAC,YAFV;AAGE,QAAA,EAAE,EAAC,KAHL;AAIE,QAAA,OAAO,EAAE,MAAMJ,MAAM,CAACwD,IAAP,CAAY,SAAZ;AAJjB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtFF;AAAA,kBADF;AAmGD,CAtJD;;AAwJA,eAAetC,eAAe,CAACY,UAAD,CAA9B","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Router from 'next/router';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Icon from 'react-icons-kit';\nimport { locked } from 'react-icons-kit/iconic/locked';\nimport { phone } from 'react-icons-kit/iconic/phone';\n\nimport Text from 'reusecore/src/elements/Text';\nimport Button from 'reusecore/src/elements/Button';\nimport AuthHeader from '../../components/AuthHeader';\nimport Input from '../../components/Input';\nimport Box from 'reusecore/src/elements/Box';\nimport { FormGroup, ErrorNotification } from '../SignInForm/style';\nimport { REGISTER } from 'core/graphql/Mutations';\nimport { useMutation } from '@apollo/react-hooks';\nimport AuthHelper from '../../helpers/authHelper';\nimport { setFirebaseCookie } from '../../helpers/session';\nimport redirect from '../../helpers/redirect';\n\nconst SignupEnhancher = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: props => ({ email: '', password: '' }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('Email is required!'),\n    password: Yup.string().required('Password is required'),\n  }),\n});\nlet token = '';\nconst SignUpForm = ({\n  values,\n  touched,\n  errors,\n  handleChange,\n  handleSubmit,\n  handleBlur,\n  setFieldValue,\n}) => {\n  const [error, setError] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [registerMutation, { data }] = useMutation(REGISTER);\n  handleSubmit = async () => {\n    setLoading(true);\n    if (!Object.keys(errors).length) {\n      const { email, password } = values;\n      const provider = 'password';\n      const { user, error } = await AuthHelper.signUp(\n        provider,\n        email,\n        password\n      );\n      if (user) {\n        token = await user.getIdToken();\n        setFieldValue('token', token);\n      } else if (error) {\n        setLoading(false);\n        setError(error);\n      }\n    }\n  };\n  useEffect(() => {\n    (async function() {\n      try {\n        if (values.token) {\n          const res = await registerMutation({\n            variables: { user: { email: values.email, token: values.token } },\n          });\n          if (res && res.data && res.data.register) {\n            setLoading(false);\n            const user = res.data.register;\n            setFirebaseCookie('id_token', token);\n            setFirebaseCookie('user', { ...user });\n            redirect({}, '/');\n          }\n        }\n      } catch (error) {\n        setLoading(false);\n      }\n    })();\n  }, [values.token]);\n  return (\n    <>\n      {/* auth page header section */}\n      <AuthHeader />\n\n      {/* signup form */}\n      <FormGroup className={errors.email ? 'hasErrorMsg' : ''}>\n        <Input\n          elementType=\"input\"\n          elementConfig={{\n            type: 'email',\n            required: 'required',\n          }}\n          value={values.email}\n          error={errors.email}\n          touched={touched}\n          label=\"Email\"\n          onBlur={handleBlur('email')}\n          changed={handleChange('email')}\n          highlightColor=\"#f09\"\n        />\n        <span className=\"errorMsg\">\n          {errors.email && touched.email && errors.email}\n        </span>\n      </FormGroup>\n\n      <FormGroup className={errors.password ? 'hasErrorMsg' : ''}>\n        <Input\n          elementType=\"input\"\n          elementConfig={{\n            type: 'password',\n            required: 'required',\n          }}\n          value={values.password}\n          error={errors.password}\n          onBlur={handleBlur('password')}\n          touched={touched}\n          label=\"Password\"\n          changed={handleChange('password')}\n        />\n        <span className=\"errorMsg\">\n          {errors.password && touched.password && errors.password}\n        </span>\n      </FormGroup>\n\n      {error.message ? (\n        <Box\n          flexBox\n          mt={20}\n          mb={15}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <ErrorNotification>{error.message}</ErrorNotification>\n        </Box>\n      ) : (\n        ''\n      )}\n\n      <Button\n        onClick={handleSubmit}\n        title=\"Sign up now\"\n        width={1}\n        isLoading={loading}\n        loaderColor=\"#fff\"\n        icon={<Icon icon={locked} size={21} />}\n        mt={20}\n      />\n\n      {/* <Text\n        fontSize={14}\n        content=\"Or\"\n        color=\"#8C8C8C\"\n        textAlign=\"center\"\n        mt={16}\n      /> */}\n\n      {/* <Button\n        onClick={handleSubmit}\n        title=\"Sign up with\"\n        icon={<Icon icon={phone} size={21} />}\n        width={1}\n        bg=\"#5CABE6\"\n      /> */}\n\n      {/* signin page redirection section */}\n\n      <Box flexBox mt={20} justifyContent=\"center\" alignItems=\"center\">\n        <Text content=\" Have an account ?\" color=\"#8C8C8C\" mb=\"0\" />\n\n        <Button\n          title=\"Sign In\"\n          variant=\"textButton\"\n          ml=\"5px\"\n          onClick={() => Router.push('/signin')}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default SignupEnhancher(SignUpForm);\n"]},"metadata":{},"sourceType":"module"}