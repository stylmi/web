{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\olaji\\\\OneDrive\\\\Documents\\\\sellit\\\\template\\\\packages\\\\web\\\\components\\\\Search\\\\index.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport InputSearch from \"../InputSearch\";\nimport SearchWrapper, { SearchBox } from \"./Search.style\";\nimport Icon from \"react-icons-kit\";\nimport { androidSearch } from \"react-icons-kit/ionicons/androidSearch\";\nimport Button from \"../../../reusecore/src/elements/Button\";\nexport default function Search() {\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState(\"\");\n  const {\n    0: toggleSearch,\n    1: setToggleSearch\n  } = useState(false);\n  let searchRef = useRef();\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n  const handleSearchInput = event => {\n    setSearchValue(event.target.value);\n  };\n\n  const handleClickOutside = event => {\n    if (searchRef.current && !searchRef.current.contains(event.target)) {\n      setToggleSearch(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SearchWrapper, {\n    ref: searchRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(Icon, {\n          icon: androidSearch,\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 12\n        }, this),\n        variant: \"outlined\",\n        color: \"#8C8C8C\",\n        onClick: () => setToggleSearch(true),\n        style: {\n          marginLeft: \"auto\",\n          border: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      className: toggleSearch ? \"expanded\" : \"collapsed\",\n      children: /*#__PURE__*/_jsxDEV(InputSearch, {\n        type: \"text\",\n        value: searchValue,\n        changed: handleSearchInput,\n        searchText: searchValue,\n        buttonIcon: /*#__PURE__*/_jsxDEV(Icon, {\n          icon: androidSearch,\n          size: 21\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 18\n        }, this),\n        placeholder: \"10,000 products available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/olaji/OneDrive/Documents/sellit/template/packages/web/components/Search/index.js"],"names":["React","useEffect","useRef","useState","InputSearch","SearchWrapper","SearchBox","Icon","androidSearch","Button","Search","searchValue","setSearchValue","toggleSearch","setToggleSearch","searchRef","document","addEventListener","handleClickOutside","removeEventListener","handleSearchInput","event","target","value","current","contains","display","marginLeft","border"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,aAAP,IAAwBC,SAAxB,QAAyC,gBAAzC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,aAAT,QAA8B,wCAA9B;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAChC,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACU,YAAD;AAAA,OAAeC;AAAf,MAAkCX,QAAQ,CAAC,KAAD,CAAhD;AAEA,MAAIY,SAAS,GAAGb,MAAM,EAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfe,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCC,kBAAnC,EAAuD,KAAvD;AACA,WAAO,MAAM;AACZF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsCD,kBAAtC,EAA0D,KAA1D;AACA,KAFD;AAGA,GALQ,EAKN,EALM,CAAT;;AAOA,QAAME,iBAAiB,GAAIC,KAAD,IAAW;AACpCT,IAAAA,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACA,GAFD;;AAIA,QAAML,kBAAkB,GAAIG,KAAD,IAAW;AACrC,QAAIN,SAAS,CAACS,OAAV,IAAqB,CAACT,SAAS,CAACS,OAAV,CAAkBC,QAAlB,CAA2BJ,KAAK,CAACC,MAAjC,CAA1B,EAAoE;AACnER,MAAAA,eAAe,CAAC,KAAD,CAAf;AACA;AACD,GAJD;;AAMA,sBACC,QAAC,aAAD;AAAe,IAAA,GAAG,EAAEC,SAApB;AAAA,4BACC;AAAK,MAAA,KAAK,EAAE;AAAEW,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,6BACC,QAAC,MAAD;AACC,QAAA,IAAI,eAAE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAElB,aAAZ;AAA2B,UAAA,IAAI,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADP;AAEC,QAAA,OAAO,EAAC,UAFT;AAGC,QAAA,KAAK,EAAC,SAHP;AAIC,QAAA,OAAO,EAAE,MAAMM,eAAe,CAAC,IAAD,CAJ/B;AAKC,QAAA,KAAK,EAAE;AACNa,UAAAA,UAAU,EAAE,MADN;AAENC,UAAAA,MAAM,EAAE;AAFF;AALR;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAaC,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEf,YAAY,GAAG,UAAH,GAAgB,WAAlD;AAAA,6BACC,QAAC,WAAD;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,KAAK,EAAEF,WAFR;AAGC,QAAA,OAAO,EAAES,iBAHV;AAIC,QAAA,UAAU,EAAET,WAJb;AAKC,QAAA,UAAU,eAAE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEH,aAAZ;AAA2B,UAAA,IAAI,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA,gBALb;AAMC,QAAA,WAAW,EAAC;AANb;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAbD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA0BA","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport InputSearch from \"../InputSearch\";\r\nimport SearchWrapper, { SearchBox } from \"./Search.style\";\r\nimport Icon from \"react-icons-kit\";\r\nimport { androidSearch } from \"react-icons-kit/ionicons/androidSearch\";\r\nimport Button from \"../../../reusecore/src/elements/Button\";\r\n\r\nexport default function Search() {\r\n\tconst [searchValue, setSearchValue] = useState(\"\");\r\n\tconst [toggleSearch, setToggleSearch] = useState(false);\r\n\r\n\tlet searchRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener(\"click\", handleClickOutside, false);\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"click\", handleClickOutside, false);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tconst handleSearchInput = (event) => {\r\n\t\tsetSearchValue(event.target.value);\r\n\t};\r\n\r\n\tconst handleClickOutside = (event) => {\r\n\t\tif (searchRef.current && !searchRef.current.contains(event.target)) {\r\n\t\t\tsetToggleSearch(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SearchWrapper ref={searchRef}>\r\n\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ticon={<Icon icon={androidSearch} size={24} />}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tcolor=\"#8C8C8C\"\r\n\t\t\t\t\tonClick={() => setToggleSearch(true)}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginLeft: \"auto\",\r\n\t\t\t\t\t\tborder: \"none\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<SearchBox className={toggleSearch ? \"expanded\" : \"collapsed\"}>\r\n\t\t\t\t<InputSearch\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={searchValue}\r\n\t\t\t\t\tchanged={handleSearchInput}\r\n\t\t\t\t\tsearchText={searchValue}\r\n\t\t\t\t\tbuttonIcon={<Icon icon={androidSearch} size={21} />}\r\n\t\t\t\t\tplaceholder=\"10,000 products available\"\r\n\t\t\t\t/>\r\n\t\t\t</SearchBox>\r\n\t\t</SearchWrapper>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}