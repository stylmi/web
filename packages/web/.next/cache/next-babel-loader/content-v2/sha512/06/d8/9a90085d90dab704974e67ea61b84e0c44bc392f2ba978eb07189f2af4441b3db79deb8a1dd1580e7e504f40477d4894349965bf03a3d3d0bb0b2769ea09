{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\olaji\\\\OneDrive\\\\Documents\\\\sellit\\\\template\\\\packages\\\\web\\\\containers\\\\Home\\\\RecentPost\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { CURRENCY } from '../../../Config';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ALL_POST } from '../../../../core/graphql/AllPost.query';\nimport { RECENT_POST_PAGE, SINGLE_POST_PAGE } from '../../../../core/navigation/constant';\nimport { PostLoader } from '../../../components/Placeholder';\nimport PostCard from '../../../components/PostCard';\nimport ListGrid from '../../../../reusecore/src/elements/ListGrid';\nimport Box from '../../../../reusecore/src/elements/Box';\nimport Heading from '../../../../reusecore/src/elements/Heading';\nimport Button from '../../../../reusecore/src/elements/Button';\nimport NoItemFound from '../../../components/NoItemFound';\nimport OnError from '../../../components/OnError';\nexport default function RecentPost() {\n  _s();\n\n  var _this = this;\n\n  // QUERY SECTION\n  var QUERY_VARIABLES = {\n    LIMIT: 8\n  };\n\n  var _useQuery = useQuery(GET_ALL_POST, {\n    variables: QUERY_VARIABLES\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; // Error Rendering.\n\n\n  if (error) return /*#__PURE__*/_jsxDEV(OnError, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 21\n  }, this); // Extract Post Data\n\n  var recentPosts = data && data.posts ? data.posts.data : []; // Post Loop Control Area\n\n  var renderRecentPost = function renderRecentPost(item) {\n    var title = item.title,\n        slug = item.slug,\n        price = item.price,\n        _item$image = item.image,\n        url = _item$image.url,\n        largeUrl = _item$image.largeUrl;\n    return /*#__PURE__*/_jsxDEV(Link, {\n      href: \"\".concat(SINGLE_POST_PAGE, \"/[slug]\"),\n      as: \"\".concat(SINGLE_POST_PAGE, \"/\").concat(slug),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: /*#__PURE__*/_jsxDEV(PostCard, {\n          currency: CURRENCY,\n          title: title,\n          price: price,\n          imageSrc: [url, largeUrl]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      flexBox: true,\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        content: \"Recently Uploaded\",\n        mb: 0,\n        fontSize: 20,\n        fontWeight: 600\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: RECENT_POST_PAGE,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            title: \"See all\",\n            color: \"#8c8c8c\",\n            fontWeight: 500,\n            variant: \"textButton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: !recentPosts ? /*#__PURE__*/_jsxDEV(NoItemFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ListGrid, {\n        data: recentPosts,\n        columnWidth: [1, 1 / 2, 1 / 3, 1 / 4],\n        limit: QUERY_VARIABLES.LIMIT,\n        component: renderRecentPost,\n        loading: loading,\n        placeholder: /*#__PURE__*/_jsxDEV(PostLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RecentPost, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = RecentPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecentPost\");","map":{"version":3,"sources":["C:/Users/olaji/OneDrive/Documents/sellit/template/packages/web/containers/Home/RecentPost/index.js"],"names":["React","Link","CURRENCY","useQuery","GET_ALL_POST","RECENT_POST_PAGE","SINGLE_POST_PAGE","PostLoader","PostCard","ListGrid","Box","Heading","Button","NoItemFound","OnError","RecentPost","QUERY_VARIABLES","LIMIT","variables","data","loading","error","recentPosts","posts","renderRecentPost","item","title","slug","price","image","url","largeUrl"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\nimport { CURRENCY } from '../../../Config';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { GET_ALL_POST } from '../../../../core/graphql/AllPost.query';\r\nimport { RECENT_POST_PAGE, SINGLE_POST_PAGE } from '../../../../core/navigation/constant';\r\nimport { PostLoader } from '../../../components/Placeholder';\r\n\r\nimport PostCard from '../../../components/PostCard';\r\nimport ListGrid from '../../../../reusecore/src/elements/ListGrid';\r\nimport Box from '../../../../reusecore/src/elements/Box';\r\nimport Heading from '../../../../reusecore/src/elements/Heading';\r\nimport Button from '../../../../reusecore/src/elements/Button';\r\nimport NoItemFound from '../../../components/NoItemFound';\r\nimport OnError from '../../../components/OnError';\r\n\r\nexport default function RecentPost() {\r\n  // QUERY SECTION\r\n  let QUERY_VARIABLES = {\r\n    LIMIT: 8,\r\n  };\r\n\r\n  const { data, loading, error } = useQuery(GET_ALL_POST, {\r\n    variables: QUERY_VARIABLES,\r\n  });\r\n\r\n  // Error Rendering.\r\n  if (error) return <OnError />;\r\n  // Extract Post Data\r\n  const recentPosts = data && data.posts ? data.posts.data : [];\r\n  // Post Loop Control Area\r\n\r\n  const renderRecentPost = item => {\r\n    const {\r\n      title,\r\n      slug,\r\n      price,\r\n      image: { url, largeUrl },\r\n    } = item;\r\n    return (\r\n      <Link\r\n        href={`${SINGLE_POST_PAGE}/[slug]`}\r\n        as={`${SINGLE_POST_PAGE}/${slug}`}\r\n      >\r\n        <a>\r\n          <PostCard\r\n            currency={CURRENCY}\r\n            title={title}\r\n            price={price}\r\n            imageSrc={[url, largeUrl]}\r\n          />\r\n        </a>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flexBox justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Heading\r\n          content=\"Recently Uploaded\"\r\n          mb={0}\r\n          fontSize={20}\r\n          fontWeight={600}\r\n        />\r\n        <Link href={RECENT_POST_PAGE}>\r\n          <a>\r\n            <Button\r\n              title=\"See all\"\r\n              color=\"#8c8c8c\"\r\n              fontWeight={500}\r\n              variant=\"textButton\"\r\n            />\r\n          </a>\r\n        </Link>\r\n      </Box>\r\n      <Box mt={20}>\r\n        {!recentPosts ? (\r\n          <NoItemFound />\r\n        ) : (\r\n          <ListGrid\r\n            data={recentPosts}\r\n            columnWidth={[1, 1 / 2, 1 / 3, 1 / 4]}\r\n            limit={QUERY_VARIABLES.LIMIT}\r\n            component={renderRecentPost}\r\n            loading={loading}\r\n            placeholder={<PostLoader />}\r\n          />\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}