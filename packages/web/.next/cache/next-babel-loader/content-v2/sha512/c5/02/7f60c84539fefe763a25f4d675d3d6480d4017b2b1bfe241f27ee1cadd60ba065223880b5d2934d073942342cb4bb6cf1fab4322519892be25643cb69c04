{"ast":null,"code":"import _defineProperty from \"/Users/mrcea/Desktop/Nunua/template/packages/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mrcea/Desktop/Nunua/template/packages/web/components/Input/index.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport InputField from './Input.style'; // get input focus class\n\nvar getInputFocusClass = function getInputFocusClass(value) {\n  if (value !== '' && value != null) {\n    return 'is-focus';\n  } else {\n    return '';\n  }\n};\n\nvar input = function input(props) {\n  var inputElement;\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, props.elementConfig), {}, {\n        value: props.value,\n        onChange: props.changed,\n        onBlur: props.onBlur\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, _this);\n      break;\n\n    case 'select':\n      inputElement = /*#__PURE__*/_jsxDEV(\"select\", {\n        value: props.value,\n        onChange: props.changed,\n        children: props.elementConfig.options.map(function (option) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.name\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, _this);\n      break;\n\n    case 'textarea':\n      inputElement = /*#__PURE__*/_jsxDEV(\"textarea\", _objectSpread(_objectSpread({}, props.elementConfig), {}, {\n        value: props.value,\n        onChange: props.changed,\n        rows: props.rows\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this);\n      break;\n\n    default:\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, props), {}, {\n        value: props.value\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 22\n      }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(InputField, {\n    style: props.style,\n    className: \"\".concat(getInputFocusClass(props.value)),\n    children: [inputElement, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"highlight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.label,\n      children: [\" \", props.label, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, _this);\n};\n\nexport default input;","map":{"version":3,"sources":["/Users/mrcea/Desktop/Nunua/template/packages/web/components/Input/index.js"],"names":["React","InputField","getInputFocusClass","value","input","props","inputElement","elementType","elementConfig","changed","onBlur","options","map","option","name","rows","style","label"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK,EAAI;AAClC,MAAIA,KAAK,KAAK,EAAV,IAAgBA,KAAK,IAAI,IAA7B,EAAmC;AACjC,WAAO,UAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF,CAND;;AAQA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACrB,MAAIC,YAAJ;;AACA,UAAQD,KAAK,CAACE,WAAd;AACE,SAAK,OAAL;AACED,MAAAA,YAAY,gBACV,iDACMD,KAAK,CAACG,aADZ;AAEE,QAAA,KAAK,EAAEH,KAAK,CAACF,KAFf;AAGE,QAAA,QAAQ,EAAEE,KAAK,CAACI,OAHlB;AAIE,QAAA,MAAM,EAAEJ,KAAK,CAACK;AAJhB;AAAA;AAAA;AAAA;AAAA,eADF;AAQA;;AACF,SAAK,QAAL;AACEJ,MAAAA,YAAY,gBACV;AAAQ,QAAA,KAAK,EAAED,KAAK,CAACF,KAArB;AAA4B,QAAA,QAAQ,EAAEE,KAAK,CAACI,OAA5C;AAAA,kBACGJ,KAAK,CAACG,aAAN,CAAoBG,OAApB,CAA4BC,GAA5B,CAAgC,UAAAC,MAAM;AAAA,8BACrC;AAA2B,YAAA,KAAK,EAAEA,MAAM,CAACV,KAAzC;AAAA,sBACGU,MAAM,CAACC;AADV,aAAaD,MAAM,CAACV,KAApB;AAAA;AAAA;AAAA;AAAA,mBADqC;AAAA,SAAtC;AADH;AAAA;AAAA;AAAA;AAAA,eADF;AASA;;AACF,SAAK,UAAL;AACEG,MAAAA,YAAY,gBACV,oDACMD,KAAK,CAACG,aADZ;AAEE,QAAA,KAAK,EAAEH,KAAK,CAACF,KAFf;AAGE,QAAA,QAAQ,EAAEE,KAAK,CAACI,OAHlB;AAIE,QAAA,IAAI,EAAEJ,KAAK,CAACU;AAJd;AAAA;AAAA;AAAA;AAAA,eADF;AAQA;;AACF;AACET,MAAAA,YAAY,gBAAG,iDAAWD,KAAX;AAAkB,QAAA,KAAK,EAAEA,KAAK,CAACF;AAA/B;AAAA;AAAA;AAAA;AAAA,eAAf;AAjCJ;;AAmCA,sBACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAEE,KAAK,CAACW,KADf;AAEE,IAAA,SAAS,YAAKd,kBAAkB,CAACG,KAAK,CAACF,KAAP,CAAvB,CAFX;AAAA,eAIGG,YAJH,eAKE;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,aALF,eAME;AAAO,MAAA,OAAO,EAAED,KAAK,CAACY,KAAtB;AAAA,sBAA+BZ,KAAK,CAACY,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CA/CD;;AAiDA,eAAeb,KAAf","sourcesContent":["import React from 'react';\nimport InputField from './Input.style';\n\n// get input focus class\nconst getInputFocusClass = value => {\n  if (value !== '' && value != null) {\n    return 'is-focus';\n  } else {\n    return '';\n  }\n};\n\nconst input = props => {\n  let inputElement;\n  switch (props.elementType) {\n    case 'input':\n      inputElement = (\n        <input\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n          onBlur={props.onBlur}\n        />\n      );\n      break;\n    case 'select':\n      inputElement = (\n        <select value={props.value} onChange={props.changed}>\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.name}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    case 'textarea':\n      inputElement = (\n        <textarea\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n          rows={props.rows}\n        />\n      );\n      break;\n    default:\n      inputElement = <input {...props} value={props.value} />;\n  }\n  return (\n    <InputField\n      style={props.style}\n      className={`${getInputFocusClass(props.value)}`}\n    >\n      {inputElement}\n      <span className=\"highlight\" />\n      <label htmlFor={props.label}> {props.label} </label>\n    </InputField>\n  );\n};\n\nexport default input;\n"]},"metadata":{},"sourceType":"module"}