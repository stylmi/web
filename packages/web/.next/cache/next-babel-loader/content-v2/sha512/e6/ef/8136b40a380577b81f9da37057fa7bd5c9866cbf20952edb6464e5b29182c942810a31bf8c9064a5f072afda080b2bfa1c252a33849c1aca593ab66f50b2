{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/mrcea/Desktop/Nunua/template/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mrcea/Desktop/Nunua/template/packages/web/pages/recent-posts.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { Grid } from 'react-styled-flexboxgrid';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ALL_POST } from 'core/graphql/AllPost.query';\nimport { CURRENCY } from '../Config';\nimport { SINGLE_POST_PAGE } from 'core/navigation/constant';\nimport withLayout from '../hoc/withLayout';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Box from 'reusecore/src/elements/Box';\nimport ListGrid from 'reusecore/src/elements/ListGrid';\nimport CardLoader from '../components/Loader/CardLoader';\nimport PostCard from '../components/PostCard';\nimport NoItemFound from '../components/NoItemFound';\nimport OnError from '../components/OnError';\nimport PageMeta from '../components/PageMeta';\nimport { withApollo } from '../helpers/apollo';\nexport default _c3 = withApollo(_c2 = withLayout(_c = _s(function () {\n  _s();\n\n  var _useState = useState(false),\n      loadingMore = _useState[0],\n      toggleLoading = _useState[1];\n\n  var _useState2 = useState(1),\n      page = _useState2[0],\n      paginate = _useState2[1];\n\n  var QUERY_VARIABLES = {\n    LIMIT: 20\n  };\n\n  var _useQuery = useQuery(GET_ALL_POST, {\n    variables: QUERY_VARIABLES\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore;\n\n  if (error) return /*#__PURE__*/_jsxDEV(OnError, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, _this);\n  var postCount = data && data.posts && data.posts.data ? data.posts.data.length : 1;\n  var posts = data && data.posts && data.posts.data ? data.posts.data : [];\n  var totalPost = data && data.posts ? data.posts.total : 1;\n\n  var renderRecentPost = function renderRecentPost(item) {\n    var title = item.title,\n        slug = item.slug,\n        _item$price = item.price,\n        price = _item$price === void 0 ? 0.0 : _item$price,\n        _item$image = item.image,\n        url = _item$image.url,\n        largeUrl = _item$image.largeUrl;\n    return /*#__PURE__*/_jsxDEV(Link, {\n      href: \"\".concat(SINGLE_POST_PAGE, \"/\").concat(slug),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: /*#__PURE__*/_jsxDEV(PostCard, {\n          currency: CURRENCY,\n          title: title,\n          price: price,\n          imageSrc: [url, largeUrl]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageMeta, {\n      title: \"Recent Post\",\n      description: \"Recent Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 50,\n      mb: 50,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          content: \"Recent Posts\",\n          mb: 40,\n          style: {\n            fontSize: 24,\n            fontWeight: 600,\n            color: '#333333'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, _this), !loading && !posts.length ? /*#__PURE__*/_jsxDEV(NoItemFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, _this) : /*#__PURE__*/_jsxDEV(ListGrid, {\n          data: posts,\n          totalPost: totalPost,\n          postCount: postCount,\n          columnWidth: [1, 1 / 2, 1 / 4],\n          component: renderRecentPost,\n          loading: loading ? loading : loadingMore,\n          loaderColor: \"#ffffff\",\n          placeholder: /*#__PURE__*/_jsxDEV(CardLoader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 30\n          }, _this),\n          limit: QUERY_VARIABLES.LIMIT,\n          handleLoadMore: function handleLoadMore() {\n            toggleLoading(true);\n            paginate(page + 1);\n            fetchMore({\n              variables: {\n                page: page + 1\n              },\n              updateQuery: function updateQuery(prev, _ref) {\n                var fetchMoreResult = _ref.fetchMoreResult;\n\n                if (!fetchMoreResult) {\n                  toggleLoading(false);\n                  return prev;\n                }\n\n                if (postCount && totalPost) {\n                  if (postCount <= totalPost) {\n                    toggleLoading(false);\n                    return Object.assign({}, prev, {\n                      posts: {\n                        data: [].concat(_toConsumableArray(prev.posts.data), _toConsumableArray(fetchMoreResult.posts.data)),\n                        total: totalPost\n                      }\n                    });\n                  }\n                }\n              }\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n}, \"rGadjvRkkFk17R26hi68/KEVYuw=\", false, function () {\n  return [useQuery];\n})));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"%default%$withApollo$withLayout\");\n$RefreshReg$(_c2, \"%default%$withApollo\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/mrcea/Desktop/Nunua/template/packages/web/pages/recent-posts.js"],"names":["useState","Link","Grid","useQuery","GET_ALL_POST","CURRENCY","SINGLE_POST_PAGE","withLayout","Heading","Box","ListGrid","CardLoader","PostCard","NoItemFound","OnError","PageMeta","withApollo","loadingMore","toggleLoading","page","paginate","QUERY_VARIABLES","LIMIT","variables","data","loading","error","fetchMore","postCount","posts","length","totalPost","total","renderRecentPost","item","title","slug","price","image","url","largeUrl","fontSize","fontWeight","color","updateQuery","prev","fetchMoreResult","Object","assign"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Link from 'next/link';\nimport { Grid } from 'react-styled-flexboxgrid';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ALL_POST } from 'core/graphql/AllPost.query';\nimport { CURRENCY } from '../Config';\nimport { SINGLE_POST_PAGE } from 'core/navigation/constant';\nimport withLayout from '../hoc/withLayout';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Box from 'reusecore/src/elements/Box';\nimport ListGrid from 'reusecore/src/elements/ListGrid';\nimport CardLoader from '../components/Loader/CardLoader';\nimport PostCard from '../components/PostCard';\nimport NoItemFound from '../components/NoItemFound';\nimport OnError from '../components/OnError';\nimport PageMeta from '../components/PageMeta';\nimport { withApollo } from '../helpers/apollo';\nexport default withApollo(\n  withLayout(() => {\n    const [loadingMore, toggleLoading] = useState(false);\n    const [page, paginate] = useState(1);\n    const QUERY_VARIABLES = {\n      LIMIT: 20,\n    };\n    const { data, loading, error, fetchMore } = useQuery(GET_ALL_POST, {\n      variables: QUERY_VARIABLES,\n    });\n\n    if (error) return <OnError />;\n\n    const postCount =\n      data && data.posts && data.posts.data ? data.posts.data.length : 1;\n    const posts = data && data.posts && data.posts.data ? data.posts.data : [];\n    const totalPost = data && data.posts ? data.posts.total : 1;\n    const renderRecentPost = item => {\n      const {\n        title,\n        slug,\n        price = 0.0,\n        image: { url, largeUrl },\n      } = item;\n      return (\n        <Link href={`${SINGLE_POST_PAGE}/${slug}`}>\n          <a>\n            <PostCard\n              currency={CURRENCY}\n              title={title}\n              price={price}\n              imageSrc={[url, largeUrl]}\n            />\n          </a>\n        </Link>\n      );\n    };\n    return (\n      <>\n        <PageMeta title=\"Recent Post\" description=\"Recent Post\" />\n        <Box mt={50} mb={50}>\n          <Grid>\n            <Heading\n              content=\"Recent Posts\"\n              mb={40}\n              style={{ fontSize: 24, fontWeight: 600, color: '#333333' }}\n            />\n            {!loading && !posts.length ? (\n              <NoItemFound />\n            ) : (\n              <ListGrid\n                data={posts}\n                totalPost={totalPost}\n                postCount={postCount}\n                columnWidth={[1, 1 / 2, 1 / 4]}\n                component={renderRecentPost}\n                loading={loading ? loading : loadingMore}\n                loaderColor=\"#ffffff\"\n                placeholder={<CardLoader />}\n                limit={QUERY_VARIABLES.LIMIT}\n                handleLoadMore={() => {\n                  toggleLoading(true);\n                  paginate(page + 1);\n                  fetchMore({\n                    variables: {\n                      page: page + 1,\n                    },\n                    updateQuery: (prev, { fetchMoreResult }) => {\n                      if (!fetchMoreResult) {\n                        toggleLoading(false);\n                        return prev;\n                      }\n                      if (postCount && totalPost) {\n                        if (postCount <= totalPost) {\n                          toggleLoading(false);\n                          return Object.assign({}, prev, {\n                            posts: {\n                              data: [\n                                ...prev.posts.data,\n                                ...fetchMoreResult.posts.data,\n                              ],\n                              total: totalPost,\n                            },\n                          });\n                        }\n                      }\n                    },\n                  });\n                }}\n              />\n            )}\n          </Grid>\n        </Box>\n      </>\n    );\n  })\n);\n"]},"metadata":{},"sourceType":"module"}