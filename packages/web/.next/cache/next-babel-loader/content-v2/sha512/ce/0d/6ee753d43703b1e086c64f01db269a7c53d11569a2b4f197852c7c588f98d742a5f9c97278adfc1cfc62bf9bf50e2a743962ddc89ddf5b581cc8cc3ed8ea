{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\olaji\\\\OneDrive\\\\Documents\\\\sellit\\\\template\\\\packages\\\\reusecore\\\\src\\\\elements\\\\Drawer\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport RcDrawer from 'rc-drawer';\nimport 'rc-drawer/assets/index.css';\n\nconst Drawer = (_ref) => {\n  let {\n    className,\n    children,\n    closeButton,\n    closeButtonStyle,\n    drawerHandler,\n    toggleHandler,\n    open\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\", \"closeButton\", \"closeButtonStyle\", \"drawerHandler\", \"toggleHandler\", \"open\"]);\n\n  // Add all classs to an array\n  const addAllClasses = ['reusecore__drawer']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RcDrawer, _objectSpread(_objectSpread({\n      open: open,\n      onMaskClick: toggleHandler,\n      className: addAllClasses.join(' ')\n    }, props), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reusecore-drawer__close\",\n        onClick: toggleHandler,\n        style: closeButtonStyle,\n        children: closeButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), children]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\nDrawer.propTypes = {\n  /** ClassName of the Drawer */\n  className: PropTypes.string,\n\n  /** Used to render icon, button, text or any elements inside the closeButton prop. */\n  closeButton: PropTypes.element,\n\n  /** Set drawer width. Default value is 300px. */\n  width: PropTypes.string,\n\n  /** Set drawer position left || right || top || bottom. */\n  placement: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n\n  /** drawerHandler could be button, icon, string or any component */\n  // drawerHandler: PropTypes.element.isRequired\n  drawerHandler: PropTypes.element\n};\nDrawer.defaultProps = {\n  width: '300px',\n  handler: false,\n  level: null\n};\nexport default Drawer;","map":{"version":3,"sources":["C:/Users/olaji/OneDrive/Documents/sellit/template/packages/reusecore/src/elements/Drawer/index.js"],"names":["React","Fragment","PropTypes","RcDrawer","Drawer","className","children","closeButton","closeButtonStyle","drawerHandler","toggleHandler","open","props","addAllClasses","push","join","propTypes","string","element","width","placement","oneOf","defaultProps","handler","level"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,4BAAP;;AAEA,MAAMC,MAAM,GAAG,UAST;AAAA,MATU;AACdC,IAAAA,SADc;AAEdC,IAAAA,QAFc;AAGdC,IAAAA,WAHc;AAIdC,IAAAA,gBAJc;AAKdC,IAAAA,aALc;AAMdC,IAAAA,aANc;AAOdC,IAAAA;AAPc,GASV;AAAA,MADDC,KACC;;AACJ;AACA,QAAMC,aAAa,GAAG,CAAC,mBAAD,CAAtB,CAFI,CAIJ;;AACA,MAAIR,SAAJ,EAAe;AACbQ,IAAAA,aAAa,CAACC,IAAd,CAAmBT,SAAnB;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEM,IADR;AAEE,MAAA,WAAW,EAAED,aAFf;AAGE,MAAA,SAAS,EAAEG,aAAa,CAACE,IAAd,CAAmB,GAAnB;AAHb,OAIMH,KAJN;AAAA,8BAME;AACE,QAAA,SAAS,EAAC,yBADZ;AAEE,QAAA,OAAO,EAAEF,aAFX;AAGE,QAAA,KAAK,EAAEF,gBAHT;AAAA,kBAKGD;AALH;AAAA;AAAA;AAAA;AAAA,cANF,EAaGD,QAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA5CD;;AA8CAF,MAAM,CAACY,SAAP,GAAmB;AACjB;AACAX,EAAAA,SAAS,EAAEH,SAAS,CAACe,MAFJ;;AAIjB;AACAV,EAAAA,WAAW,EAAEL,SAAS,CAACgB,OALN;;AAOjB;AACAC,EAAAA,KAAK,EAAEjB,SAAS,CAACe,MARA;;AAUjB;AACAG,EAAAA,SAAS,EAAElB,SAAS,CAACmB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,QAAzB,CAAhB,CAXM;;AAajB;AACA;AACAZ,EAAAA,aAAa,EAAEP,SAAS,CAACgB;AAfR,CAAnB;AAkBAd,MAAM,CAACkB,YAAP,GAAsB;AACpBH,EAAAA,KAAK,EAAE,OADa;AAEpBI,EAAAA,OAAO,EAAE,KAFW;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAAtB;AAMA,eAAepB,MAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RcDrawer from 'rc-drawer';\r\nimport 'rc-drawer/assets/index.css';\r\n\r\nconst Drawer = ({\r\n  className,\r\n  children,\r\n  closeButton,\r\n  closeButtonStyle,\r\n  drawerHandler,\r\n  toggleHandler,\r\n  open,\r\n  ...props\r\n}) => {\r\n  // Add all classs to an array\r\n  const addAllClasses = ['reusecore__drawer'];\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClasses.push(className);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <RcDrawer\r\n        open={open}\r\n        onMaskClick={toggleHandler}\r\n        className={addAllClasses.join(' ')}\r\n        {...props}\r\n      >\r\n        <div\r\n          className=\"reusecore-drawer__close\"\r\n          onClick={toggleHandler}\r\n          style={closeButtonStyle}\r\n        >\r\n          {closeButton}\r\n        </div>\r\n        {children}\r\n      </RcDrawer>\r\n      {/* <div\r\n        className=\"reusecore-drawer__handler\"\r\n        style={{ display: 'inline-block' }}\r\n        onClick={toggleHandler}\r\n      >\r\n        {drawerHandler}\r\n      </div> */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDrawer.propTypes = {\r\n  /** ClassName of the Drawer */\r\n  className: PropTypes.string,\r\n\r\n  /** Used to render icon, button, text or any elements inside the closeButton prop. */\r\n  closeButton: PropTypes.element,\r\n\r\n  /** Set drawer width. Default value is 300px. */\r\n  width: PropTypes.string,\r\n\r\n  /** Set drawer position left || right || top || bottom. */\r\n  placement: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\r\n\r\n  /** drawerHandler could be button, icon, string or any component */\r\n  // drawerHandler: PropTypes.element.isRequired\r\n  drawerHandler: PropTypes.element\r\n};\r\n\r\nDrawer.defaultProps = {\r\n  width: '300px',\r\n  handler: false,\r\n  level: null\r\n};\r\n\r\nexport default Drawer;\r\n"]},"metadata":{},"sourceType":"module"}