{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\olaji\\\\OneDrive\\\\Documents\\\\sellit\\\\template\\\\packages\\\\reusecore\\\\src\\\\elements\\\\Button\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonStyle from './button.style';\nimport Loader from '../Loader';\n\nconst Button = (_ref) => {\n  let {\n    type,\n    title,\n    icon,\n    disabled,\n    iconPosition,\n    onClick,\n    loader,\n    loaderColor,\n    isMaterial,\n    isLoading,\n    className\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"type\", \"title\", \"icon\", \"disabled\", \"iconPosition\", \"onClick\", \"loader\", \"loaderColor\", \"isMaterial\", \"isLoading\", \"className\"]);\n\n  // Add all classs to an array\n  const addAllClasses = ['reusecore__button']; // isLoading prop checking\n\n  if (isLoading) {\n    addAllClasses.push('is-loading');\n  } // isMaterial prop checking\n\n\n  if (isMaterial) {\n    addAllClasses.push('is-material');\n  } // className prop checking\n\n\n  if (className) {\n    addAllClasses.push(className);\n  } // Checking button loading state\n\n\n  const buttonIcon = isLoading !== false ? /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loader ? loader : /*#__PURE__*/_jsxDEV(Loader, {\n      loaderColor: loaderColor || '#30C56D'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 28\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this) : icon && /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"btn-icon\",\n    children: icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 15\n  }, this); // set icon position\n\n  const position = iconPosition || 'right';\n  return /*#__PURE__*/_jsxDEV(ButtonStyle, _objectSpread(_objectSpread({\n    type: type,\n    className: addAllClasses.join(' '),\n    icon: icon,\n    disabled: disabled,\n    \"icon-position\": position,\n    onClick: onClick\n  }, props), {}, {\n    children: [position === 'left' && buttonIcon, title && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"btn-text\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), position === 'right' && buttonIcon]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\nButton.propTypes = {\n  /** ClassName of the button */\n  className: PropTypes.string,\n\n  /** Add icon */\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n\n  /** Add icon */\n  icon: PropTypes.object,\n\n  /** Add loader */\n  loader: PropTypes.object,\n\n  /** Add Material effect */\n  isMaterial: PropTypes.bool,\n\n  /** Button Loading state */\n  isLoading: PropTypes.bool,\n\n  /** Button Loading state */\n  loaderColor: PropTypes.string,\n\n  /** If true button will be disabled */\n  disabled: PropTypes.bool,\n\n  /** Adjust your icon and loader position [if you use loader] */\n  iconPosition: PropTypes.oneOf(['left', 'right']),\n\n  /** Variant change button shape */\n  variant: PropTypes.oneOf(['textButton', 'outlined', 'fab', 'extendedFab']),\n\n  /** primary || secondary || warning || error  change text and border color.\r\n   *  And primaryWithBg || secondaryWithBg || warningWithBg || errorWithBg change text, border and background color */\n  colors: PropTypes.oneOf(['primary', 'secondary', 'warning', 'error', 'primaryWithBg', 'secondaryWithBg', 'warningWithBg', 'errorWithBg']),\n\n  /**\r\n   * Gets called when the user clicks on the button\r\n   */\n  onClick: PropTypes.func\n};\nButton.defaultProps = {\n  disabled: false,\n  isMaterial: false,\n  isLoading: false,\n  type: 'button'\n};\nexport default Button;","map":{"version":3,"sources":["C:/Users/olaji/OneDrive/Documents/sellit/template/packages/reusecore/src/elements/Button/index.js"],"names":["React","Fragment","PropTypes","ButtonStyle","Loader","Button","type","title","icon","disabled","iconPosition","onClick","loader","loaderColor","isMaterial","isLoading","className","props","addAllClasses","push","buttonIcon","position","join","propTypes","string","oneOf","object","bool","variant","colors","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonStyle from './button.style';\r\nimport Loader from '../Loader';\r\n\r\nconst Button = ({\r\n  type,\r\n  title,\r\n  icon,\r\n  disabled,\r\n  iconPosition,\r\n  onClick,\r\n  loader,\r\n  loaderColor,\r\n  isMaterial,\r\n  isLoading,\r\n  className,\r\n  ...props\r\n}) => {\r\n  // Add all classs to an array\r\n  const addAllClasses = ['reusecore__button'];\r\n\r\n  // isLoading prop checking\r\n  if (isLoading) {\r\n    addAllClasses.push('is-loading');\r\n  }\r\n\r\n  // isMaterial prop checking\r\n  if (isMaterial) {\r\n    addAllClasses.push('is-material');\r\n  }\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClasses.push(className);\r\n  }\r\n\r\n  // Checking button loading state\r\n  const buttonIcon =\r\n    isLoading !== false ? (\r\n      <Fragment>\r\n        {loader ? loader : <Loader loaderColor={loaderColor || '#30C56D'} />}\r\n      </Fragment>\r\n    ) : (\r\n      icon && <span className=\"btn-icon\">{icon}</span>\r\n    );\r\n\r\n  // set icon position\r\n  const position = iconPosition || 'right';\r\n\r\n  return (\r\n    <ButtonStyle\r\n      type={type}\r\n      className={addAllClasses.join(' ')}\r\n      icon={icon}\r\n      disabled={disabled}\r\n      icon-position={position}\r\n      onClick={onClick}\r\n      {...props}\r\n    >\r\n      {position === 'left' && buttonIcon}\r\n      {title && <span className=\"btn-text\">{title}</span>}\r\n      {position === 'right' && buttonIcon}\r\n    </ButtonStyle>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  /** ClassName of the button */\r\n  className: PropTypes.string,\r\n\r\n  /** Add icon */\r\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\r\n\r\n  /** Add icon */\r\n  icon: PropTypes.object,\r\n\r\n  /** Add loader */\r\n  loader: PropTypes.object,\r\n\r\n  /** Add Material effect */\r\n  isMaterial: PropTypes.bool,\r\n\r\n  /** Button Loading state */\r\n  isLoading: PropTypes.bool,\r\n\r\n  /** Button Loading state */\r\n  loaderColor: PropTypes.string,\r\n\r\n  /** If true button will be disabled */\r\n  disabled: PropTypes.bool,\r\n\r\n  /** Adjust your icon and loader position [if you use loader] */\r\n  iconPosition: PropTypes.oneOf(['left', 'right']),\r\n\r\n  /** Variant change button shape */\r\n  variant: PropTypes.oneOf(['textButton', 'outlined', 'fab', 'extendedFab']),\r\n\r\n  /** primary || secondary || warning || error  change text and border color.\r\n   *  And primaryWithBg || secondaryWithBg || warningWithBg || errorWithBg change text, border and background color */\r\n  colors: PropTypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'warning',\r\n    'error',\r\n    'primaryWithBg',\r\n    'secondaryWithBg',\r\n    'warningWithBg',\r\n    'errorWithBg'\r\n  ]),\r\n\r\n  /**\r\n   * Gets called when the user clicks on the button\r\n   */\r\n  onClick: PropTypes.func\r\n};\r\n\r\nButton.defaultProps = {\r\n  disabled: false,\r\n  isMaterial: false,\r\n  isLoading: false,\r\n  type: 'button'\r\n};\r\n\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}