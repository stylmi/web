{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\olaji\\\\OneDrive\\\\Documents\\\\sellit\\\\template\\\\packages\\\\web\\\\pages\\\\post\\\\[slug].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport SinglePost from '../../containers/SinglePost';\nimport withLayout from '../../hoc/withLayout';\nimport { Modal } from '@redq/reuse-modal';\nimport PageMeta from '../../components/PageMeta';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_POST } from '../../../core/graphql/Post.query';\nimport { useRouter } from 'next/router';\nimport { withApollo } from '../../helpers/apollo';\nexport default _c3 = withApollo(_c2 = withLayout(_c = _s(function (_ref) {\n  _s();\n\n  var isLoggedIn = _ref.isLoggedIn,\n      userId = _ref.userId,\n      location = _ref.location;\n\n  var _useRouter = useRouter(),\n      slug = _useRouter.query.slug;\n\n  var QUERY_VARIABLES = {\n    lat: location && location.lat ? location.lat : null,\n    lng: location && location.lng ? location.lng : null,\n    LIMIT: 4,\n    slug: slug\n  };\n\n  var _useQuery = useQuery(GET_POST, {\n    variables: QUERY_VARIABLES\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, _this);\n  var title = data && data.post ? data.post.title : '';\n  var content = data && data.post ? data.post.content : '';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageMeta, {\n      title: title,\n      description: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(SinglePost, {\n      data: data,\n      loading: loading,\n      userId: userId,\n      isLoggedIn: isLoggedIn,\n      error: error,\n      QUERY_VARIABLES: QUERY_VARIABLES\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n}, \"Sv139nF6+hfzNb/oTRGqJ8rgW1w=\", false, function () {\n  return [useRouter, useQuery];\n})));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"%default%$withApollo$withLayout\");\n$RefreshReg$(_c2, \"%default%$withApollo\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["C:/Users/olaji/OneDrive/Documents/sellit/template/packages/web/pages/post/[slug].js"],"names":["SinglePost","withLayout","Modal","PageMeta","useQuery","GET_POST","useRouter","withApollo","isLoggedIn","userId","location","slug","query","QUERY_VARIABLES","lat","lng","LIMIT","variables","data","loading","error","message","title","post","content"],"mappings":";;;;;;;AAAA,OAAOA,UAAP,MAAuB,6BAAvB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,qBAAeA,UAAU,OACvBN,UAAU,SAAC,gBAAsC;AAAA;;AAAA,MAAnCO,UAAmC,QAAnCA,UAAmC;AAAA,MAAvBC,MAAuB,QAAvBA,MAAuB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,mBAG3CJ,SAAS,EAHkC;AAAA,MAEpCK,IAFoC,cAE7CC,KAF6C,CAEpCD,IAFoC;;AAK/C,MAAIE,eAAe,GAAG;AACpBC,IAAAA,GAAG,EAAEJ,QAAQ,IAAIA,QAAQ,CAACI,GAArB,GAA2BJ,QAAQ,CAACI,GAApC,GAA0C,IAD3B;AAEpBC,IAAAA,GAAG,EAAEL,QAAQ,IAAIA,QAAQ,CAACK,GAArB,GAA2BL,QAAQ,CAACK,GAApC,GAA0C,IAF3B;AAGpBC,IAAAA,KAAK,EAAE,CAHa;AAIpBL,IAAAA,IAAI,EAAEA;AAJc,GAAtB;;AAL+C,kBAYdP,QAAQ,CAACC,QAAD,EAAW;AAClDY,IAAAA,SAAS,EAAEJ;AADuC,GAAX,CAZM;AAAA,MAYvCK,IAZuC,aAYvCA,IAZuC;AAAA,MAYjCC,OAZiC,aAYjCA,OAZiC;AAAA,MAYxBC,KAZwB,aAYxBA,KAZwB;;AAe/C,MAAIA,KAAJ,EAAW,oBAAO;AAAA,cAAIA,KAAK,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,WAAP;AAEX,MAAMC,KAAK,GAAGJ,IAAI,IAAIA,IAAI,CAACK,IAAb,GAAoBL,IAAI,CAACK,IAAL,CAAUD,KAA9B,GAAsC,EAApD;AACA,MAAME,OAAO,GAAGN,IAAI,IAAIA,IAAI,CAACK,IAAb,GAAoBL,IAAI,CAACK,IAAL,CAAUC,OAA9B,GAAwC,EAAxD;AAEA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEF,KAAjB;AAAwB,MAAA,WAAW,EAAEE;AAArC;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,UAAD;AACE,MAAA,IAAI,EAAEN,IADR;AAEE,MAAA,OAAO,EAAEC,OAFX;AAGE,MAAA,MAAM,EAAEV,MAHV;AAIE,MAAA,UAAU,EAAED,UAJd;AAKE,MAAA,KAAK,EAAEY,KALT;AAME,MAAA,eAAe,EAAEP;AANnB;AAAA;AAAA;AAAA;AAAA,aAFF,eAUE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,aAVF;AAAA,kBADF;AAcD,CAlCS;AAAA,UAGJP,SAHI,EAYyBF,QAZzB;AAAA,GADa,CAAzB","sourcesContent":["import SinglePost from '../../containers/SinglePost';\r\nimport withLayout from '../../hoc/withLayout';\r\nimport { Modal } from '@redq/reuse-modal';\r\nimport PageMeta from '../../components/PageMeta';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { GET_POST } from '../../../core/graphql/Post.query';\r\nimport { useRouter } from 'next/router';\r\nimport { withApollo } from '../../helpers/apollo';\r\nexport default withApollo(\r\n  withLayout(({ isLoggedIn, userId, location }) => {\r\n    const {\r\n      query: { slug },\r\n    } = useRouter();\r\n\r\n    let QUERY_VARIABLES = {\r\n      lat: location && location.lat ? location.lat : null,\r\n      lng: location && location.lng ? location.lng : null,\r\n      LIMIT: 4,\r\n      slug: slug,\r\n    };\r\n\r\n    const { data, loading, error } = useQuery(GET_POST, {\r\n      variables: QUERY_VARIABLES,\r\n    });\r\n    if (error) return <p>{error.message}</p>;\r\n\r\n    const title = data && data.post ? data.post.title : '';\r\n    const content = data && data.post ? data.post.content : '';\r\n\r\n    return (\r\n      <>\r\n        <PageMeta title={title} description={content} />\r\n        <SinglePost\r\n          data={data}\r\n          loading={loading}\r\n          userId={userId}\r\n          isLoggedIn={isLoggedIn}\r\n          error={error}\r\n          QUERY_VARIABLES={QUERY_VARIABLES}\r\n        />\r\n        <Modal />\r\n      </>\r\n    );\r\n  })\r\n);\r\n"]},"metadata":{},"sourceType":"module"}