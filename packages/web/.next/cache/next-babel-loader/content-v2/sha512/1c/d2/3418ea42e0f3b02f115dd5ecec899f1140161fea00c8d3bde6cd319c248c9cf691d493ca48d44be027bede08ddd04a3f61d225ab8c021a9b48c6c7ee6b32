{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olaji\\\\OneDrive\\\\Documents\\\\sellit\\\\template\\\\packages\\\\web\\\\containers\\\\AddPost\\\\CategoryAndDetailInfo\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport Icon from 'react-icons-kit';\nimport { archive } from 'react-icons-kit/ionicons/archive';\nimport { chevronRight } from 'react-icons-kit/ionicons/chevronRight';\nimport { uploadMultipleImages } from '../../../helpers/uploadMultipleImage';\nimport Box from '../../../../reusecore/src/elements/Box';\nimport Button from '../../../../reusecore/src/elements/Button';\nimport { chevronLeft } from 'react-icons-kit/ionicons/chevronLeft';\nimport Text from '../../../../reusecore/src/elements/Text';\nimport Input from '../../../components/Input';\nimport { ADD_POST } from '../../../../core/graphql/Mutations';\nimport AsyncSelect from 'react-select/async';\nimport { AddPostContext } from '../../../contexts/AddPostContext';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport AuthHelper from '../../../helpers/authHelper';\nimport { GET_CATEGORIES_FOR_DROPDOWN } from '../../../../core/graphql/Category.query';\nconst colourStyles = {\n  control: () => ({\n    display: 'flex',\n    backgroundColor: 'transparent',\n    color: '#8c8c8c',\n    border: '0',\n    borderBottom: '1px solid #e2e2e2'\n  }),\n  valueContainer: base => _objectSpread(_objectSpread({}, base), {}, {\n    padding: '0'\n  }),\n  placeholder: () => ({\n    color: '#8c8c8c'\n  }),\n  indicatorSeparator: () => ({\n    display: 'none'\n  }),\n  input: () => ({\n    color: '#8c8c8c'\n  }),\n  dropdownIndicator: () => ({\n    padding: '8px 0'\n  })\n};\nlet imagesUrl = [];\n\nconst CategoryAndDetailInfo = props => {\n  const {\n    state,\n    dispatch\n  } = useContext(AddPostContext);\n  const {\n    0: btnLoading,\n    1: setBtnLoading\n  } = useState(false);\n  const [postMutation] = useMutation(ADD_POST);\n  const {\n    data,\n    error,\n    loading,\n    fetchMore\n  } = useQuery(GET_CATEGORIES_FOR_DROPDOWN, {\n    variables: {\n      limit: 1000\n    }\n  });\n  const {\n    step,\n    adPost\n  } = state;\n  let options = [];\n\n  if (!loading && data.categories.data.length) {\n    data.categories.data.map((item, index) => {\n      let categoryOptions = _objectSpread(_objectSpread({}, item), {}, {\n        value: item.id,\n        label: item.name\n      });\n\n      options.push(categoryOptions);\n    });\n  }\n\n  const handleDraftingPost = async () => {\n    await AuthHelper.refreshToken();\n    setBtnLoading(true);\n\n    if (adPost.localGallery.length) {\n      imagesUrl = await uploadMultipleImages(adPost.localGallery);\n\n      if (imagesUrl && imagesUrl.length > 0) {\n        dispatch({\n          type: 'UPDATE_FULL_ADPOST',\n          payload: {\n            gallery: adPost.gallery.concat(imagesUrl[0]),\n            image: !adPost.image.url ? imagesUrl[0][0] : adPost.image,\n            localImage: {},\n            localGallery: []\n          }\n        });\n      }\n    } else {\n      try {\n        const data = await postMutation({\n          variables: {\n            post: finalData\n          }\n        });\n        setBtnLoading(false);\n\n        if (!adPost.id) {\n          dispatch({\n            type: 'UPDATE_ADPOST',\n            payload: {\n              key: 'id',\n              value: data.data.addPost.id\n            }\n          });\n        }\n      } catch (error) {\n        setBtnLoading(false);\n      }\n    }\n  };\n\n  const {\n    preImage,\n    preGallery,\n    localImage,\n    localGallery,\n    location\n  } = adPost,\n        prossedAdPostData = _objectWithoutProperties(adPost, [\"preImage\", \"preGallery\", \"localImage\", \"localGallery\", \"location\"]);\n\n  let finalData = prossedAdPostData;\n\n  if (location && location.lat) {\n    finalData = _objectSpread(_objectSpread({}, prossedAdPostData), {}, {\n      location\n    });\n  }\n\n  useEffect(() => {\n    (async function () {\n      if (imagesUrl.length) {\n        try {\n          const data = await postMutation({\n            variables: {\n              post: finalData\n            }\n          });\n          setBtnLoading(false);\n\n          if (!adPost.id) {\n            dispatch({\n              type: 'UPDATE_ADPOST',\n              payload: {\n                key: 'id',\n                value: data.data.addPost.id\n              }\n            });\n          }\n        } catch (error) {\n          setBtnLoading(false);\n        }\n      }\n    })();\n  }, [prossedAdPostData.gallery]);\n\n  const loadOptions = async (fetchMore, inputValue, callback, loading) => {\n    const filteredData = options.filter(item => item.slug.includes(inputValue));\n    callback(filteredData);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Text, {\n    content: \"Select the preferred categories\",\n    pb: 20,\n    style: {\n      fontSize: 16,\n      fontWeight: 400,\n      color: '#595959'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), __jsx(AsyncSelect, {\n    isMulti: true,\n    defaultValue: adPost.categories ? adPost.categories : [],\n    defaultOptions: options,\n    styles: colourStyles,\n    loadOptions: (inputValue, callback) => loadOptions(fetchMore, inputValue, callback, loading),\n    onChange: selectedCategories => {\n      dispatch({\n        type: 'UPDATE_ADPOST',\n        payload: {\n          key: 'categories',\n          value: selectedCategories\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }), __jsx(Input, {\n    elementType: \"textarea\",\n    rows: 4,\n    elementConfig: {\n      type: 'text',\n      required: 'required'\n    },\n    label: \"Details\",\n    changed: details => dispatch({\n      type: 'UPDATE_ADPOST',\n      payload: {\n        key: 'content',\n        value: details.target.value\n      }\n    }),\n    value: adPost.content,\n    style: {\n      marginTop: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    flexBox: true,\n    justifyContent: \"space-between\",\n    mt: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    title: \"Save\",\n    iconPosition: \"left\",\n    icon: __jsx(Icon, {\n      icon: archive,\n      size: 18,\n      color: \"#8C8C8C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }),\n    onClick: handleDraftingPost,\n    variant: \"textButton\",\n    isLoading: btnLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    title: \"Previous\",\n    iconPosition: \"left\",\n    onClick: () => dispatch({\n      type: 'UPDATE_STEP',\n      payload: {\n        step: step - 1\n      }\n    }),\n    disabled: btnLoading,\n    icon: __jsx(Icon, {\n      icon: chevronLeft,\n      size: 14,\n      color: \"#8C8C8C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }),\n    variant: \"textButton\",\n    mr: 30,\n    ml: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    title: \"Next\",\n    iconPosition: \"right\",\n    disabled: adPost.categories.length === 0 || btnLoading,\n    onClick: () => dispatch({\n      type: 'UPDATE_STEP',\n      payload: {\n        step: step + 1\n      }\n    }),\n    icon: __jsx(Icon, {\n      icon: chevronRight,\n      size: 21,\n      color: \"#ffffff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }),\n    style: {\n      backgroundColor: adPost.categories.length === 0 || btnLoading ? '#e2e2e2' : '#30C56D'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default CategoryAndDetailInfo;","map":{"version":3,"sources":["C:/Users/olaji/OneDrive/Documents/sellit/template/packages/web/containers/AddPost/CategoryAndDetailInfo/index.js"],"names":["React","useState","useContext","useEffect","Icon","archive","chevronRight","uploadMultipleImages","Box","Button","chevronLeft","Text","Input","ADD_POST","AsyncSelect","AddPostContext","useQuery","useMutation","AuthHelper","GET_CATEGORIES_FOR_DROPDOWN","colourStyles","control","display","backgroundColor","color","border","borderBottom","valueContainer","base","padding","placeholder","indicatorSeparator","input","dropdownIndicator","imagesUrl","CategoryAndDetailInfo","props","state","dispatch","btnLoading","setBtnLoading","postMutation","data","error","loading","fetchMore","variables","limit","step","adPost","options","categories","length","map","item","index","categoryOptions","value","id","label","name","push","handleDraftingPost","refreshToken","localGallery","type","payload","gallery","concat","image","url","localImage","post","finalData","key","addPost","preImage","preGallery","location","prossedAdPostData","lat","loadOptions","inputValue","callback","filteredData","filter","slug","includes","fontSize","fontWeight","selectedCategories","required","details","target","content","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport Icon from 'react-icons-kit';\r\nimport { archive } from 'react-icons-kit/ionicons/archive';\r\nimport { chevronRight } from 'react-icons-kit/ionicons/chevronRight';\r\nimport { uploadMultipleImages } from '../../../helpers/uploadMultipleImage';\r\nimport Box from '../../../../reusecore/src/elements/Box';\r\nimport Button from '../../../../reusecore/src/elements/Button';\r\nimport { chevronLeft } from 'react-icons-kit/ionicons/chevronLeft';\r\nimport Text from '../../../../reusecore/src/elements/Text';\r\nimport Input from '../../../components/Input';\r\nimport { ADD_POST } from '../../../../core/graphql/Mutations';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { AddPostContext } from '../../../contexts/AddPostContext';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport AuthHelper from '../../../helpers/authHelper';\r\nimport { GET_CATEGORIES_FOR_DROPDOWN } from '../../../../core/graphql/Category.query';\r\n\r\nconst colourStyles = {\r\n  control: () => ({\r\n    display: 'flex',\r\n    backgroundColor: 'transparent',\r\n    color: '#8c8c8c',\r\n    border: '0',\r\n    borderBottom: '1px solid #e2e2e2',\r\n  }),\r\n  valueContainer: base => ({\r\n    ...base,\r\n    padding: '0',\r\n  }),\r\n  placeholder: () => ({\r\n    color: '#8c8c8c',\r\n  }),\r\n  indicatorSeparator: () => ({\r\n    display: 'none',\r\n  }),\r\n  input: () => ({\r\n    color: '#8c8c8c',\r\n  }),\r\n  dropdownIndicator: () => ({\r\n    padding: '8px 0',\r\n  }),\r\n};\r\n\r\nlet imagesUrl = [];\r\nconst CategoryAndDetailInfo = props => {\r\n  const { state, dispatch } = useContext(AddPostContext);\r\n  const [btnLoading, setBtnLoading] = useState(false);\r\n  const [postMutation] = useMutation(ADD_POST);\r\n  const { data, error, loading, fetchMore } = useQuery(\r\n    GET_CATEGORIES_FOR_DROPDOWN,\r\n    {\r\n      variables: {\r\n        limit: 1000,\r\n      },\r\n    }\r\n  );\r\n  const { step, adPost } = state;\r\n  let options = [];\r\n  if (!loading && data.categories.data.length) {\r\n    data.categories.data.map((item, index) => {\r\n      let categoryOptions = { ...item, value: item.id, label: item.name };\r\n      options.push(categoryOptions);\r\n    });\r\n  }\r\n\r\n  const handleDraftingPost = async () => {\r\n    await AuthHelper.refreshToken();\r\n    setBtnLoading(true);\r\n    if (adPost.localGallery.length) {\r\n      imagesUrl = await uploadMultipleImages(adPost.localGallery);\r\n      if (imagesUrl && imagesUrl.length > 0) {\r\n        dispatch({\r\n          type: 'UPDATE_FULL_ADPOST',\r\n          payload: {\r\n            gallery: adPost.gallery.concat(imagesUrl[0]),\r\n            image: !adPost.image.url ? imagesUrl[0][0] : adPost.image,\r\n            localImage: {},\r\n            localGallery: [],\r\n          },\r\n        });\r\n      }\r\n    } else {\r\n      try {\r\n        const data = await postMutation({\r\n          variables: {\r\n            post: finalData,\r\n          },\r\n        });\r\n        setBtnLoading(false);\r\n        if (!adPost.id) {\r\n          dispatch({\r\n            type: 'UPDATE_ADPOST',\r\n            payload: { key: 'id', value: data.data.addPost.id },\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setBtnLoading(false);\r\n      }\r\n    }\r\n  };\r\n  const {\r\n    preImage,\r\n    preGallery,\r\n    localImage,\r\n    localGallery,\r\n    location,\r\n    ...prossedAdPostData\r\n  } = adPost;\r\n  let finalData = prossedAdPostData;\r\n  if (location && location.lat) {\r\n    finalData = {\r\n      ...prossedAdPostData,\r\n      location,\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async function() {\r\n      if (imagesUrl.length) {\r\n        try {\r\n          const data = await postMutation({\r\n            variables: {\r\n              post: finalData,\r\n            },\r\n          });\r\n          setBtnLoading(false);\r\n          if (!adPost.id) {\r\n            dispatch({\r\n              type: 'UPDATE_ADPOST',\r\n              payload: { key: 'id', value: data.data.addPost.id },\r\n            });\r\n          }\r\n        } catch (error) {\r\n          setBtnLoading(false);\r\n        }\r\n      }\r\n    })();\r\n  }, [prossedAdPostData.gallery]);\r\n\r\n  const loadOptions = async (fetchMore, inputValue, callback, loading) => {\r\n    const filteredData = options.filter(item => item.slug.includes(inputValue));\r\n    callback(filteredData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Text\r\n        content=\"Select the preferred categories\"\r\n        pb={20}\r\n        style={{ fontSize: 16, fontWeight: 400, color: '#595959' }}\r\n      />\r\n      <AsyncSelect\r\n        isMulti={true}\r\n        defaultValue={adPost.categories ? adPost.categories : []}\r\n        defaultOptions={options}\r\n        styles={colourStyles}\r\n        loadOptions={(inputValue, callback) =>\r\n          loadOptions(fetchMore, inputValue, callback, loading)\r\n        }\r\n        onChange={selectedCategories => {\r\n          dispatch({\r\n            type: 'UPDATE_ADPOST',\r\n            payload: {\r\n              key: 'categories',\r\n              value: selectedCategories,\r\n            },\r\n          });\r\n        }}\r\n      />\r\n      <Input\r\n        elementType=\"textarea\"\r\n        rows={4}\r\n        elementConfig={{\r\n          type: 'text',\r\n          required: 'required',\r\n        }}\r\n        label=\"Details\"\r\n        changed={details =>\r\n          dispatch({\r\n            type: 'UPDATE_ADPOST',\r\n            payload: { key: 'content', value: details.target.value },\r\n          })\r\n        }\r\n        value={adPost.content}\r\n        style={{\r\n          marginTop: 40,\r\n        }}\r\n      />\r\n\r\n      <Box flexBox justifyContent=\"space-between\" mt={40}>\r\n        <Button\r\n          title=\"Save\"\r\n          iconPosition=\"left\"\r\n          icon={<Icon icon={archive} size={18} color=\"#8C8C8C\" />}\r\n          onClick={handleDraftingPost}\r\n          variant=\"textButton\"\r\n          isLoading={btnLoading}\r\n        />\r\n        <Button\r\n          title=\"Previous\"\r\n          iconPosition=\"left\"\r\n          onClick={() =>\r\n            dispatch({\r\n              type: 'UPDATE_STEP',\r\n              payload: { step: step - 1 },\r\n            })\r\n          }\r\n          disabled={btnLoading}\r\n          icon={<Icon icon={chevronLeft} size={14} color=\"#8C8C8C\" />}\r\n          variant=\"textButton\"\r\n          mr={30}\r\n          ml=\"auto\"\r\n        />\r\n        <Button\r\n          title=\"Next\"\r\n          iconPosition=\"right\"\r\n          disabled={adPost.categories.length === 0 || btnLoading}\r\n          onClick={() =>\r\n            dispatch({\r\n              type: 'UPDATE_STEP',\r\n              payload: { step: step + 1 },\r\n            })\r\n          }\r\n          icon={<Icon icon={chevronRight} size={21} color=\"#ffffff\" />}\r\n          style={{\r\n            backgroundColor:\r\n              adPost.categories.length === 0 || btnLoading\r\n                ? '#e2e2e2'\r\n                : '#30C56D',\r\n          }}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryAndDetailInfo;\r\n"]},"metadata":{},"sourceType":"module"}