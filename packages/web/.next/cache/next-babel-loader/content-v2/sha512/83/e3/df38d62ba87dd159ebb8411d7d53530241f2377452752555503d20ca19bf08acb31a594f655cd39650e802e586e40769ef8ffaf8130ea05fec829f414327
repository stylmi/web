{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mrcea/Desktop/Nunua/template/packages/web/containers/Home/PostByLocation/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Link from 'next/link';\nimport { CURRENCY } from '../../../Config';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_NEAREST_POST } from 'core/graphql/NearestPost.query';\nimport { NEAREST_POST_PAGE, SINGLE_POST_PAGE } from 'core/navigation/constant';\nimport { PostLoader } from '../../../components/Placeholder';\nimport ListGrid from 'reusecore/src/elements/ListGrid';\nimport Box from 'reusecore/src/elements/Box';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Button from 'reusecore/src/elements/Button';\nimport PostCard from '../../../components/PostCard';\nimport NoItemFound from '../../../components/NoItemFound';\nimport OnError from '../../../components/OnError';\nimport { LocationContext } from '../../../contexts/HomepageContext';\nimport { GET_POST_BY_LOCATION } from '../../../../core/graphql/Post.query';\n\nvar PostByLocation = function PostByLocation(_ref) {\n  _s();\n\n  var getLocation = _ref.getLocation;\n\n  var _useContext = useContext(LocationContext),\n      location = _useContext.location; // QUERY SECTION  \n\n\n  console.log(location);\n  var QUERY_VARIABLES = {\n    page: 1,\n    LIMIT: 12,\n    location: location\n  };\n\n  var _useQuery = useQuery(GET_POST_BY_LOCATION, {\n    variables: QUERY_VARIABLES\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; // Error Rendering.\n\n\n  if (error) return /*#__PURE__*/_jsxDEV(OnError, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, _this); // Extract Post Data\n\n  var nearestPost = data && data.nearest ? data.nearest.data : []; // Post Loop Control Area\n\n  var renderNearestPost = function renderNearestPost(item) {\n    var price = item.price,\n        _item$image = item.image,\n        url = _item$image.url,\n        largeUrl = _item$image.largeUrl,\n        title = item.title,\n        slug = item.slug;\n    return /*#__PURE__*/_jsxDEV(Link, {\n      href: \"\".concat(SINGLE_POST_PAGE, \"/[slug]\"),\n      as: \"\".concat(SINGLE_POST_PAGE, \"/\").concat(slug),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: /*#__PURE__*/_jsxDEV(PostCard, {\n          currency: CURRENCY,\n          title: title,\n          price: price,\n          imageSrc: [url, largeUrl]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      flexBox: true,\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        content: \"Products in \".concat(location),\n        mb: 0,\n        fontSize: 20,\n        fontWeight: 600\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        href: NEAREST_POST_PAGE,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            title: \"See all\",\n            color: \"#8c8c8c\",\n            fontWeight: 500,\n            variant: \"textButton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: !nearestPost ? /*#__PURE__*/_jsxDEV(NoItemFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(ListGrid, {\n        data: nearestPost,\n        columnWidth: [1, 1 / 2, 1 / 3, 1 / 4],\n        limit: QUERY_VARIABLES.LIMIT,\n        component: renderNearestPost,\n        loading: loading,\n        placeholder: /*#__PURE__*/_jsxDEV(PostLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 26\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(PostByLocation, \"0kzD65yMZqdRYFOSkZxqK0dyEsQ=\", false, function () {\n  return [useQuery];\n});\n\n_c = PostByLocation;\nexport default PostByLocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostByLocation\");","map":{"version":3,"sources":["/Users/mrcea/Desktop/Nunua/template/packages/web/containers/Home/PostByLocation/index.js"],"names":["React","useContext","Link","CURRENCY","useQuery","GET_NEAREST_POST","NEAREST_POST_PAGE","SINGLE_POST_PAGE","PostLoader","ListGrid","Box","Heading","Button","PostCard","NoItemFound","OnError","LocationContext","GET_POST_BY_LOCATION","PostByLocation","getLocation","location","console","log","QUERY_VARIABLES","page","LIMIT","variables","data","loading","error","nearestPost","nearest","renderNearestPost","item","price","image","url","largeUrl","title","slug"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport Link from 'next/link';\nimport { CURRENCY } from '../../../Config';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_NEAREST_POST } from 'core/graphql/NearestPost.query';\nimport { NEAREST_POST_PAGE, SINGLE_POST_PAGE } from 'core/navigation/constant';\nimport { PostLoader } from '../../../components/Placeholder';\nimport ListGrid from 'reusecore/src/elements/ListGrid';\nimport Box from 'reusecore/src/elements/Box';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Button from 'reusecore/src/elements/Button';\nimport PostCard from '../../../components/PostCard';\nimport NoItemFound from '../../../components/NoItemFound';\nimport OnError from '../../../components/OnError';\nimport { LocationContext } from '../../../contexts/HomepageContext';\nimport { GET_POST_BY_LOCATION } from '../../../../core/graphql/Post.query';\n\nconst PostByLocation = ({getLocation}) => {\n    const {location} = useContext(LocationContext)\n  // QUERY SECTION  \n  console.log(location)\n  const QUERY_VARIABLES = {\n    page: 1,\n    LIMIT: 12,\n    location,\n  };\n  const { data, loading, error } = useQuery(GET_POST_BY_LOCATION, {\n    variables: QUERY_VARIABLES,\n  });\n\n\n  // Error Rendering.\n  if (error) return <OnError />;\n  // Extract Post Data\n  const nearestPost = data && data.nearest ? data.nearest.data : [];\n\n  // Post Loop Control Area\n  const renderNearestPost = item => {\n    const {\n      price,\n      image: { url, largeUrl },\n      title,\n      slug,\n    } = item;\n    return (\n      <Link\n        href={`${SINGLE_POST_PAGE}/[slug]`}\n        as={`${SINGLE_POST_PAGE}/${slug}`}\n      >\n        <a>\n          <PostCard\n            currency={CURRENCY}\n            title={title}\n            price={price}\n            imageSrc={[url, largeUrl]}\n          />\n        </a>\n      </Link>\n    );\n  };\n\n  return (\n    <>\n      <Box flexBox justifyContent=\"space-between\" alignItems=\"center\">\n        <Heading content={`Products in ${location}`} mb={0} fontSize={20} fontWeight={600} />\n        <Link href={NEAREST_POST_PAGE}>\n          <a>\n            <Button\n              title=\"See all\"\n              color=\"#8c8c8c\"\n              fontWeight={500}\n              variant=\"textButton\"\n            />\n          </a>\n        </Link>\n      </Box>\n      <Box mt={20}>\n        {!nearestPost ? (\n          <NoItemFound />\n        ) : (\n          <ListGrid\n            data={nearestPost}\n            columnWidth={[1, 1 / 2, 1 / 3, 1 / 4]}\n            limit={QUERY_VARIABLES.LIMIT}\n            component={renderNearestPost}\n            loading={loading}\n            placeholder={<PostLoader />}\n          />\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default PostByLocation;\n"]},"metadata":{},"sourceType":"module"}