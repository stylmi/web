{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olaji\\\\OneDrive\\\\Documents\\\\sellit\\\\template\\\\packages\\\\web\\\\containers\\\\Home\\\\Categories\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { Row, Col } from 'react-styled-flexboxgrid';\nimport { GET_CATEGORIES } from '../../../../core/graphql/Category.query';\nimport { SINGLE_CATEGORY_PAGE } from '../../../../core/navigation/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport CategoryLoader from '../../../components/Loader/CategoryLoader';\nimport { CategoryGridCard as CategoryGridCardComp } from '../../../components/CategoryCard';\nimport ListGridComp from '../../../../reusecore/src/elements/ListGrid';\nimport NoItemFound from '../../../components/NoItemFound';\nimport OnError from '../../../components/OnError';\nimport styled from 'styled-components';\nconst ListGrid = styled(ListGridComp).withConfig({\n  displayName: \"Categories__ListGrid\",\n  componentId: \"sc-1w382l2-0\"\n})([\".singleGridBox{margin-right:-1px;margin-bottom:-1px;transition:all ease 0.3s;&:hover{position:relative;z-index:1;box-shadow:rgba(39,79,117,0.2) 0px 40px 90px -30px;}}@media only screen and (max-width:767px){flex-wrap:nowrap;overflow-x:auto;padding-bottom:10px;}\"]);\nconst CategoryGridCard = styled(CategoryGridCardComp).withConfig({\n  displayName: \"Categories__CategoryGridCard\",\n  componentId: \"sc-1w382l2-1\"\n})([\"height:100%;@media only screen and (max-width:767px){background-color:transparent;border:0;padding:0 32px;min-height:auto;}\"]);\nexport default function CategoryPost() {\n  const QUERY_VARIABLES = {\n    LIMIT: 8\n  };\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_CATEGORIES, {\n    variables: QUERY_VARIABLES\n  });\n  if (error) return __jsx(OnError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  });\n  const categories = !loading && data && data.categories ? data.categories.data : [];\n  categories.sort((a, b) => b.posts.total - a.posts.total);\n\n  const renderCategoryItem = item => {\n    const {\n      name,\n      image: {\n        url\n      },\n      slug\n    } = item;\n    return __jsx(Link, {\n      href: `${SINGLE_CATEGORY_PAGE}/[slug]`,\n      as: `${SINGLE_CATEGORY_PAGE}/${slug}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, __jsx(\"a\", {\n      style: {\n        height: '100%',\n        display: 'block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, __jsx(CategoryGridCard, {\n      imageSrc: url,\n      title: name,\n      style: {\n        marginRight: -1,\n        marginTop: -1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    mdOffset: 3,\n    smOffset: 2,\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, !categories ? __jsx(NoItemFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }) : __jsx(ListGrid, {\n    data: categories,\n    columnWidth: [1, 1 / 2, 1 / 3, 1 / 4],\n    component: renderCategoryItem,\n    loading: loading,\n    placeholder: __jsx(CategoryLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 26\n      }\n    }),\n    limit: QUERY_VARIABLES.LIMIT,\n    componentContainerStyle: {\n      p: 0\n    },\n    componentWrapperStyle: {\n      ml: 0,\n      mr: 0,\n      flexBox: true,\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/olaji/OneDrive/Documents/sellit/template/packages/web/containers/Home/Categories/index.js"],"names":["React","Link","Row","Col","GET_CATEGORIES","SINGLE_CATEGORY_PAGE","useQuery","CategoryLoader","CategoryGridCard","CategoryGridCardComp","ListGridComp","NoItemFound","OnError","styled","ListGrid","CategoryPost","QUERY_VARIABLES","LIMIT","data","loading","error","variables","categories","sort","a","b","posts","total","renderCategoryItem","item","name","image","url","slug","height","display","marginRight","marginTop","p","ml","mr","flexBox","flexWrap"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\nimport { Row, Col } from 'react-styled-flexboxgrid';\r\nimport { GET_CATEGORIES } from '../../../../core/graphql/Category.query';\r\nimport { SINGLE_CATEGORY_PAGE } from '../../../../core/navigation/constant';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport CategoryLoader from '../../../components/Loader/CategoryLoader';\r\nimport { CategoryGridCard as CategoryGridCardComp } from '../../../components/CategoryCard';\r\nimport ListGridComp from '../../../../reusecore/src/elements/ListGrid';\r\nimport NoItemFound from '../../../components/NoItemFound';\r\nimport OnError from '../../../components/OnError';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst ListGrid = styled(ListGridComp)`\r\n  .singleGridBox {\r\n    margin-right: -1px;\r\n    margin-bottom: -1px;\r\n    transition: all ease 0.3s;\r\n    &:hover {\r\n      position: relative;\r\n      z-index: 1;\r\n      box-shadow: rgba(39, 79, 117, 0.2) 0px 40px 90px -30px;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    flex-wrap: nowrap;\r\n    overflow-x: auto;\r\n    padding-bottom: 10px;\r\n  }\r\n`;\r\n\r\nconst CategoryGridCard = styled(CategoryGridCardComp)`\r\n  height: 100%;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    background-color: transparent;\r\n    border: 0;\r\n    padding: 0 32px;\r\n    min-height: auto;\r\n  }\r\n`;\r\n\r\nexport default function CategoryPost() {\r\n  const QUERY_VARIABLES = {\r\n    LIMIT: 8,\r\n  };\r\n  const { data, loading, error } = useQuery(GET_CATEGORIES, {\r\n    variables: QUERY_VARIABLES,\r\n  });\r\n  if (error) return <OnError />;\r\n\r\n  const categories =\r\n    !loading && data && data.categories ? data.categories.data : [];\r\n  categories.sort((a, b) => b.posts.total - a.posts.total);\r\n  const renderCategoryItem = item => {\r\n    const {\r\n      name,\r\n      image: { url },\r\n      slug,\r\n    } = item;\r\n    return (\r\n      <Link\r\n        href={`${SINGLE_CATEGORY_PAGE}/[slug]`}\r\n        as={`${SINGLE_CATEGORY_PAGE}/${slug}`}\r\n      >\r\n        <a style={{ height: '100%', display: 'block' }}>\r\n          <CategoryGridCard\r\n            imageSrc={url}\r\n            title={name}\r\n            style={{\r\n              marginRight: -1,\r\n              marginTop: -1,\r\n            }}\r\n          />\r\n        </a>\r\n      </Link>\r\n    );\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col xs={12} mdOffset={3} smOffset={2} sm={8}>\r\n        {!categories ? (\r\n          <NoItemFound />\r\n        ) : (\r\n          <ListGrid\r\n            data={categories}\r\n            columnWidth={[1, 1 / 2, 1 / 3, 1 / 4]}\r\n            component={renderCategoryItem}\r\n            loading={loading}\r\n            placeholder={<CategoryLoader />}\r\n            limit={QUERY_VARIABLES.LIMIT}\r\n            componentContainerStyle={{ p: 0 }}\r\n            componentWrapperStyle={{\r\n              ml: 0,\r\n              mr: 0,\r\n              flexBox: true,\r\n              flexWrap: 'wrap',\r\n            }}\r\n          />\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}