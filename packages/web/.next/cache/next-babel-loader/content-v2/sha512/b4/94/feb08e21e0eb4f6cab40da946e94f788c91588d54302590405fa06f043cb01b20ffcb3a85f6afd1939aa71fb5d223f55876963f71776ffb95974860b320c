{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olaji\\\\OneDrive\\\\Documents\\\\sellit\\\\template\\\\packages\\\\web\\\\components\\\\Search\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport InputSearch from \"../InputSearch\";\nimport SearchWrapper, { SearchBox } from \"./Search.style\";\nimport Icon from \"react-icons-kit\";\nimport { androidSearch } from \"react-icons-kit/ionicons/androidSearch\";\nimport Button from \"../../../reusecore/src/elements/Button\";\nexport default function Search() {\n  _s();\n\n  var _useState = useState(\"\"),\n      searchValue = _useState[0],\n      setSearchValue = _useState[1];\n\n  var _useState2 = useState(false),\n      toggleSearch = _useState2[0],\n      setToggleSearch = _useState2[1];\n\n  var searchRef = useRef();\n  useEffect(function () {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return function () {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n  var handleSearchInput = function handleSearchInput(event) {\n    setSearchValue(event.target.value);\n  };\n\n  var handleClickOutside = function handleClickOutside(event) {\n    if (searchRef.current && !searchRef.current.contains(event.target)) {\n      setToggleSearch(false);\n    }\n  };\n\n  return __jsx(SearchWrapper, {\n    ref: searchRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }, __jsx(Button, {\n    icon: __jsx(Icon, {\n      icon: androidSearch,\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    }),\n    variant: \"outlined\",\n    color: \"#8C8C8C\",\n    onClick: function onClick() {\n      return setToggleSearch(true);\n    },\n    style: {\n      marginLeft: \"auto\",\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  })), __jsx(SearchBox, {\n    className: toggleSearch ? \"expanded\" : \"collapsed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, __jsx(InputSearch, {\n    type: \"text\",\n    value: searchValue,\n    changed: handleSearchInput,\n    searchText: searchValue,\n    buttonIcon: __jsx(Icon, {\n      icon: androidSearch,\n      size: 21,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }\n    }),\n    placeholder: \"10,000 products available\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  })));\n}\n\n_s(Search, \"FTCVsCT3jhdg6LEEfa22L1SoDlQ=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/olaji/OneDrive/Documents/sellit/template/packages/web/components/Search/index.js"],"names":["React","useEffect","useRef","useState","InputSearch","SearchWrapper","SearchBox","Icon","androidSearch","Button","Search","searchValue","setSearchValue","toggleSearch","setToggleSearch","searchRef","document","addEventListener","handleClickOutside","removeEventListener","handleSearchInput","event","target","value","current","contains","display","marginLeft","border"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,aAAP,IAAwBC,SAAxB,QAAyC,gBAAzC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,aAAT,QAA8B,wCAA9B;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAAA,kBACMP,QAAQ,CAAC,EAAD,CADd;AAAA,MACzBQ,WADyB;AAAA,MACZC,cADY;;AAAA,mBAEQT,QAAQ,CAAC,KAAD,CAFhB;AAAA,MAEzBU,YAFyB;AAAA,MAEXC,eAFW;;AAIhC,MAAIC,SAAS,GAAGb,MAAM,EAAtB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACfe,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCC,kBAAnC,EAAuD,KAAvD;AACA,WAAO,YAAM;AACZF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsCD,kBAAtC,EAA0D,KAA1D;AACA,KAFD;AAGA,GALQ,EAKN,EALM,CAAT;;AAOA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACpCT,IAAAA,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACA,GAFD;;AAIA,MAAML,kBAAkB,GAAG,SAArBA,kBAAqB,CAACG,KAAD,EAAW;AACrC,QAAIN,SAAS,CAACS,OAAV,IAAqB,CAACT,SAAS,CAACS,OAAV,CAAkBC,QAAlB,CAA2BJ,KAAK,CAACC,MAAjC,CAA1B,EAAoE;AACnER,MAAAA,eAAe,CAAC,KAAD,CAAf;AACA;AACD,GAJD;;AAMA,SACC,MAAC,aAAD;AAAe,IAAA,GAAG,EAAEC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,KAAK,EAAE;AAAEW,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,MAAD;AACC,IAAA,IAAI,EAAE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAElB,aAAZ;AAA2B,MAAA,IAAI,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADP;AAEC,IAAA,OAAO,EAAC,UAFT;AAGC,IAAA,KAAK,EAAC,SAHP;AAIC,IAAA,OAAO,EAAE;AAAA,aAAMM,eAAe,CAAC,IAAD,CAArB;AAAA,KAJV;AAKC,IAAA,KAAK,EAAE;AACNa,MAAAA,UAAU,EAAE,MADN;AAENC,MAAAA,MAAM,EAAE;AAFF,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,EAaC,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEf,YAAY,GAAG,UAAH,GAAgB,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,WAAD;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,KAAK,EAAEF,WAFR;AAGC,IAAA,OAAO,EAAES,iBAHV;AAIC,IAAA,UAAU,EAAET,WAJb;AAKC,IAAA,UAAU,EAAE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEH,aAAZ;AAA2B,MAAA,IAAI,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALb;AAMC,IAAA,WAAW,EAAC,2BANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAbD,CADD;AA0BA;;GAjDuBE,M;;KAAAA,M","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport InputSearch from \"../InputSearch\";\r\nimport SearchWrapper, { SearchBox } from \"./Search.style\";\r\nimport Icon from \"react-icons-kit\";\r\nimport { androidSearch } from \"react-icons-kit/ionicons/androidSearch\";\r\nimport Button from \"../../../reusecore/src/elements/Button\";\r\n\r\nexport default function Search() {\r\n\tconst [searchValue, setSearchValue] = useState(\"\");\r\n\tconst [toggleSearch, setToggleSearch] = useState(false);\r\n\r\n\tlet searchRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener(\"click\", handleClickOutside, false);\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"click\", handleClickOutside, false);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tconst handleSearchInput = (event) => {\r\n\t\tsetSearchValue(event.target.value);\r\n\t};\r\n\r\n\tconst handleClickOutside = (event) => {\r\n\t\tif (searchRef.current && !searchRef.current.contains(event.target)) {\r\n\t\t\tsetToggleSearch(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SearchWrapper ref={searchRef}>\r\n\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ticon={<Icon icon={androidSearch} size={24} />}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tcolor=\"#8C8C8C\"\r\n\t\t\t\t\tonClick={() => setToggleSearch(true)}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginLeft: \"auto\",\r\n\t\t\t\t\t\tborder: \"none\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<SearchBox className={toggleSearch ? \"expanded\" : \"collapsed\"}>\r\n\t\t\t\t<InputSearch\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={searchValue}\r\n\t\t\t\t\tchanged={handleSearchInput}\r\n\t\t\t\t\tsearchText={searchValue}\r\n\t\t\t\t\tbuttonIcon={<Icon icon={androidSearch} size={21} />}\r\n\t\t\t\t\tplaceholder=\"10,000 products available\"\r\n\t\t\t\t/>\r\n\t\t\t</SearchBox>\r\n\t\t</SearchWrapper>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}