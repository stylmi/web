{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olaji\\\\OneDrive\\\\Documents\\\\sellit\\\\template\\\\packages\\\\web\\\\containers\\\\AddPost\\\\PickImages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { useMutation } from '@apollo/react-hooks';\nimport AuthHelper from '../../../helpers/authHelper';\nimport { ADD_POST } from '../../../../core/graphql/Mutations';\nimport Text from '../../../../reusecore/src/elements/Text';\nimport Heading from '../../../../reusecore/src/elements/Heading';\nimport Box from '../../../../reusecore/src/elements/Box';\nimport Alert from '../../../../reusecore/src/elements/Alert';\nimport DropArea from '../../../components/DropArea';\nimport { AddPostContext } from '../../../contexts/AddPostContext';\nimport { uploadMultipleImages } from '../../../helpers/uploadMultipleImage';\nimport LoadingIndicator from '../../../components/LoadingIndicator';\nlet imagesUrl = [];\n\nconst PickImages = ({\n  userId\n}) => {\n  const {\n    0: uploadLoader,\n    1: ToggleLoader\n  } = useState(false);\n  const {\n    0: uploadRejected,\n    1: setUploadRejected\n  } = useState(false);\n  const {\n    state,\n    dispatch\n  } = useContext(AddPostContext);\n  const {\n    step,\n    adPost\n  } = state;\n  const authorId = userId;\n  const [postMutation, {\n    data\n  }] = useMutation(ADD_POST);\n\n  const onPreviewDrop = async selectedImages => {\n    setUploadRejected(false);\n\n    if (selectedImages.length) {\n      ToggleLoader(true);\n      await AuthHelper.refreshToken();\n      imagesUrl = await uploadMultipleImages(selectedImages);\n\n      if (imagesUrl && imagesUrl.length > 0) {\n        dispatch({\n          type: 'UPDATE_FULL_ADPOST',\n          payload: {\n            gallery: adPost.gallery.concat(imagesUrl[0]),\n            image: !adPost.image.url ? imagesUrl[0][0] : adPost.image,\n            authorId: authorId,\n            slug: new Date()\n          }\n        });\n      }\n\n      dispatch({\n        type: 'UPDATE_STEP',\n        payload: {\n          step: step + 1\n        }\n      });\n    }\n  };\n\n  const {\n    preImage,\n    preGallery,\n    localImage,\n    localGallery\n  } = adPost,\n        prossedAdPostData = _objectWithoutProperties(adPost, [\"preImage\", \"preGallery\", \"localImage\", \"localGallery\"]);\n\n  useEffect(() => {\n    (async function () {\n      if (imagesUrl.length) {\n        try {\n          const data = await postMutation({\n            variables: {\n              post: prossedAdPostData\n            }\n          });\n          ToggleLoader(false);\n\n          if (!adPost.id) {\n            dispatch({\n              type: 'UPDATE_ADPOST',\n              payload: {\n                key: 'id',\n                value: data.data.addPost.id\n              }\n            });\n          }\n        } catch (error) {\n          ToggleLoader(false);\n        }\n      }\n    })();\n  }, [prossedAdPostData.gallery]);\n\n  const onDropRejected = () => {\n    ToggleLoader(false);\n    setUploadRejected(true);\n  };\n\n  return __jsx(Box, {\n    flexBox: true,\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    style: {\n      minHeight: 'inherit'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    width: \"305px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    as: \"h1\",\n    content: \"Post Ads\",\n    textAlign: \"center\",\n    mb: 40,\n    style: {\n      fontSize: 24,\n      fontWeight: 600,\n      color: '#333333'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), uploadLoader && __jsx(LoadingIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 26\n    }\n  }), uploadRejected && __jsx(Alert, {\n    colors: \"error\",\n    mb: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Maximum upload size 1MB\")), __jsx(Dropzone, {\n    onDrop: onPreviewDrop,\n    maxSize: 1024000,\n    onDropRejected: onDropRejected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => {\n    return __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        outline: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    })), __jsx(DropArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }));\n  }), __jsx(Text, {\n    content: \"World\\u2019s largest free buy and selling advertising platform .\",\n    textAlign: \"center\",\n    lineHeight: \"22px\",\n    style: {\n      fontSize: 16,\n      fontWeight: 400,\n      color: '#595959'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default PickImages;","map":{"version":3,"sources":["C:/Users/olaji/OneDrive/Documents/sellit/template/packages/web/containers/AddPost/PickImages/index.js"],"names":["React","useContext","useEffect","useState","Dropzone","useMutation","AuthHelper","ADD_POST","Text","Heading","Box","Alert","DropArea","AddPostContext","uploadMultipleImages","LoadingIndicator","imagesUrl","PickImages","userId","uploadLoader","ToggleLoader","uploadRejected","setUploadRejected","state","dispatch","step","adPost","authorId","postMutation","data","onPreviewDrop","selectedImages","length","refreshToken","type","payload","gallery","concat","image","url","slug","Date","preImage","preGallery","localImage","localGallery","prossedAdPostData","variables","post","id","key","value","addPost","error","onDropRejected","minHeight","fontSize","fontWeight","color","textAlign","getRootProps","getInputProps","outline"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\nimport AuthHelper from '../../../helpers/authHelper';\r\nimport { ADD_POST } from '../../../../core/graphql/Mutations';\r\nimport Text from '../../../../reusecore/src/elements/Text';\r\nimport Heading from '../../../../reusecore/src/elements/Heading';\r\nimport Box from '../../../../reusecore/src/elements/Box';\r\nimport Alert from '../../../../reusecore/src/elements/Alert';\r\nimport DropArea from '../../../components/DropArea';\r\nimport { AddPostContext } from '../../../contexts/AddPostContext';\r\nimport { uploadMultipleImages } from '../../../helpers/uploadMultipleImage';\r\nimport LoadingIndicator from '../../../components/LoadingIndicator';\r\n\r\nlet imagesUrl = [];\r\nconst PickImages = ({ userId }) => {\r\n  const [uploadLoader, ToggleLoader] = useState(false);\r\n  const [uploadRejected, setUploadRejected] = useState(false);\r\n  const { state, dispatch } = useContext(AddPostContext);\r\n  const { step, adPost } = state;\r\n  const authorId = userId;\r\n  const [postMutation, { data }] = useMutation(ADD_POST);\r\n\r\n  const onPreviewDrop = async selectedImages => {\r\n    setUploadRejected(false);\r\n    if (selectedImages.length) {\r\n      ToggleLoader(true);\r\n      await AuthHelper.refreshToken();\r\n      imagesUrl = await uploadMultipleImages(selectedImages);\r\n      if (imagesUrl && imagesUrl.length > 0) {\r\n        dispatch({\r\n          type: 'UPDATE_FULL_ADPOST',\r\n          payload: {\r\n            gallery: adPost.gallery.concat(imagesUrl[0]),\r\n            image: !adPost.image.url ? imagesUrl[0][0] : adPost.image,\r\n            authorId: authorId,\r\n            slug: new Date(),\r\n          },\r\n        });\r\n      }\r\n\r\n      dispatch({ type: 'UPDATE_STEP', payload: { step: step + 1 } });\r\n    }\r\n  };\r\n  const {\r\n    preImage,\r\n    preGallery,\r\n    localImage,\r\n    localGallery,\r\n    ...prossedAdPostData\r\n  } = adPost;\r\n  useEffect(() => {\r\n    (async function() {\r\n      if (imagesUrl.length) {\r\n        try {\r\n          const data = await postMutation({\r\n            variables: {\r\n              post: prossedAdPostData,\r\n            },\r\n          });\r\n          ToggleLoader(false);\r\n          if (!adPost.id) {\r\n            dispatch({\r\n              type: 'UPDATE_ADPOST',\r\n              payload: { key: 'id', value: data.data.addPost.id },\r\n            });\r\n          }\r\n        } catch (error) {\r\n          ToggleLoader(false);\r\n        }\r\n      }\r\n    })();\r\n  }, [prossedAdPostData.gallery]);\r\n  const onDropRejected = () => {\r\n    ToggleLoader(false);\r\n    setUploadRejected(true);\r\n  };\r\n  return (\r\n    <Box\r\n      flexBox\r\n      height=\"100%\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      style={{\r\n        minHeight: 'inherit',\r\n      }}\r\n    >\r\n      <Box width=\"305px\">\r\n        <Heading\r\n          as=\"h1\"\r\n          content=\"Post Ads\"\r\n          textAlign=\"center\"\r\n          mb={40}\r\n          style={{ fontSize: 24, fontWeight: 600, color: '#333333' }}\r\n        />\r\n        {uploadLoader && <LoadingIndicator />}\r\n        {uploadRejected && (\r\n          <Alert colors=\"error\" mb={30}>\r\n            <div style={{ textAlign: 'center' }}>Maximum upload size 1MB</div>\r\n          </Alert>\r\n        )}\r\n        <Dropzone\r\n          onDrop={onPreviewDrop}\r\n          maxSize={1024000}\r\n          onDropRejected={onDropRejected}\r\n        >\r\n          {({ getRootProps, getInputProps }) => {\r\n            return (\r\n              <div {...getRootProps()} style={{ outline: 0 }}>\r\n                <input {...getInputProps()} />\r\n                <DropArea />\r\n              </div>\r\n            );\r\n          }}\r\n        </Dropzone>\r\n\r\n        <Text\r\n          content=\"World’s largest free buy and selling advertising platform .\"\r\n          textAlign=\"center\"\r\n          lineHeight=\"22px\"\r\n          style={{ fontSize: 16, fontWeight: 400, color: '#595959' }}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PickImages;\r\n"]},"metadata":{},"sourceType":"module"}