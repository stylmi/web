{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\olaji\\\\OneDrive\\\\Documents\\\\sellit\\\\template\\\\packages\\\\web\\\\containers\\\\AddPost\\\\ContactNumberInfo\\\\index.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Icon from 'react-icons-kit';\nimport { chevronRight } from 'react-icons-kit/ionicons/chevronRight';\nimport { chevronLeft } from 'react-icons-kit/ionicons/chevronLeft';\nimport { uploadMultipleImages } from '../../../helpers/uploadMultipleImage';\nimport Box from '../../../../reusecore/src/elements/Box';\nimport Button from '../../../../reusecore/src/elements/Button';\nimport Text from '../../../../reusecore/src/elements/Text';\nimport Dropdown from '../../../components/DropdownSelect';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { ADD_POST } from '../../../../core/graphql/Mutations';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport PublishModal from '../../ModalContainer/PostPublishModal';\nimport AuthHelper from '../../../helpers/authHelper';\nimport Link from 'next/link';\nimport { ACCOUNT_SETTING_PAGE } from '../../../../core/navigation/constant';\nimport { AddPostContext } from '../../../contexts/AddPostContext';\nimport gql from 'graphql-tag';\nconst GET_AUTHOR_MOBILE_NUMBER = gql`\n  query GetAuthorMobile($username: ID!) {\n    author(id: $username) {\n      id\n      mobile {\n        number\n      }\n    }\n  }\n`;\n\nconst publishModal = newPost => {\n  if (newPost && newPost.data && newPost.data.addPost && newPost.data.addPost.status === 'publish') {\n    openModal({\n      config: {\n        disableDragging: false,\n        size: {\n          width: 360,\n          height: 320\n        },\n        enableResizing: {\n          bottom: true,\n          bottomLeft: true,\n          bottomRight: true,\n          left: true,\n          right: true,\n          top: true,\n          topLeft: true,\n          topRight: true\n        }\n      },\n      closeOnClickOutside: true,\n      component: PublishModal,\n      componentProps: {\n        data: {\n          closeModal,\n          title: 'Congrats!!!',\n          message: 'Your account information saved successfully',\n          slug: newPost.data.addPost.slug\n        }\n      }\n    });\n  }\n};\n\nlet imagesUrl = [];\n\nconst ContactNumberInfo = ({\n  userId\n}) => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_AUTHOR_MOBILE_NUMBER, {\n    variables: {\n      username: userId\n    }\n  });\n  const {\n    state,\n    dispatch\n  } = useContext(AddPostContext);\n  const {\n    0: btnLoading,\n    1: setBtnLoading\n  } = useState(false);\n  const {\n    0: publishBtnLoading,\n    1: setPublishBtnLoading\n  } = useState(false);\n  const {\n    step,\n    adPost\n  } = state;\n  const [postMutation] = useMutation(ADD_POST);\n\n  const handlePostSubmit = async () => {\n    await AuthHelper.refreshToken();\n    setPublishBtnLoading(true);\n    dispatch({\n      type: 'UPDATE_ADPOST',\n      payload: {\n        key: 'status',\n        value: 'publish'\n      }\n    });\n\n    if (adPost.localGallery.length) {\n      imagesUrl = await uploadMultipleImages(adPost.localGallery);\n\n      if (imagesUrl && imagesUrl.length > 0) {\n        dispatch({\n          type: 'UPDATE_FULL_ADPOST',\n          payload: {\n            gallery: adPost.gallery.concat(imagesUrl[0]),\n            image: !adPost.image.url ? imagesUrl[0][0] : adPost.image,\n            localImage: {},\n            localGallery: []\n          }\n        });\n      }\n    } else {\n      try {\n        const data = await postMutation({\n          variables: {\n            post: _objectSpread(_objectSpread({}, finalData), {}, {\n              status: 'publish'\n            })\n          }\n        });\n        setPublishBtnLoading(false);\n\n        if (!adPost.id) {\n          dispatch({\n            type: 'UPDATE_ADPOST',\n            payload: {\n              key: 'id',\n              value: data.data.addPost.id\n            }\n          });\n        }\n\n        publishModal(data);\n      } catch (error) {\n        console.log(error, 'error');\n        setPublishBtnLoading(false);\n      }\n    }\n  };\n\n  const {\n    preImage,\n    preGallery,\n    localImage,\n    localGallery,\n    location\n  } = adPost,\n        prossedAdPostData = _objectWithoutProperties(adPost, [\"preImage\", \"preGallery\", \"localImage\", \"localGallery\", \"location\"]);\n\n  let finalData = prossedAdPostData;\n\n  if (location && location.lat) {\n    finalData = _objectSpread(_objectSpread({}, prossedAdPostData), {}, {\n      location\n    });\n  }\n\n  useEffect(() => {\n    (async function () {\n      if (imagesUrl.length) {\n        try {\n          const data = await postMutation({\n            variables: {\n              post: _objectSpread(_objectSpread({}, finalData), {}, {\n                status: 'publish'\n              })\n            }\n          });\n          setPublishBtnLoading(false);\n          setBtnLoading(false);\n\n          if (!adPost.id) {\n            dispatch({\n              type: 'UPDATE_ADPOST',\n              payload: {\n                key: 'id',\n                value: data.data.addPost.id\n              }\n            });\n          }\n\n          publishModal(data);\n        } catch (error) {\n          setPublishBtnLoading(false);\n          setBtnLoading(false);\n        }\n      }\n    })();\n  }, [prossedAdPostData.gallery]);\n  let mobiles = [];\n\n  if (!loading && data.author && data.author.mobile && data.author.mobile.length) {\n    data.author.mobile.map(mobile => {\n      mobiles.push({\n        value: mobile.number,\n        label: mobile.number\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      content: \"Select the mobile number you want as contact\",\n      pb: 20,\n      style: {\n        fontSize: 16,\n        fontWeight: 400,\n        color: '#595959'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), !mobiles.length && !loading ? /*#__PURE__*/_jsxDEV(Link, {\n      href: `${ACCOUNT_SETTING_PAGE}?view=add-mobile-number`,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Add Mobile Number Now\",\n        variant: \"textButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this) : null, mobiles.length && !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        content: \"Select Your Mobile Number\",\n        style: {\n          fontSize: 16,\n          fontWeight: 400,\n          color: '#595959'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        options: mobiles,\n        value: {\n          label: adPost.contactNumber,\n          value: adPost.contactNumber\n        },\n        onChange: (contact, index, options) => {\n          dispatch({\n            type: 'UPDATE_ADPOST',\n            payload: {\n              key: 'contactNumber',\n              value: contact.value\n            }\n          });\n        },\n        placeholder: \"Contact Number\",\n        label: \"Contact Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(Box, {\n      flexBox: true,\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        title: \"Previous\",\n        iconPosition: \"left\",\n        onClick: () => dispatch({\n          type: 'UPDATE_STEP',\n          payload: {\n            step: step - 1\n          }\n        }),\n        disabled: btnLoading,\n        icon: /*#__PURE__*/_jsxDEV(Icon, {\n          icon: chevronLeft,\n          size: 14,\n          color: \"#8C8C8C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this),\n        variant: \"textButton\",\n        mr: 30,\n        ml: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Done\",\n        iconPosition: \"right\",\n        disabled: adPost.contactNumber.length === 0 || btnLoading,\n        isLoading: publishBtnLoading,\n        loaderColor: \"#ffffff\",\n        onClick: handlePostSubmit,\n        icon: /*#__PURE__*/_jsxDEV(Icon, {\n          icon: chevronRight,\n          size: 21,\n          color: \"#ffffff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }, this),\n        style: {\n          backgroundColor: adPost.contactNumber.length === 0 || btnLoading ? '#d2d2d2' : '#30C56D'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default ContactNumberInfo;","map":{"version":3,"sources":["C:/Users/olaji/OneDrive/Documents/sellit/template/packages/web/containers/AddPost/ContactNumberInfo/index.js"],"names":["React","useContext","useEffect","useState","Icon","chevronRight","chevronLeft","uploadMultipleImages","Box","Button","Text","Dropdown","useMutation","useQuery","ADD_POST","openModal","closeModal","PublishModal","AuthHelper","Link","ACCOUNT_SETTING_PAGE","AddPostContext","gql","GET_AUTHOR_MOBILE_NUMBER","publishModal","newPost","data","addPost","status","config","disableDragging","size","width","height","enableResizing","bottom","bottomLeft","bottomRight","left","right","top","topLeft","topRight","closeOnClickOutside","component","componentProps","title","message","slug","imagesUrl","ContactNumberInfo","userId","loading","error","variables","username","state","dispatch","btnLoading","setBtnLoading","publishBtnLoading","setPublishBtnLoading","step","adPost","postMutation","handlePostSubmit","refreshToken","type","payload","key","value","localGallery","length","gallery","concat","image","url","localImage","post","finalData","id","console","log","preImage","preGallery","location","prossedAdPostData","lat","mobiles","author","mobile","map","push","number","label","fontSize","fontWeight","color","contactNumber","contact","index","options","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport Icon from 'react-icons-kit';\r\nimport { chevronRight } from 'react-icons-kit/ionicons/chevronRight';\r\nimport { chevronLeft } from 'react-icons-kit/ionicons/chevronLeft';\r\nimport { uploadMultipleImages } from '../../../helpers/uploadMultipleImage';\r\nimport Box from '../../../../reusecore/src/elements/Box';\r\nimport Button from '../../../../reusecore/src/elements/Button';\r\nimport Text from '../../../../reusecore/src/elements/Text';\r\nimport Dropdown from '../../../components/DropdownSelect';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport { ADD_POST } from '../../../../core/graphql/Mutations';\r\nimport { openModal, closeModal } from '@redq/reuse-modal';\r\nimport PublishModal from '../../ModalContainer/PostPublishModal';\r\nimport AuthHelper from '../../../helpers/authHelper';\r\nimport Link from 'next/link';\r\nimport { ACCOUNT_SETTING_PAGE } from '../../../../core/navigation/constant';\r\nimport { AddPostContext } from '../../../contexts/AddPostContext';\r\nimport gql from 'graphql-tag';\r\n\r\nconst GET_AUTHOR_MOBILE_NUMBER = gql`\r\n  query GetAuthorMobile($username: ID!) {\r\n    author(id: $username) {\r\n      id\r\n      mobile {\r\n        number\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst publishModal = newPost => {\r\n  if (\r\n    newPost &&\r\n    newPost.data &&\r\n    newPost.data.addPost &&\r\n    newPost.data.addPost.status === 'publish'\r\n  ) {\r\n    openModal({\r\n      config: {\r\n        disableDragging: false,\r\n        size: {\r\n          width: 360,\r\n          height: 320,\r\n        },\r\n        enableResizing: {\r\n          bottom: true,\r\n          bottomLeft: true,\r\n          bottomRight: true,\r\n          left: true,\r\n          right: true,\r\n          top: true,\r\n          topLeft: true,\r\n          topRight: true,\r\n        },\r\n      },\r\n      closeOnClickOutside: true,\r\n      component: PublishModal,\r\n      componentProps: {\r\n        data: {\r\n          closeModal,\r\n          title: 'Congrats!!!',\r\n          message: 'Your account information saved successfully',\r\n          slug: newPost.data.addPost.slug,\r\n        },\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nlet imagesUrl = [];\r\nconst ContactNumberInfo = ({ userId }) => {\r\n  const { data, loading, error } = useQuery(GET_AUTHOR_MOBILE_NUMBER, {\r\n    variables: { username: userId },\r\n  });\r\n  const { state, dispatch } = useContext(AddPostContext);\r\n  const [btnLoading, setBtnLoading] = useState(false);\r\n  const [publishBtnLoading, setPublishBtnLoading] = useState(false);\r\n  const { step, adPost } = state;\r\n  const [postMutation] = useMutation(ADD_POST);\r\n\r\n  const handlePostSubmit = async () => {\r\n    await AuthHelper.refreshToken();\r\n    setPublishBtnLoading(true);\r\n    dispatch({\r\n      type: 'UPDATE_ADPOST',\r\n      payload: { key: 'status', value: 'publish' },\r\n    });\r\n    if (adPost.localGallery.length) {\r\n      imagesUrl = await uploadMultipleImages(adPost.localGallery);\r\n      if (imagesUrl && imagesUrl.length > 0) {\r\n        dispatch({\r\n          type: 'UPDATE_FULL_ADPOST',\r\n          payload: {\r\n            gallery: adPost.gallery.concat(imagesUrl[0]),\r\n            image: !adPost.image.url ? imagesUrl[0][0] : adPost.image,\r\n            localImage: {},\r\n            localGallery: [],\r\n          },\r\n        });\r\n      }\r\n    } else {\r\n      try {\r\n        const data = await postMutation({\r\n          variables: {\r\n            post: { ...finalData, status: 'publish' },\r\n          },\r\n        });\r\n        setPublishBtnLoading(false);\r\n        if (!adPost.id) {\r\n          dispatch({\r\n            type: 'UPDATE_ADPOST',\r\n            payload: { key: 'id', value: data.data.addPost.id },\r\n          });\r\n        }\r\n        publishModal(data);\r\n      } catch (error) {\r\n        console.log(error, 'error');\r\n        setPublishBtnLoading(false);\r\n      }\r\n    }\r\n  };\r\n  const {\r\n    preImage,\r\n    preGallery,\r\n    localImage,\r\n    localGallery,\r\n    location,\r\n    ...prossedAdPostData\r\n  } = adPost;\r\n  let finalData = prossedAdPostData;\r\n  if (location && location.lat) {\r\n    finalData = {\r\n      ...prossedAdPostData,\r\n      location,\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async function() {\r\n      if (imagesUrl.length) {\r\n        try {\r\n          const data = await postMutation({\r\n            variables: {\r\n              post: { ...finalData, status: 'publish' },\r\n            },\r\n          });\r\n          setPublishBtnLoading(false);\r\n          setBtnLoading(false);\r\n          if (!adPost.id) {\r\n            dispatch({\r\n              type: 'UPDATE_ADPOST',\r\n              payload: { key: 'id', value: data.data.addPost.id },\r\n            });\r\n          }\r\n          publishModal(data);\r\n        } catch (error) {\r\n          setPublishBtnLoading(false);\r\n          setBtnLoading(false);\r\n        }\r\n      }\r\n    })();\r\n  }, [prossedAdPostData.gallery]);\r\n\r\n  let mobiles = [];\r\n  if (\r\n    !loading &&\r\n    data.author &&\r\n    data.author.mobile &&\r\n    data.author.mobile.length\r\n  ) {\r\n    data.author.mobile.map(mobile => {\r\n      mobiles.push({\r\n        value: mobile.number,\r\n        label: mobile.number,\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text\r\n        content=\"Select the mobile number you want as contact\"\r\n        pb={20}\r\n        style={{ fontSize: 16, fontWeight: 400, color: '#595959' }}\r\n      />\r\n      {!mobiles.length && !loading ? (\r\n        <Link href={`${ACCOUNT_SETTING_PAGE}?view=add-mobile-number`}>\r\n          <Button title=\"Add Mobile Number Now\" variant=\"textButton\" />\r\n        </Link>\r\n      ) : null}\r\n      {mobiles.length && !loading ? (\r\n        <>\r\n          <Text\r\n            content=\"Select Your Mobile Number\"\r\n            style={{ fontSize: 16, fontWeight: 400, color: '#595959' }}\r\n          />\r\n          <Dropdown\r\n            options={mobiles}\r\n            value={{ label: adPost.contactNumber, value: adPost.contactNumber }}\r\n            onChange={(contact, index, options) => {\r\n              dispatch({\r\n                type: 'UPDATE_ADPOST',\r\n                payload: { key: 'contactNumber', value: contact.value },\r\n              });\r\n            }}\r\n            placeholder=\"Contact Number\"\r\n            label=\"Contact Number\"\r\n          />\r\n        </>\r\n      ) : null}\r\n\r\n      <Box flexBox justifyContent=\"space-between\">\r\n        <Button\r\n          title=\"Previous\"\r\n          iconPosition=\"left\"\r\n          onClick={() =>\r\n            dispatch({\r\n              type: 'UPDATE_STEP',\r\n              payload: { step: step - 1 },\r\n            })\r\n          }\r\n          disabled={btnLoading}\r\n          icon={<Icon icon={chevronLeft} size={14} color=\"#8C8C8C\" />}\r\n          variant=\"textButton\"\r\n          mr={30}\r\n          ml=\"auto\"\r\n        />\r\n        <Button\r\n          title=\"Done\"\r\n          iconPosition=\"right\"\r\n          disabled={adPost.contactNumber.length === 0 || btnLoading}\r\n          isLoading={publishBtnLoading}\r\n          loaderColor=\"#ffffff\"\r\n          onClick={handlePostSubmit}\r\n          icon={<Icon icon={chevronRight} size={21} color=\"#ffffff\" />}\r\n          style={{\r\n            backgroundColor:\r\n              adPost.contactNumber.length === 0 || btnLoading\r\n                ? '#d2d2d2'\r\n                : '#30C56D',\r\n          }}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactNumberInfo;\r\n"]},"metadata":{},"sourceType":"module"}