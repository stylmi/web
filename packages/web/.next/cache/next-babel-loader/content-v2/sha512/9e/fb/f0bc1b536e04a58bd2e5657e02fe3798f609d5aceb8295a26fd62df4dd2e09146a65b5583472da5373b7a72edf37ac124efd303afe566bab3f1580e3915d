{"ast":null,"code":"import _defineProperty from \"/Users/mrcea/Desktop/Nunua/template/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/mrcea/Desktop/Nunua/template/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/mrcea/Desktop/Nunua/template/packages/web/components/CategoryCard/categoryGridCard.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react'; // import Image from 'react-image';\n\nimport PropTypes from 'prop-types';\nimport Card from 'reusecore/src/elements/Card';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Text from 'reusecore/src/elements/Text';\nimport PlaceholderImage from 'core/static/images/categoryPlaceholder.svg';\n\nvar CategoryGridCard = function CategoryGridCard(_ref) {\n  var title = _ref.title,\n      postNumber = _ref.postNumber,\n      imageSrc = _ref.imageSrc,\n      imageStyle = _ref.imageStyle,\n      titleStyle = _ref.titleStyle,\n      postNumberStyle = _ref.postNumberStyle,\n      props = _objectWithoutProperties(_ref, [\"title\", \"postNumber\", \"imageSrc\", \"imageStyle\", \"titleStyle\", \"postNumberStyle\"]);\n\n  var imgSrc = imageSrc ? imageSrc : PlaceholderImage;\n  return /*#__PURE__*/_jsxDEV(Card, _objectSpread(_objectSpread({}, props), {}, {\n    style: {\n      textAlign: 'center'\n    },\n    children: [imgSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgSrc,\n      alt: title,\n      style: imageStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 18\n    }, _this), title && /*#__PURE__*/_jsxDEV(Heading, _objectSpread({\n      content: title\n    }, titleStyle), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, _this), postNumber && /*#__PURE__*/_jsxDEV(Text, _objectSpread({\n      content: postNumber\n    }, postNumberStyle), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = CategoryGridCard;\nCategoryGridCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  source: PropTypes.string,\n  postNumber: PropTypes.string,\n  imageStyle: PropTypes.object,\n  titleStyle: PropTypes.object,\n  postNumberStyle: PropTypes.object\n};\nCategoryGridCard.defaultProps = {\n  color: '#595959',\n  bg: '#FFFFFF',\n  ml: '0',\n  mr: '0',\n  minHeight: '150px',\n  border: '1px solid #e2e2e2',\n  boxShadow: 'none',\n  p: '40px 32px',\n  titleStyle: {\n    fontSize: '10px',\n    fontWeight: 'normal',\n    mb: '0',\n    textAlign: 'center',\n    mt: '10px'\n  },\n  imageStyle: {\n    borderRadius: '100%',\n    objectFit: 'cover',\n    height: '60px',\n    width: '60px',\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  postNumberStyle: {\n    mb: 0,\n    mt: 10,\n    textAlign: 'center'\n  }\n};\nexport default CategoryGridCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryGridCard\");","map":{"version":3,"sources":["/Users/mrcea/Desktop/Nunua/template/packages/web/components/CategoryCard/categoryGridCard.js"],"names":["React","PropTypes","Card","Heading","Text","PlaceholderImage","CategoryGridCard","title","postNumber","imageSrc","imageStyle","titleStyle","postNumberStyle","props","imgSrc","textAlign","propTypes","string","isRequired","source","object","defaultProps","color","bg","ml","mr","minHeight","border","boxShadow","p","fontSize","fontWeight","mb","mt","borderRadius","objectFit","height","width","margin","overflow"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAQnB;AAAA,MAPJC,KAOI,QAPJA,KAOI;AAAA,MANJC,UAMI,QANJA,UAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,UAGI,QAHJA,UAGI;AAAA,MAFJC,eAEI,QAFJA,eAEI;AAAA,MADDC,KACC;;AACJ,MAAMC,MAAM,GAAGL,QAAQ,GAAGA,QAAH,GAAcJ,gBAArC;AACA,sBACE,QAAC,IAAD,kCAAUQ,KAAV;AAAiB,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE;AAAb,KAAxB;AAAA,eACGD,MAAM,iBAAI;AAAK,MAAA,GAAG,EAAEA,MAAV;AAAkB,MAAA,GAAG,EAAEP,KAAvB;AAA8B,MAAA,KAAK,EAAEG;AAArC;AAAA;AAAA;AAAA;AAAA,aADb,EAEGH,KAAK,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA;AAAlB,OAA6BI,UAA7B;AAAA;AAAA;AAAA;AAAA,aAFZ,EAGGH,UAAU,iBAAI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEA;AAAf,OAA+BI,eAA/B;AAAA;AAAA;AAAA;AAAA,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAjBD;;KAAMN,gB;AAmBNA,gBAAgB,CAACU,SAAjB,GAA6B;AAC3BT,EAAAA,KAAK,EAAEN,SAAS,CAACgB,MAAV,CAAiBC,UADG;AAE3BC,EAAAA,MAAM,EAAElB,SAAS,CAACgB,MAFS;AAG3BT,EAAAA,UAAU,EAAEP,SAAS,CAACgB,MAHK;AAI3BP,EAAAA,UAAU,EAAET,SAAS,CAACmB,MAJK;AAK3BT,EAAAA,UAAU,EAAEV,SAAS,CAACmB,MALK;AAM3BR,EAAAA,eAAe,EAAEX,SAAS,CAACmB;AANA,CAA7B;AASAd,gBAAgB,CAACe,YAAjB,GAAgC;AAC9BC,EAAAA,KAAK,EAAE,SADuB;AAE9BC,EAAAA,EAAE,EAAE,SAF0B;AAG9BC,EAAAA,EAAE,EAAE,GAH0B;AAI9BC,EAAAA,EAAE,EAAE,GAJ0B;AAK9BC,EAAAA,SAAS,EAAE,OALmB;AAM9BC,EAAAA,MAAM,EAAE,mBANsB;AAO9BC,EAAAA,SAAS,EAAE,MAPmB;AAQ9BC,EAAAA,CAAC,EAAE,WAR2B;AAS9BlB,EAAAA,UAAU,EAAE;AACVmB,IAAAA,QAAQ,EAAE,MADA;AAEVC,IAAAA,UAAU,EAAE,QAFF;AAGVC,IAAAA,EAAE,EAAE,GAHM;AAIVjB,IAAAA,SAAS,EAAE,QAJD;AAKVkB,IAAAA,EAAE,EAAE;AALM,GATkB;AAgB9BvB,EAAAA,UAAU,EAAE;AACVwB,IAAAA,YAAY,EAAE,MADJ;AAEVC,IAAAA,SAAS,EAAE,OAFD;AAGVC,IAAAA,MAAM,EAAE,MAHE;AAIVC,IAAAA,KAAK,EAAE,MAJG;AAKVC,IAAAA,MAAM,EAAE,MALE;AAMVC,IAAAA,QAAQ,EAAE;AANA,GAhBkB;AAwB9B3B,EAAAA,eAAe,EAAE;AACfoB,IAAAA,EAAE,EAAE,CADW;AAEfC,IAAAA,EAAE,EAAE,EAFW;AAGflB,IAAAA,SAAS,EAAE;AAHI;AAxBa,CAAhC;AA+BA,eAAeT,gBAAf","sourcesContent":["import React from 'react';\n// import Image from 'react-image';\nimport PropTypes from 'prop-types';\nimport Card from 'reusecore/src/elements/Card';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Text from 'reusecore/src/elements/Text';\nimport PlaceholderImage from 'core/static/images/categoryPlaceholder.svg';\n\nconst CategoryGridCard = ({\n  title,\n  postNumber,\n  imageSrc,\n  imageStyle,\n  titleStyle,\n  postNumberStyle,\n  ...props\n}) => {\n  const imgSrc = imageSrc ? imageSrc : PlaceholderImage;\n  return (\n    <Card {...props} style={{ textAlign: 'center' }}>\n      {imgSrc && <img src={imgSrc} alt={title} style={imageStyle} />}\n      {title && <Heading content={title} {...titleStyle} />}\n      {postNumber && <Text content={postNumber} {...postNumberStyle} />}\n    </Card>\n  );\n};\n\nCategoryGridCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  source: PropTypes.string,\n  postNumber: PropTypes.string,\n  imageStyle: PropTypes.object,\n  titleStyle: PropTypes.object,\n  postNumberStyle: PropTypes.object,\n};\n\nCategoryGridCard.defaultProps = {\n  color: '#595959',\n  bg: '#FFFFFF',\n  ml: '0',\n  mr: '0',\n  minHeight: '150px',\n  border: '1px solid #e2e2e2',\n  boxShadow: 'none',\n  p: '40px 32px',\n  titleStyle: {\n    fontSize: '10px',\n    fontWeight: 'normal',\n    mb: '0',\n    textAlign: 'center',\n    mt: '10px',\n  },\n  imageStyle: {\n    borderRadius: '100%',\n    objectFit: 'cover',\n    height: '60px',\n    width: '60px',\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  postNumberStyle: {\n    mb: 0,\n    mt: 10,\n    textAlign: 'center',\n  },\n};\n\nexport default CategoryGridCard;\n"]},"metadata":{},"sourceType":"module"}