{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/mrcea/Desktop/Nunua/template/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mrcea/Desktop/Nunua/template/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/mrcea/Desktop/Nunua/template/packages/web/containers/ForgetPasswordForm/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Router from 'next/router';\nimport AuthHeader from '../../components/AuthHeader';\nimport Button from 'reusecore/src/elements/Button';\nimport Box from 'reusecore/src/elements/Box';\nimport { FormGroup, ErrorNotification } from '../SignInForm/style';\nimport Input from '../../components/Input';\nimport AuthHelper from '../../helpers/authHelper';\nvar ForgetPasswordEnhancer = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: function mapPropsToValues(props) {\n    return {\n      email: ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Invalid email address').required('Email is required!')\n  })\n});\n\nvar ForgetPasswordForm = function ForgetPasswordForm(_ref) {\n  _s();\n\n  var values = _ref.values,\n      handleChange = _ref.handleChange,\n      touched = _ref.touched,\n      errors = _ref.errors,\n      handleSubmit = _ref.handleSubmit,\n      handleBlur = _ref.handleBlur;\n\n  var _useState = useState(''),\n      message = _useState[0],\n      setMessage = _useState[1];\n\n  handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var hasPasswordReset;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return AuthHelper.forgetPass(values.email);\n\n            case 2:\n              hasPasswordReset = _context.sent;\n\n              if (hasPasswordReset && !hasPasswordReset.error) {\n                setMessage('Email Sent Successfully');\n              } else if (hasPasswordReset.error) {\n                setMessage(hasPasswordReset.error.message);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AuthHeader, {\n      title: {\n        content: 'Forget Your Password?'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      className: errors.email ? 'hasErrorMsg' : '',\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        elementType: \"input\",\n        elementConfig: {\n          type: 'email',\n          required: 'required'\n        },\n        onBlur: handleBlur('email'),\n        value: values.email,\n        error: errors.email,\n        touched: touched,\n        label: \"Email Address\",\n        changed: handleChange('email')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"errorMsg\",\n        children: errors.email && touched.email && errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this), message ? /*#__PURE__*/_jsxDEV(Box, {\n      flexBox: true,\n      mt: 20,\n      mb: 15,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(ErrorNotification, {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, _this) : '', /*#__PURE__*/_jsxDEV(Button, {\n      disabled: Object.keys(errors).length !== 0,\n      onClick: handleSubmit,\n      title: \"Submit\",\n      width: 1,\n      mt: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Not Now\",\n      color: \"#8C8C8C\",\n      variant: \"textButton\",\n      width: 1,\n      onClick: function onClick() {\n        return Router.push('/signin');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ForgetPasswordForm, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n\n_c = ForgetPasswordForm;\nexport default _c2 = ForgetPasswordEnhancer(ForgetPasswordForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ForgetPasswordForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mrcea/Desktop/Nunua/template/packages/web/containers/ForgetPasswordForm/index.js"],"names":["React","useState","withFormik","Yup","Router","AuthHeader","Button","Box","FormGroup","ErrorNotification","Input","AuthHelper","ForgetPasswordEnhancer","enableReinitialize","mapPropsToValues","props","email","validationSchema","object","shape","string","required","ForgetPasswordForm","values","handleChange","touched","errors","handleSubmit","handleBlur","message","setMessage","forgetPass","hasPasswordReset","error","content","type","Object","keys","length","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Router from 'next/router';\nimport AuthHeader from '../../components/AuthHeader';\nimport Button from 'reusecore/src/elements/Button';\nimport Box from 'reusecore/src/elements/Box';\nimport { FormGroup, ErrorNotification } from '../SignInForm/style';\nimport Input from '../../components/Input';\nimport AuthHelper from '../../helpers/authHelper';\n\nconst ForgetPasswordEnhancer = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: props => ({ email: '' }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('Email is required!'),\n  }),\n});\n\nconst ForgetPasswordForm = ({\n  values,\n  handleChange,\n  touched,\n  errors,\n  handleSubmit,\n  handleBlur,\n}) => {\n  const [message, setMessage] = useState('');\n  handleSubmit = async () => {\n    const hasPasswordReset = await AuthHelper.forgetPass(values.email);\n    if (hasPasswordReset && !hasPasswordReset.error) {\n      setMessage('Email Sent Successfully');\n    } else if (hasPasswordReset.error) {\n      setMessage(hasPasswordReset.error.message);\n    }\n  };\n  return (\n    <>\n      {/* auth page header section */}\n      <AuthHeader\n        title={{\n          content: 'Forget Your Password?',\n        }}\n      />\n\n      {/* <p>{message ? message : ''}</p> */}\n\n      {/* forgetPassword form */}\n      <FormGroup className={errors.email ? 'hasErrorMsg' : ''}>\n        <Input\n          elementType=\"input\"\n          elementConfig={{\n            type: 'email',\n            required: 'required',\n          }}\n          onBlur={handleBlur('email')}\n          value={values.email}\n          error={errors.email}\n          touched={touched}\n          label=\"Email Address\"\n          changed={handleChange('email')}\n        />\n        {/* {errors.email && touched.email && <span>{errors.email}</span>} */}\n        <span className=\"errorMsg\">\n          {errors.email && touched.email && errors.email}\n        </span>\n      </FormGroup>\n\n      {message ? (\n        <Box\n          flexBox\n          mt={20}\n          mb={15}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <ErrorNotification>{message}</ErrorNotification>\n        </Box>\n      ) : (\n        ''\n      )}\n\n      <Button\n        disabled={Object.keys(errors).length !== 0}\n        onClick={handleSubmit}\n        title=\"Submit\"\n        width={1}\n        mt={10}\n      />\n\n      {/* signin page redirection section */}\n      <Button\n        title=\"Not Now\"\n        color=\"#8C8C8C\"\n        variant=\"textButton\"\n        width={1}\n        onClick={() => Router.push('/signin')}\n      />\n    </>\n  );\n};\n\nexport default ForgetPasswordEnhancer(ForgetPasswordForm);\n"]},"metadata":{},"sourceType":"module"}