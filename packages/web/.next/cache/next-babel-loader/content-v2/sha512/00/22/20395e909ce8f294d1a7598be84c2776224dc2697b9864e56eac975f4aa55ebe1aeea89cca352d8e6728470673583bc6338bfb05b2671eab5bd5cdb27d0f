{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mrcea/Desktop/Nunua/template/packages/web/components/CategoryCard/categoryListCard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Text from 'reusecore/src/elements/Text';\nimport Image from 'reusecore/src/elements/Image';\nimport PlaceholderImage from 'core/static/images/categoryPlaceholder.svg';\nconst GridWrapper = styled('div').withConfig({\n  displayName: \"categoryListCard__GridWrapper\",\n  componentId: \"sc-1phjjuk-0\"\n})([\"display:flex;flex-direction:row;align-items:center;width:100%;margin-bottom:25px;flex-shrink:0;cursor:pointer;padding:10px 15px 10px 25px;&:last-child{margin-right:0;margin-bottom:0;}&:hover{background-color:rgba(226,226,226,0.15);}\"]);\nconst ImageWrapper = styled('div').withConfig({\n  displayName: \"categoryListCard__ImageWrapper\",\n  componentId: \"sc-1phjjuk-1\"\n})([\"width:50px;height:50px;display:flex;flex-shrink:0;overflow:hidden;position:relative;border-radius:25px;\"]);\nconst GridData = styled('div').withConfig({\n  displayName: \"categoryListCard__GridData\",\n  componentId: \"sc-1phjjuk-2\"\n})([\"width:100%;display:flex;flex-direction:column;align-items:flex-start;margin-left:20px;overflow:hidden;\"]);\n\nconst CategoryListCard = (_ref) => {\n  let {\n    title,\n    postNumber,\n    source,\n    imageStyle,\n    selected,\n    titleStyle,\n    postNumberStyle,\n    handleClick\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"title\", \"postNumber\", \"source\", \"imageStyle\", \"selected\", \"titleStyle\", \"postNumberStyle\", \"handleClick\"]);\n\n  const imgSrc = source ? source : PlaceholderImage;\n  const selectedBg = selected === true ? 'rgba(226,226,226,0.5)' : 'transparent';\n  return /*#__PURE__*/_jsxDEV(GridWrapper, _objectSpread(_objectSpread({}, props), {}, {\n    style: {\n      backgroundColor: selectedBg\n    },\n    children: [imgSrc && /*#__PURE__*/_jsxDEV(ImageWrapper, _objectSpread(_objectSpread({}, imageStyle), {}, {\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: imgSrc,\n        alt: title,\n        width: \"100%\",\n        height: \"100%\",\n        style: {\n          objectFit: 'cover'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GridData, {\n      onClick: handleClick,\n      children: [title && /*#__PURE__*/_jsxDEV(Heading, _objectSpread({\n        content: title,\n        color: \"#595959\",\n        fontSize: 16\n      }, titleStyle), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), postNumber && /*#__PURE__*/_jsxDEV(Text, _objectSpread({\n        content: postNumber,\n        color: \"#8C8C8C\",\n        fontSize: 12,\n        style: {\n          margin: 0\n        }\n      }, postNumberStyle), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\nCategoryListCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  source: PropTypes.string,\n  postNumber: PropTypes.string,\n  imageStyle: PropTypes.object,\n  titleStyle: PropTypes.object,\n  postNumberStyle: PropTypes.object\n};\nCategoryListCard.defaultProps = {\n  titleStyle: {\n    fontSize: '16px',\n    fontWeight: 'normal',\n    mb: '0',\n    color: '#333333'\n  }\n};\nexport default CategoryListCard;","map":{"version":3,"sources":["/Users/mrcea/Desktop/Nunua/template/packages/web/components/CategoryCard/categoryListCard.js"],"names":["React","PropTypes","styled","Heading","Text","Image","PlaceholderImage","GridWrapper","ImageWrapper","GridData","CategoryListCard","title","postNumber","source","imageStyle","selected","titleStyle","postNumberStyle","handleClick","props","imgSrc","selectedBg","backgroundColor","objectFit","margin","propTypes","string","isRequired","object","defaultProps","fontSize","fontWeight","mb","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Text from 'reusecore/src/elements/Text';\nimport Image from 'reusecore/src/elements/Image';\nimport PlaceholderImage from 'core/static/images/categoryPlaceholder.svg';\n\nconst GridWrapper = styled('div')`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 25px;\n  flex-shrink: 0;\n  cursor: pointer;\n  padding: 10px 15px 10px 25px;\n  // background-color: ${props => props.selected && 'rgba(226,226,226,0.2)'};\n  &:last-child {\n    margin-right: 0;\n    margin-bottom: 0;\n  }\n  &:hover {\n    background-color: rgba(226, 226, 226, 0.15);\n  }\n`;\n\nconst ImageWrapper = styled('div')`\n  width: 50px;\n  height: 50px;\n  display: flex;\n  flex-shrink: 0;\n  overflow: hidden;\n  position: relative;\n  border-radius: 25px;\n`;\n\nconst GridData = styled('div')`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-left: 20px;\n  overflow: hidden;\n`;\n\nconst CategoryListCard = ({\n  title,\n  postNumber,\n  source,\n  imageStyle,\n  selected,\n  titleStyle,\n  postNumberStyle,\n  handleClick,\n  ...props\n}) => {\n  const imgSrc = source ? source : PlaceholderImage;\n  const selectedBg =\n    selected === true ? 'rgba(226,226,226,0.5)' : 'transparent';\n  return (\n    <GridWrapper {...props} style={{ backgroundColor: selectedBg }}>\n      {imgSrc && (\n        <ImageWrapper {...imageStyle}>\n          <Image\n            src={imgSrc}\n            alt={title}\n            width=\"100%\"\n            height=\"100%\"\n            style={{ objectFit: 'cover' }}\n          />\n        </ImageWrapper>\n      )}\n\n      <GridData onClick={handleClick}>\n        {title && (\n          <Heading\n            content={title}\n            color=\"#595959\"\n            fontSize={16}\n            {...titleStyle}\n          />\n        )}\n        {postNumber && (\n          <Text\n            content={postNumber}\n            color=\"#8C8C8C\"\n            fontSize={12}\n            style={{ margin: 0 }}\n            {...postNumberStyle}\n          />\n        )}\n      </GridData>\n    </GridWrapper>\n  );\n};\n\nCategoryListCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  source: PropTypes.string,\n  postNumber: PropTypes.string,\n  imageStyle: PropTypes.object,\n  titleStyle: PropTypes.object,\n  postNumberStyle: PropTypes.object,\n};\n\nCategoryListCard.defaultProps = {\n  titleStyle: {\n    fontSize: '16px',\n    fontWeight: 'normal',\n    mb: '0',\n    color: '#333333',\n  },\n};\n\nexport default CategoryListCard;\n"]},"metadata":{},"sourceType":"module"}