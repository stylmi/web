{"ast":null,"code":"import _toConsumableArray from \"C:/Users/olaji/OneDrive/Documents/sellit/template/packages/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\olaji\\\\OneDrive\\\\Documents\\\\sellit\\\\template\\\\packages\\\\web\\\\pages\\\\recent-posts.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { Grid } from 'react-styled-flexboxgrid';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ALL_POST } from '../../core/graphql/AllPost.query';\nimport { CURRENCY } from '../Config';\nimport { SINGLE_POST_PAGE } from '../../core/navigation/constant';\nimport withLayout from '../hoc/withLayout';\nimport Heading from '../../reusecore/src/elements/Heading';\nimport Box from '../../reusecore/src/elements/Box';\nimport ListGrid from '../../reusecore/src/elements/ListGrid';\nimport CardLoader from '../components/Loader/CardLoader';\nimport PostCard from '../components/PostCard';\nimport NoItemFound from '../components/NoItemFound';\nimport OnError from '../components/OnError';\nimport PageMeta from '../components/PageMeta';\nimport { withApollo } from '../helpers/apollo';\nexport default _c3 = withApollo(_c2 = withLayout(_c = _s(function () {\n  _s();\n\n  var _useState = useState(false),\n      loadingMore = _useState[0],\n      toggleLoading = _useState[1];\n\n  var _useState2 = useState(1),\n      page = _useState2[0],\n      paginate = _useState2[1];\n\n  var QUERY_VARIABLES = {\n    LIMIT: 20\n  };\n\n  var _useQuery = useQuery(GET_ALL_POST, {\n    variables: QUERY_VARIABLES\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore;\n\n  if (error) return __jsx(OnError, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }\n  });\n  var postCount = data && data.posts && data.posts.data ? data.posts.data.length : 1;\n  var posts = data && data.posts && data.posts.data ? data.posts.data : [];\n  var totalPost = data && data.posts ? data.posts.total : 1;\n\n  var renderRecentPost = function renderRecentPost(item) {\n    var title = item.title,\n        slug = item.slug,\n        _item$price = item.price,\n        price = _item$price === void 0 ? 0.0 : _item$price,\n        _item$image = item.image,\n        url = _item$image.url,\n        largeUrl = _item$image.largeUrl;\n    return __jsx(Link, {\n      href: \"\".concat(SINGLE_POST_PAGE, \"/\").concat(slug),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, __jsx(PostCard, {\n      currency: CURRENCY,\n      title: title,\n      price: price,\n      imageSrc: [url, largeUrl],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(PageMeta, {\n    title: \"Recent Post\",\n    description: \"Recent Post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    mt: 50,\n    mb: 50,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    content: \"Recent Posts\",\n    mb: 40,\n    style: {\n      fontSize: 24,\n      fontWeight: 600,\n      color: '#333333'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), !loading && !posts.length ? __jsx(NoItemFound, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }) : __jsx(ListGrid, {\n    data: posts,\n    totalPost: totalPost,\n    postCount: postCount,\n    columnWidth: [1, 1 / 2, 1 / 4],\n    component: renderRecentPost,\n    loading: loading ? loading : loadingMore,\n    loaderColor: \"#ffffff\",\n    placeholder: __jsx(CardLoader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 30\n      }\n    }),\n    limit: QUERY_VARIABLES.LIMIT,\n    handleLoadMore: function handleLoadMore() {\n      toggleLoading(true);\n      paginate(page + 1);\n      fetchMore({\n        variables: {\n          page: page + 1\n        },\n        updateQuery: function updateQuery(prev, _ref) {\n          var fetchMoreResult = _ref.fetchMoreResult;\n\n          if (!fetchMoreResult) {\n            toggleLoading(false);\n            return prev;\n          }\n\n          if (postCount && totalPost) {\n            if (postCount <= totalPost) {\n              toggleLoading(false);\n              return Object.assign({}, prev, {\n                posts: {\n                  data: [].concat(_toConsumableArray(prev.posts.data), _toConsumableArray(fetchMoreResult.posts.data)),\n                  total: totalPost\n                }\n              });\n            }\n          }\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }))));\n}, \"rGadjvRkkFk17R26hi68/KEVYuw=\", false, function () {\n  return [useQuery];\n})));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"%default%$withApollo$withLayout\");\n$RefreshReg$(_c2, \"%default%$withApollo\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["C:/Users/olaji/OneDrive/Documents/sellit/template/packages/web/pages/recent-posts.js"],"names":["useState","Link","Grid","useQuery","GET_ALL_POST","CURRENCY","SINGLE_POST_PAGE","withLayout","Heading","Box","ListGrid","CardLoader","PostCard","NoItemFound","OnError","PageMeta","withApollo","loadingMore","toggleLoading","page","paginate","QUERY_VARIABLES","LIMIT","variables","data","loading","error","fetchMore","postCount","posts","length","totalPost","total","renderRecentPost","item","title","slug","price","image","url","largeUrl","fontSize","fontWeight","color","updateQuery","prev","fetchMoreResult","Object","assign"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { Grid } from 'react-styled-flexboxgrid';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { GET_ALL_POST } from '../../core/graphql/AllPost.query';\r\nimport { CURRENCY } from '../Config';\r\nimport { SINGLE_POST_PAGE } from '../../core/navigation/constant';\r\nimport withLayout from '../hoc/withLayout';\r\nimport Heading from '../../reusecore/src/elements/Heading';\r\nimport Box from '../../reusecore/src/elements/Box';\r\nimport ListGrid from '../../reusecore/src/elements/ListGrid';\r\nimport CardLoader from '../components/Loader/CardLoader';\r\nimport PostCard from '../components/PostCard';\r\nimport NoItemFound from '../components/NoItemFound';\r\nimport OnError from '../components/OnError';\r\nimport PageMeta from '../components/PageMeta';\r\nimport { withApollo } from '../helpers/apollo';\r\nexport default withApollo(\r\n  withLayout(() => {\r\n    const [loadingMore, toggleLoading] = useState(false);\r\n    const [page, paginate] = useState(1);\r\n    const QUERY_VARIABLES = {\r\n      LIMIT: 20,\r\n    };\r\n    const { data, loading, error, fetchMore } = useQuery(GET_ALL_POST, {\r\n      variables: QUERY_VARIABLES,\r\n    });\r\n\r\n    if (error) return <OnError />;\r\n\r\n    const postCount =\r\n      data && data.posts && data.posts.data ? data.posts.data.length : 1;\r\n    const posts = data && data.posts && data.posts.data ? data.posts.data : [];\r\n    const totalPost = data && data.posts ? data.posts.total : 1;\r\n    const renderRecentPost = item => {\r\n      const {\r\n        title,\r\n        slug,\r\n        price = 0.0,\r\n        image: { url, largeUrl },\r\n      } = item;\r\n      return (\r\n        <Link href={`${SINGLE_POST_PAGE}/${slug}`}>\r\n          <a>\r\n            <PostCard\r\n              currency={CURRENCY}\r\n              title={title}\r\n              price={price}\r\n              imageSrc={[url, largeUrl]}\r\n            />\r\n          </a>\r\n        </Link>\r\n      );\r\n    };\r\n    return (\r\n      <>\r\n        <PageMeta title=\"Recent Post\" description=\"Recent Post\" />\r\n        <Box mt={50} mb={50}>\r\n          <Grid>\r\n            <Heading\r\n              content=\"Recent Posts\"\r\n              mb={40}\r\n              style={{ fontSize: 24, fontWeight: 600, color: '#333333' }}\r\n            />\r\n            {!loading && !posts.length ? (\r\n              <NoItemFound />\r\n            ) : (\r\n              <ListGrid\r\n                data={posts}\r\n                totalPost={totalPost}\r\n                postCount={postCount}\r\n                columnWidth={[1, 1 / 2, 1 / 4]}\r\n                component={renderRecentPost}\r\n                loading={loading ? loading : loadingMore}\r\n                loaderColor=\"#ffffff\"\r\n                placeholder={<CardLoader />}\r\n                limit={QUERY_VARIABLES.LIMIT}\r\n                handleLoadMore={() => {\r\n                  toggleLoading(true);\r\n                  paginate(page + 1);\r\n                  fetchMore({\r\n                    variables: {\r\n                      page: page + 1,\r\n                    },\r\n                    updateQuery: (prev, { fetchMoreResult }) => {\r\n                      if (!fetchMoreResult) {\r\n                        toggleLoading(false);\r\n                        return prev;\r\n                      }\r\n                      if (postCount && totalPost) {\r\n                        if (postCount <= totalPost) {\r\n                          toggleLoading(false);\r\n                          return Object.assign({}, prev, {\r\n                            posts: {\r\n                              data: [\r\n                                ...prev.posts.data,\r\n                                ...fetchMoreResult.posts.data,\r\n                              ],\r\n                              total: totalPost,\r\n                            },\r\n                          });\r\n                        }\r\n                      }\r\n                    },\r\n                  });\r\n                }}\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n      </>\r\n    );\r\n  })\r\n);\r\n"]},"metadata":{},"sourceType":"module"}