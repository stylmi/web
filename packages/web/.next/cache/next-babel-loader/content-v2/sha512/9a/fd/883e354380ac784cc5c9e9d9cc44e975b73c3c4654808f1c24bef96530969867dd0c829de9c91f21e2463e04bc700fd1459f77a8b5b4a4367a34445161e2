{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mrcea/Desktop/Nunua/template/packages/web/containers/MobileSignIn/mobileSIgnIn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { withFormik } from 'formik';\nimport Button from 'reusecore/src/elements/Button';\nimport { ErrorNotification } from '../SignInForm/style';\nimport Input from '../../components/Input';\nimport { setFirebaseCookie } from '../../helpers/session';\nimport redirect from '../../helpers/redirect';\nimport { useMutation } from '@apollo/react-hooks';\nimport { REGISTER } from 'core/graphql/Mutations';\nimport { GET_VERIFICATION_CODE, VERIFY_CODE, UPDATE_AUTHOR } from 'core/graphql/Mutations';\nimport AuthHelper from '../../helpers/authHelper';\nconst MobileNumbersEnhancer = withFormik({\n  mapPropsToValues: props => {\n    const number = '';\n    const code = '';\n    return {\n      number,\n      code\n    };\n  }\n});\n\nconst Recaptcha = () => {\n  useEffect(() => {\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha');\n    window.recaptchaVerifier.render().then(function (widgetId) {\n      window.recaptchaWidgetId = widgetId;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"recaptcha\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n\nconst MobileSignIn = ({\n  values,\n  touched,\n  handleChange,\n  userInfo,\n  showModal,\n  author,\n  setFieldValue,\n  loading\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    confirmResult: false,\n    isMobileVerified: false,\n    wrongCode: false,\n    errorMessage: false\n  });\n  const {\n    confirmResult,\n    isMobileVerified,\n    wrongCode,\n    errorMessage\n  } = state;\n\n  const handleGetVerificationCode = async () => {\n    try {\n      const confirmResult = await AuthHelper.login('phone', null, null, values.number);\n\n      if (!confirmResult.error) {\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          confirmResult,\n          errorMessage: false\n        }));\n      } else {\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          errorMessage: confirmResult.error.message\n        }));\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleVerifyCode = async () => {\n    let mobileNumbers = values.mobile;\n    const user = await AuthHelper.confirmVerification(state.confirmResult, values.code);\n\n    if (user && !user.error) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        isMobileVerified: true,\n        errorMessage: false\n      }));\n      const token = await user.getIdToken();\n      setFieldValue('token', token);\n    } else if (user.error) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: user.error.message\n      }));\n    }\n  };\n\n  useEffect(() => {\n    (async function () {\n      try {\n        if (values.token) {\n          const res = await registerMutation();\n\n          if (res && res.data && res.data.register) {\n            const user = res.data.register;\n            setFirebaseCookie('id_token', values.token);\n            setFirebaseCookie('user', _objectSpread({}, user));\n            redirect({}, '/');\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [values.token]);\n  const registerMutation = useMutation(REGISTER, {\n    variables: {\n      user: {\n        mobile: [{\n          number: values.number\n        }],\n        token: values.token\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!confirmResult ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        elementType: \"input\",\n        elementConfig: {\n          type: 'text',\n          required: 'required'\n        },\n        label: \"Enter Number(ex. +30*********)\",\n        changed: handleChange('number'),\n        value: values.number,\n        touched: touched\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Recaptcha, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleGetVerificationCode,\n        title: \"Send Verification Code\",\n        bg: \"#30C56D\",\n        color: \"#ffffff\",\n        mt: 30,\n        width: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, !isMobileVerified && confirmResult ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        elementType: \"input\",\n        elementConfig: {\n          type: 'text',\n          required: 'required'\n        },\n        label: \"Verify & Login\",\n        changed: handleChange('code'),\n        value: values.code,\n        touched: touched\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleVerifyCode,\n        title: \"Verify & Login\",\n        bg: \"#30C56D\",\n        color: \"#ffffff\",\n        width: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, isMobileVerified ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: '#30C56D',\n        textAlign: 'center',\n        fontFamily: 'Lato'\n      },\n      children: \"Your number is verified!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this) : '', errorMessage ? /*#__PURE__*/_jsxDEV(ErrorNotification, {\n      style: {\n        marginTop: 30\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this) : '']\n  }, void 0, true);\n};\n\nexport default MobileNumbersEnhancer(MobileSignIn);","map":{"version":3,"sources":["/Users/mrcea/Desktop/Nunua/template/packages/web/containers/MobileSignIn/mobileSIgnIn.js"],"names":["React","useState","useEffect","firebase","withFormik","Button","ErrorNotification","Input","setFirebaseCookie","redirect","useMutation","REGISTER","GET_VERIFICATION_CODE","VERIFY_CODE","UPDATE_AUTHOR","AuthHelper","MobileNumbersEnhancer","mapPropsToValues","props","number","code","Recaptcha","window","recaptchaVerifier","auth","RecaptchaVerifier","render","then","widgetId","recaptchaWidgetId","MobileSignIn","values","touched","handleChange","userInfo","showModal","author","setFieldValue","loading","state","setState","confirmResult","isMobileVerified","wrongCode","errorMessage","handleGetVerificationCode","login","error","message","console","handleVerifyCode","mobileNumbers","mobile","user","confirmVerification","token","getIdToken","res","registerMutation","data","register","log","variables","type","required","color","textAlign","fontFamily","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { withFormik } from 'formik';\nimport Button from 'reusecore/src/elements/Button';\nimport { ErrorNotification } from '../SignInForm/style';\nimport Input from '../../components/Input';\nimport { setFirebaseCookie } from '../../helpers/session';\nimport redirect from '../../helpers/redirect';\nimport { useMutation } from '@apollo/react-hooks';\nimport { REGISTER } from 'core/graphql/Mutations';\nimport {\n  GET_VERIFICATION_CODE,\n  VERIFY_CODE,\n  UPDATE_AUTHOR,\n} from 'core/graphql/Mutations';\nimport AuthHelper from '../../helpers/authHelper';\n\nconst MobileNumbersEnhancer = withFormik({\n  mapPropsToValues: props => {\n    const number = '';\n    const code = '';\n    return {\n      number,\n      code,\n    };\n  },\n});\n\nconst Recaptcha = () => {\n  useEffect(() => {\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha');\n\n    window.recaptchaVerifier.render().then(function(widgetId) {\n      window.recaptchaWidgetId = widgetId;\n    });\n  }, []);\n  return <div id=\"recaptcha\" />;\n};\n\nconst MobileSignIn = ({\n  values,\n  touched,\n  handleChange,\n  userInfo,\n  showModal,\n  author,\n  setFieldValue,\n  loading,\n}) => {\n  const [state, setState] = useState({\n    confirmResult: false,\n    isMobileVerified: false,\n    wrongCode: false,\n    errorMessage: false,\n  });\n\n  const { confirmResult, isMobileVerified, wrongCode, errorMessage } = state;\n\n  const handleGetVerificationCode = async () => {\n    try {\n      const confirmResult = await AuthHelper.login(\n        'phone',\n        null,\n        null,\n        values.number\n      );\n      if (!confirmResult.error) {\n        setState({ ...state, confirmResult, errorMessage: false });\n      } else {\n        setState({ ...state, errorMessage: confirmResult.error.message });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleVerifyCode = async () => {\n    let mobileNumbers = values.mobile;\n    const user = await AuthHelper.confirmVerification(\n      state.confirmResult,\n      values.code\n    );\n    if (user && !user.error) {\n      setState({ ...state, isMobileVerified: true, errorMessage: false });\n      const token = await user.getIdToken();\n      setFieldValue('token', token);\n    } else if (user.error) {\n      setState({\n        ...state,\n        errorMessage: user.error.message,\n      });\n    }\n  };\n\n  useEffect(() => {\n    (async function() {\n      try {\n        if (values.token) {\n          const res = await registerMutation();\n          if (res && res.data && res.data.register) {\n            const user = res.data.register;\n            setFirebaseCookie('id_token', values.token);\n            setFirebaseCookie('user', { ...user });\n            redirect({}, '/');\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [values.token]);\n\n  const registerMutation = useMutation(REGISTER, {\n    variables: {\n      user: { mobile: [{ number: values.number }], token: values.token },\n    },\n  });\n\n  return (\n    <>\n      {!confirmResult ? (\n        <>\n          <Input\n            elementType=\"input\"\n            elementConfig={{\n              type: 'text',\n              required: 'required',\n            }}\n            label=\"Enter Number(ex. +30*********)\"\n            changed={handleChange('number')}\n            value={values.number}\n            touched={touched}\n          />\n\n          <Recaptcha />\n\n          <Button\n            onClick={handleGetVerificationCode}\n            title=\"Send Verification Code\"\n            bg=\"#30C56D\"\n            color=\"#ffffff\"\n            mt={30}\n            width={1}\n          />\n        </>\n      ) : null}\n      {!isMobileVerified && confirmResult ? (\n        <>\n          <Input\n            elementType=\"input\"\n            elementConfig={{\n              type: 'text',\n              required: 'required',\n            }}\n            label=\"Verify & Login\"\n            changed={handleChange('code')}\n            value={values.code}\n            touched={touched}\n          />\n          <Button\n            onClick={handleVerifyCode}\n            title=\"Verify & Login\"\n            bg=\"#30C56D\"\n            color=\"#ffffff\"\n            width={1}\n          />\n        </>\n      ) : null}\n      {isMobileVerified ? (\n        <p\n          style={{ color: '#30C56D', textAlign: 'center', fontFamily: 'Lato' }}\n        >\n          Your number is verified!\n        </p>\n      ) : (\n        ''\n      )}\n\n      {errorMessage ? (\n        <ErrorNotification style={{ marginTop: 30 }}>\n          {errorMessage}\n        </ErrorNotification>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n\nexport default MobileNumbersEnhancer(MobileSignIn);\n"]},"metadata":{},"sourceType":"module"}