{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olaji\\\\OneDrive\\\\Documents\\\\sellit\\\\template\\\\packages\\\\web\\\\hoc\\\\withLayout.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport { getFirebaseCookie } from '../helpers/session';\nimport Layout from '../containers/Layout';\n/**\r\n * HOC for all pages except authentication routes like login route.\r\n *  This is where we have placed our top bar and menus\r\n */\n\nexport default (ComposedComponent => class withLayout extends Component {\n  static async getInitialProps(context) {\n    const token = await getFirebaseCookie('id_token', context);\n    const location = await getFirebaseCookie('currentLocation', context);\n    const user = await getFirebaseCookie('user', context);\n    const isLoggedIn = token ? true : false;\n    return {\n      isLoggedIn,\n      pathname: context.pathname,\n      location,\n      userId: user ? user.userId : 'false',\n      email: user ? user.email : false,\n      error: user ? user.error : false\n    };\n  }\n\n  render() {\n    return __jsx(Layout, {\n      userId: this.props.userId,\n      isLoggedIn: this.props.isLoggedIn,\n      pathname: this.props.pathname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, __jsx(ComposedComponent, _extends({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    })));\n  }\n\n});","map":{"version":3,"sources":["C:/Users/olaji/OneDrive/Documents/sellit/template/packages/web/hoc/withLayout.js"],"names":["React","Component","getFirebaseCookie","Layout","ComposedComponent","withLayout","getInitialProps","context","token","location","user","isLoggedIn","pathname","userId","email","error","render","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA;AACA;AACA;AACA;;AACA,gBAAeC,iBAAiB,IAC9B,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjC,eAAaK,eAAb,CAA6BC,OAA7B,EAAsC;AACpC,UAAMC,KAAK,GAAG,MAAMN,iBAAiB,CAAC,UAAD,EAAaK,OAAb,CAArC;AACA,UAAME,QAAQ,GAAG,MAAMP,iBAAiB,CAAC,iBAAD,EAAoBK,OAApB,CAAxC;AACA,UAAMG,IAAI,GAAG,MAAMR,iBAAiB,CAAC,MAAD,EAASK,OAAT,CAApC;AACA,UAAMI,UAAU,GAAGH,KAAK,GAAG,IAAH,GAAU,KAAlC;AACA,WAAO;AACLG,MAAAA,UADK;AAELC,MAAAA,QAAQ,EAAEL,OAAO,CAACK,QAFb;AAGLH,MAAAA,QAHK;AAILI,MAAAA,MAAM,EAAEH,IAAI,GAAGA,IAAI,CAACG,MAAR,GAAiB,OAJxB;AAKLC,MAAAA,KAAK,EAAEJ,IAAI,GAAGA,IAAI,CAACI,KAAR,GAAgB,KALtB;AAMLC,MAAAA,KAAK,EAAEL,IAAI,GAAGA,IAAI,CAACK,KAAR,GAAgB;AANtB,KAAP;AAQD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AACE,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWJ,MADrB;AAEE,MAAA,UAAU,EAAE,KAAKI,KAAL,CAAWN,UAFzB;AAGE,MAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWL,QAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,MAAC,iBAAD,eAAuB,KAAKK,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALF,CADF;AASD;;AAzBgC,CADrC","sourcesContent":["import React, { Component } from 'react';\r\nimport { getFirebaseCookie } from '../helpers/session';\r\nimport Layout from '../containers/Layout';\r\n\r\n/**\r\n * HOC for all pages except authentication routes like login route.\r\n *  This is where we have placed our top bar and menus\r\n */\r\nexport default ComposedComponent =>\r\n  class withLayout extends Component {\r\n    static async getInitialProps(context) {\r\n      const token = await getFirebaseCookie('id_token', context);\r\n      const location = await getFirebaseCookie('currentLocation', context);\r\n      const user = await getFirebaseCookie('user', context);\r\n      const isLoggedIn = token ? true : false;\r\n      return {\r\n        isLoggedIn,\r\n        pathname: context.pathname,\r\n        location,\r\n        userId: user ? user.userId : 'false',\r\n        email: user ? user.email : false,\r\n        error: user ? user.error : false,\r\n      };\r\n    }\r\n    render() {\r\n      return (\r\n        <Layout\r\n          userId={this.props.userId}\r\n          isLoggedIn={this.props.isLoggedIn}\r\n          pathname={this.props.pathname}\r\n        >\r\n          <ComposedComponent {...this.props} />\r\n        </Layout>\r\n      );\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}