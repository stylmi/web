{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/mrcea/Desktop/Nunua/template/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/mrcea/Desktop/Nunua/template/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/mrcea/Desktop/Nunua/template/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mrcea/Desktop/Nunua/template/packages/web/containers/MobileSignIn/mobileSIgnIn.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { withFormik } from 'formik';\nimport Button from 'reusecore/src/elements/Button';\nimport { ErrorNotification } from '../SignInForm/style';\nimport Input from '../../components/Input';\nimport { setFirebaseCookie } from '../../helpers/session';\nimport redirect from '../../helpers/redirect';\nimport { useMutation } from '@apollo/react-hooks';\nimport { REGISTER } from 'core/graphql/Mutations';\nimport { GET_VERIFICATION_CODE, VERIFY_CODE, UPDATE_AUTHOR } from 'core/graphql/Mutations';\nimport AuthHelper from '../../helpers/authHelper';\nvar MobileNumbersEnhancer = withFormik({\n  mapPropsToValues: function mapPropsToValues(props) {\n    var number = '';\n    var code = '';\n    return {\n      number: number,\n      code: code\n    };\n  }\n});\n\nvar Recaptcha = function Recaptcha() {\n  _s();\n\n  useEffect(function () {\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha');\n    window.recaptchaVerifier.render().then(function (widgetId) {\n      window.recaptchaWidgetId = widgetId;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"recaptcha\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Recaptcha, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Recaptcha;\n\nvar MobileSignIn = function MobileSignIn(_ref) {\n  _s2();\n\n  var values = _ref.values,\n      touched = _ref.touched,\n      handleChange = _ref.handleChange,\n      userInfo = _ref.userInfo,\n      showModal = _ref.showModal,\n      author = _ref.author,\n      setFieldValue = _ref.setFieldValue,\n      loading = _ref.loading;\n\n  var _useState = useState({\n    confirmResult: false,\n    isMobileVerified: false,\n    wrongCode: false,\n    errorMessage: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var confirmResult = state.confirmResult,\n      isMobileVerified = state.isMobileVerified,\n      wrongCode = state.wrongCode,\n      errorMessage = state.errorMessage;\n\n  var handleGetVerificationCode = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _confirmResult;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return AuthHelper.login('phone', null, null, values.number);\n\n            case 3:\n              _confirmResult = _context.sent;\n\n              if (!_confirmResult.error) {\n                setState(_objectSpread(_objectSpread({}, state), {}, {\n                  confirmResult: _confirmResult,\n                  errorMessage: false\n                }));\n              } else {\n                setState(_objectSpread(_objectSpread({}, state), {}, {\n                  errorMessage: _confirmResult.error.message\n                }));\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function handleGetVerificationCode() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleVerifyCode = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var mobileNumbers, user, token;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              mobileNumbers = values.mobile;\n              _context2.next = 3;\n              return AuthHelper.confirmVerification(state.confirmResult, values.code);\n\n            case 3:\n              user = _context2.sent;\n\n              if (!(user && !user.error)) {\n                _context2.next = 12;\n                break;\n              }\n\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                isMobileVerified: true,\n                errorMessage: false\n              }));\n              _context2.next = 8;\n              return user.getIdToken();\n\n            case 8:\n              token = _context2.sent;\n              setFieldValue('token', token);\n              _context2.next = 13;\n              break;\n\n            case 12:\n              if (user.error) {\n                setState(_objectSpread(_objectSpread({}, state), {}, {\n                  errorMessage: user.error.message\n                }));\n              }\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleVerifyCode() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res, user;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n\n              if (!values.token) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 4;\n              return registerMutation();\n\n            case 4:\n              res = _context3.sent;\n\n              if (res && res.data && res.data.register) {\n                user = res.data.register;\n                setFirebaseCookie('id_token', values.token);\n                setFirebaseCookie('user', _objectSpread({}, user));\n                redirect({}, '/');\n              }\n\n            case 6:\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 8]]);\n    }))();\n  }, [values.token]);\n  var registerMutation = useMutation(REGISTER, {\n    variables: {\n      user: {\n        mobile: [{\n          number: values.number\n        }],\n        token: values.token\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!confirmResult ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        elementType: \"input\",\n        elementConfig: {\n          type: 'text',\n          required: 'required'\n        },\n        label: \"Enter Number(ex. +30*********)\",\n        changed: handleChange('number'),\n        value: values.number,\n        touched: touched\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Recaptcha, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleGetVerificationCode,\n        title: \"Send Verification Code\",\n        bg: \"#30C56D\",\n        color: \"#ffffff\",\n        mt: 30,\n        width: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true) : null, !isMobileVerified && confirmResult ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        elementType: \"input\",\n        elementConfig: {\n          type: 'text',\n          required: 'required'\n        },\n        label: \"Verify & Login\",\n        changed: handleChange('code'),\n        value: values.code,\n        touched: touched\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleVerifyCode,\n        title: \"Verify & Login\",\n        bg: \"#30C56D\",\n        color: \"#ffffff\",\n        width: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true) : null, isMobileVerified ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: '#30C56D',\n        textAlign: 'center',\n        fontFamily: 'Lato'\n      },\n      children: \"Your number is verified!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, _this) : '', errorMessage ? /*#__PURE__*/_jsxDEV(ErrorNotification, {\n      style: {\n        marginTop: 30\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, _this) : '']\n  }, void 0, true);\n};\n\n_s2(MobileSignIn, \"p0eF0x00XbQxSZKkjsUa2VQlcgA=\", false, function () {\n  return [useMutation];\n});\n\n_c2 = MobileSignIn;\nexport default _c3 = MobileNumbersEnhancer(MobileSignIn);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Recaptcha\");\n$RefreshReg$(_c2, \"MobileSignIn\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/mrcea/Desktop/Nunua/template/packages/web/containers/MobileSignIn/mobileSIgnIn.js"],"names":["React","useState","useEffect","firebase","withFormik","Button","ErrorNotification","Input","setFirebaseCookie","redirect","useMutation","REGISTER","GET_VERIFICATION_CODE","VERIFY_CODE","UPDATE_AUTHOR","AuthHelper","MobileNumbersEnhancer","mapPropsToValues","props","number","code","Recaptcha","window","recaptchaVerifier","auth","RecaptchaVerifier","render","then","widgetId","recaptchaWidgetId","MobileSignIn","values","touched","handleChange","userInfo","showModal","author","setFieldValue","loading","confirmResult","isMobileVerified","wrongCode","errorMessage","state","setState","handleGetVerificationCode","login","error","message","console","handleVerifyCode","mobileNumbers","mobile","confirmVerification","user","getIdToken","token","registerMutation","res","data","register","log","variables","type","required","color","textAlign","fontFamily","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { withFormik } from 'formik';\nimport Button from 'reusecore/src/elements/Button';\nimport { ErrorNotification } from '../SignInForm/style';\nimport Input from '../../components/Input';\nimport { setFirebaseCookie } from '../../helpers/session';\nimport redirect from '../../helpers/redirect';\nimport { useMutation } from '@apollo/react-hooks';\nimport { REGISTER } from 'core/graphql/Mutations';\nimport {\n  GET_VERIFICATION_CODE,\n  VERIFY_CODE,\n  UPDATE_AUTHOR,\n} from 'core/graphql/Mutations';\nimport AuthHelper from '../../helpers/authHelper';\n\nconst MobileNumbersEnhancer = withFormik({\n  mapPropsToValues: props => {\n    const number = '';\n    const code = '';\n    return {\n      number,\n      code,\n    };\n  },\n});\n\nconst Recaptcha = () => {\n  useEffect(() => {\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha');\n\n    window.recaptchaVerifier.render().then(function(widgetId) {\n      window.recaptchaWidgetId = widgetId;\n    });\n  }, []);\n  return <div id=\"recaptcha\" />;\n};\n\nconst MobileSignIn = ({\n  values,\n  touched,\n  handleChange,\n  userInfo,\n  showModal,\n  author,\n  setFieldValue,\n  loading,\n}) => {\n  const [state, setState] = useState({\n    confirmResult: false,\n    isMobileVerified: false,\n    wrongCode: false,\n    errorMessage: false,\n  });\n\n  const { confirmResult, isMobileVerified, wrongCode, errorMessage } = state;\n\n  const handleGetVerificationCode = async () => {\n    try {\n      const confirmResult = await AuthHelper.login(\n        'phone',\n        null,\n        null,\n        values.number\n      );\n      if (!confirmResult.error) {\n        setState({ ...state, confirmResult, errorMessage: false });\n      } else {\n        setState({ ...state, errorMessage: confirmResult.error.message });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleVerifyCode = async () => {\n    let mobileNumbers = values.mobile;\n    const user = await AuthHelper.confirmVerification(\n      state.confirmResult,\n      values.code\n    );\n    if (user && !user.error) {\n      setState({ ...state, isMobileVerified: true, errorMessage: false });\n      const token = await user.getIdToken();\n      setFieldValue('token', token);\n    } else if (user.error) {\n      setState({\n        ...state,\n        errorMessage: user.error.message,\n      });\n    }\n  };\n\n  useEffect(() => {\n    (async function() {\n      try {\n        if (values.token) {\n          const res = await registerMutation();\n          if (res && res.data && res.data.register) {\n            const user = res.data.register;\n            setFirebaseCookie('id_token', values.token);\n            setFirebaseCookie('user', { ...user });\n            redirect({}, '/');\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [values.token]);\n\n  const registerMutation = useMutation(REGISTER, {\n    variables: {\n      user: { mobile: [{ number: values.number }], token: values.token },\n    },\n  });\n\n  return (\n    <>\n      {!confirmResult ? (\n        <>\n          <Input\n            elementType=\"input\"\n            elementConfig={{\n              type: 'text',\n              required: 'required',\n            }}\n            label=\"Enter Number(ex. +30*********)\"\n            changed={handleChange('number')}\n            value={values.number}\n            touched={touched}\n          />\n\n          <Recaptcha />\n\n          <Button\n            onClick={handleGetVerificationCode}\n            title=\"Send Verification Code\"\n            bg=\"#30C56D\"\n            color=\"#ffffff\"\n            mt={30}\n            width={1}\n          />\n        </>\n      ) : null}\n      {!isMobileVerified && confirmResult ? (\n        <>\n          <Input\n            elementType=\"input\"\n            elementConfig={{\n              type: 'text',\n              required: 'required',\n            }}\n            label=\"Verify & Login\"\n            changed={handleChange('code')}\n            value={values.code}\n            touched={touched}\n          />\n          <Button\n            onClick={handleVerifyCode}\n            title=\"Verify & Login\"\n            bg=\"#30C56D\"\n            color=\"#ffffff\"\n            width={1}\n          />\n        </>\n      ) : null}\n      {isMobileVerified ? (\n        <p\n          style={{ color: '#30C56D', textAlign: 'center', fontFamily: 'Lato' }}\n        >\n          Your number is verified!\n        </p>\n      ) : (\n        ''\n      )}\n\n      {errorMessage ? (\n        <ErrorNotification style={{ marginTop: 30 }}>\n          {errorMessage}\n        </ErrorNotification>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n\nexport default MobileNumbersEnhancer(MobileSignIn);\n"]},"metadata":{},"sourceType":"module"}