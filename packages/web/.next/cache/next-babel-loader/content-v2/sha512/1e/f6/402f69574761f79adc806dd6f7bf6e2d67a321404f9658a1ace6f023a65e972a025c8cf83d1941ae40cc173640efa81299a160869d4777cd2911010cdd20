{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mrcea/Desktop/Nunua/template/packages/web/containers/Home/Categories/index.js\";\nimport React from 'react';\nimport Link from 'next/link';\nimport { Row, Col } from 'react-styled-flexboxgrid';\nimport { GET_CATEGORIES } from 'core/graphql/Category.query';\nimport { SINGLE_CATEGORY_PAGE } from 'core/navigation/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport CategoryLoader from '../../../components/Loader/CategoryLoader';\nimport { CategoryGridCard as CategoryGridCardComp } from '../../../components/CategoryCard';\nimport ListGridComp from 'reusecore/src/elements/ListGrid';\nimport NoItemFound from '../../../components/NoItemFound';\nimport OnError from '../../../components/OnError';\nimport styled from 'styled-components';\nconst ListGrid = styled(ListGridComp).withConfig({\n  displayName: \"Categories__ListGrid\",\n  componentId: \"sc-1w382l2-0\"\n})([\".singleGridBox{margin-right:-1px;margin-bottom:-1px;transition:all ease 0.3s;&:hover{position:relative;z-index:1;box-shadow:rgba(39,79,117,0.2) 0px 40px 90px -30px;}}@media only screen and (max-width:767px){flex-wrap:nowrap;overflow-x:auto;padding-bottom:10px;}\"]);\nconst CategoryGridCard = styled(CategoryGridCardComp).withConfig({\n  displayName: \"Categories__CategoryGridCard\",\n  componentId: \"sc-1w382l2-1\"\n})([\"height:50%;@media only screen and (max-width:767px){background-color:transparent;border:0;padding:0 32px;min-height:auto;}\"]);\nexport default function CategoryPost({\n  location\n}) {\n  const QUERY_VARIABLES = {\n    LIMIT: 8\n  };\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_CATEGORIES, {\n    variables: QUERY_VARIABLES\n  });\n  if (error) return /*#__PURE__*/_jsxDEV(OnError, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 21\n  }, this);\n  const baseAddress = location ? `${SINGLE_CATEGORY_PAGE}/[location]/[slug]` : `${SINGLE_CATEGORY_PAGE}/[slug]`;\n  const categories = !loading && data && data.categories ? data.categories.data : [];\n  categories.sort((a, b) => b.posts.total - a.posts.total);\n\n  const renderCategoryItem = item => {\n    const {\n      name,\n      image: {\n        url\n      },\n      slug\n    } = item;\n    const baseUrl = location ? `${SINGLE_CATEGORY_PAGE}/${location}/${slug}` : `${SINGLE_CATEGORY_PAGE}/${slug}`;\n    return /*#__PURE__*/_jsxDEV(Link, {\n      href: baseAddress,\n      as: baseUrl,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        style: {\n          height: '100%',\n          display: 'block'\n        },\n        children: /*#__PURE__*/_jsxDEV(CategoryGridCard, {\n          imageSrc: url,\n          title: name,\n          style: {\n            marginRight: -1,\n            marginTop: -1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      xs: 12,\n      mdOffset: 3,\n      smOffset: 2,\n      sm: 8,\n      children: !categories ? /*#__PURE__*/_jsxDEV(NoItemFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ListGrid, {\n        data: categories,\n        columnWidth: [1, 1 / 2, 1 / 4, 1 / 6],\n        component: renderCategoryItem,\n        loading: loading,\n        placeholder: /*#__PURE__*/_jsxDEV(CategoryLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 26\n        }, this),\n        limit: QUERY_VARIABLES.LIMIT,\n        componentContainerStyle: {\n          p: 0\n        },\n        componentWrapperStyle: {\n          ml: 0,\n          mr: 0,\n          flexBox: true,\n          flexWrap: 'wrap'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/mrcea/Desktop/Nunua/template/packages/web/containers/Home/Categories/index.js"],"names":["React","Link","Row","Col","GET_CATEGORIES","SINGLE_CATEGORY_PAGE","useQuery","CategoryLoader","CategoryGridCard","CategoryGridCardComp","ListGridComp","NoItemFound","OnError","styled","ListGrid","CategoryPost","location","QUERY_VARIABLES","LIMIT","data","loading","error","variables","baseAddress","categories","sort","a","b","posts","total","renderCategoryItem","item","name","image","url","slug","baseUrl","height","display","marginRight","marginTop","p","ml","mr","flexBox","flexWrap"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { Row, Col } from 'react-styled-flexboxgrid';\nimport { GET_CATEGORIES } from 'core/graphql/Category.query';\nimport { SINGLE_CATEGORY_PAGE } from 'core/navigation/constant';\nimport { useQuery } from '@apollo/react-hooks';\nimport CategoryLoader from '../../../components/Loader/CategoryLoader';\nimport { CategoryGridCard as CategoryGridCardComp } from '../../../components/CategoryCard';\nimport ListGridComp from 'reusecore/src/elements/ListGrid';\nimport NoItemFound from '../../../components/NoItemFound';\nimport OnError from '../../../components/OnError';\n\nimport styled from 'styled-components';\n\nconst ListGrid = styled(ListGridComp)`\n  .singleGridBox {\n    margin-right: -1px;\n    margin-bottom: -1px;\n    transition: all ease 0.3s;\n    &:hover {\n      position: relative;\n      z-index: 1;\n      box-shadow: rgba(39, 79, 117, 0.2) 0px 40px 90px -30px;\n    }\n  }\n\n  @media only screen and (max-width: 767px) {\n    flex-wrap: nowrap;\n    overflow-x: auto;\n    padding-bottom: 10px;\n  }\n`;\n\nconst CategoryGridCard = styled(CategoryGridCardComp)`\n  height: 50%;\n\n  @media only screen and (max-width: 767px) {\n    background-color: transparent;\n    border: 0;\n    padding: 0 32px;\n    min-height: auto;\n  }\n`;\n\nexport default function CategoryPost({location}) {\n  const QUERY_VARIABLES = {\n    LIMIT: 8,\n  };\n  const { data, loading, error } = useQuery(GET_CATEGORIES, {\n    variables: QUERY_VARIABLES,\n  });\n  if (error) return <OnError />;\n  const baseAddress = location ? `${SINGLE_CATEGORY_PAGE}/[location]/[slug]` : `${SINGLE_CATEGORY_PAGE}/[slug]`\n  const categories =\n    !loading && data && data.categories ? data.categories.data : [];\n  categories.sort((a, b) => b.posts.total - a.posts.total);\n  const renderCategoryItem = item => {\n    const {\n      name,\n      image: { url },\n      slug,\n    } = item;\n    const baseUrl = location ? `${SINGLE_CATEGORY_PAGE}/${location}/${slug}` : `${SINGLE_CATEGORY_PAGE}/${slug}`\n    return (\n      <Link\n        href= {baseAddress}\n        as={baseUrl}\n      >\n        <a style={{ height: '100%', display: 'block' }}>\n          <CategoryGridCard\n            imageSrc={url}\n            title={name}\n            style={{\n              marginRight: -1,\n              marginTop: -1,\n            }}\n          />\n        </a>\n      </Link>\n    );\n  };\n  return (\n    <Row>\n      <Col xs={12} mdOffset={3} smOffset={2} sm={8}>\n        {!categories ? (\n          <NoItemFound />\n        ) : \n        (\n          <ListGrid\n            data={categories}\n            columnWidth={[1, 1 / 2, 1 / 4, 1 / 6]}\n            component={renderCategoryItem}\n            loading={loading}\n            placeholder={<CategoryLoader />}\n            limit={QUERY_VARIABLES.LIMIT}\n            componentContainerStyle={{ p: 0 }}\n            componentWrapperStyle={{\n              ml: 0,\n              mr: 0,\n              flexBox: true,\n              flexWrap: 'wrap',\n            }}\n          />\n        )\n        }\n      </Col>\n    </Row>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}