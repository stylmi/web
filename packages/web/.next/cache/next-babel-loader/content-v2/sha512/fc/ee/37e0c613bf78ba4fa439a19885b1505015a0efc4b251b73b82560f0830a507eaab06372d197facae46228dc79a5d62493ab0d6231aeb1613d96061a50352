{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mrcea/Desktop/Nunua/template/packages/web/containers/Home/PostByLocation/index.js\";\nimport React, { useContext } from 'react';\nimport Link from 'next/link';\nimport { CURRENCY } from '../../../Config';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_NEAREST_POST } from 'core/graphql/NearestPost.query';\nimport { NEAREST_POST_PAGE, SINGLE_POST_PAGE } from 'core/navigation/constant';\nimport { PostLoader } from '../../../components/Placeholder';\nimport ListGrid from 'reusecore/src/elements/ListGrid';\nimport Box from 'reusecore/src/elements/Box';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Button from 'reusecore/src/elements/Button';\nimport PostCard from '../../../components/PostCard';\nimport NoItemFound from '../../../components/NoItemFound';\nimport OnError from '../../../components/OnError';\nimport { LocationContext } from '../../../contexts/HomepageContext';\n\nconst PostByLocation = ({\n  getLocation\n}) => {\n  const {\n    location\n  } = useContext(LocationContext); // QUERY SECTION\n\n  const QUERY_VARIABLES = {\n    page: 1,\n    LIMIT: 12,\n    location: {\n      formattedAddress: getLocation\n    }\n  };\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_NEAREST_POST, {\n    variables: QUERY_VARIABLES\n  });\n  console.log(getLocation); // Error Rendering.\n\n  if (error) return /*#__PURE__*/_jsxDEV(OnError, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this); // Extract Post Data\n\n  const nearestPost = data && data.nearest ? data.nearest.data : []; // Post Loop Control Area\n\n  const renderNearestPost = item => {\n    const {\n      price,\n      image: {\n        url,\n        largeUrl\n      },\n      title,\n      slug\n    } = item;\n    return /*#__PURE__*/_jsxDEV(Link, {\n      href: `${SINGLE_POST_PAGE}/[slug]`,\n      as: `${SINGLE_POST_PAGE}/${slug}`,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: /*#__PURE__*/_jsxDEV(PostCard, {\n          currency: CURRENCY,\n          title: title,\n          price: price,\n          imageSrc: [url, largeUrl]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      flexBox: true,\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        content: `Products in ${location}`,\n        mb: 0,\n        fontSize: 20,\n        fontWeight: 600\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: NEAREST_POST_PAGE,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            title: \"See all\",\n            color: \"#8c8c8c\",\n            fontWeight: 500,\n            variant: \"textButton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: !nearestPost ? /*#__PURE__*/_jsxDEV(NoItemFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ListGrid, {\n        data: nearestPost,\n        columnWidth: [1, 1 / 2, 1 / 3, 1 / 4],\n        limit: QUERY_VARIABLES.LIMIT,\n        component: renderNearestPost,\n        loading: loading,\n        placeholder: /*#__PURE__*/_jsxDEV(PostLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default PostByLocation;","map":{"version":3,"sources":["/Users/mrcea/Desktop/Nunua/template/packages/web/containers/Home/PostByLocation/index.js"],"names":["React","useContext","Link","CURRENCY","useQuery","GET_NEAREST_POST","NEAREST_POST_PAGE","SINGLE_POST_PAGE","PostLoader","ListGrid","Box","Heading","Button","PostCard","NoItemFound","OnError","LocationContext","PostByLocation","getLocation","location","QUERY_VARIABLES","page","LIMIT","formattedAddress","data","loading","error","variables","console","log","nearestPost","nearest","renderNearestPost","item","price","image","url","largeUrl","title","slug"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport Link from 'next/link';\nimport { CURRENCY } from '../../../Config';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_NEAREST_POST } from 'core/graphql/NearestPost.query';\nimport { NEAREST_POST_PAGE, SINGLE_POST_PAGE } from 'core/navigation/constant';\nimport { PostLoader } from '../../../components/Placeholder';\nimport ListGrid from 'reusecore/src/elements/ListGrid';\nimport Box from 'reusecore/src/elements/Box';\nimport Heading from 'reusecore/src/elements/Heading';\nimport Button from 'reusecore/src/elements/Button';\nimport PostCard from '../../../components/PostCard';\nimport NoItemFound from '../../../components/NoItemFound';\nimport OnError from '../../../components/OnError';\nimport { LocationContext } from '../../../contexts/HomepageContext';\n\nconst PostByLocation = ({getLocation}) => {\n    const {location} = useContext(LocationContext)\n  // QUERY SECTION\n  const QUERY_VARIABLES = {\n    page: 1,\n    LIMIT: 12,\n    location:{\n      formattedAddress: getLocation\n    },\n  };\n  const { data, loading, error } = useQuery(GET_NEAREST_POST, {\n    variables: QUERY_VARIABLES,\n  });\n  console.log(getLocation)\n\n  // Error Rendering.\n  if (error) return <OnError />;\n  // Extract Post Data\n  const nearestPost = data && data.nearest ? data.nearest.data : [];\n\n  // Post Loop Control Area\n  const renderNearestPost = item => {\n    const {\n      price,\n      image: { url, largeUrl },\n      title,\n      slug,\n    } = item;\n    return (\n      <Link\n        href={`${SINGLE_POST_PAGE}/[slug]`}\n        as={`${SINGLE_POST_PAGE}/${slug}`}\n      >\n        <a>\n          <PostCard\n            currency={CURRENCY}\n            title={title}\n            price={price}\n            imageSrc={[url, largeUrl]}\n          />\n        </a>\n      </Link>\n    );\n  };\n\n  return (\n    <>\n      <Box flexBox justifyContent=\"space-between\" alignItems=\"center\">\n        <Heading content={`Products in ${location}`} mb={0} fontSize={20} fontWeight={600} />\n        <Link href={NEAREST_POST_PAGE}>\n          <a>\n            <Button\n              title=\"See all\"\n              color=\"#8c8c8c\"\n              fontWeight={500}\n              variant=\"textButton\"\n            />\n          </a>\n        </Link>\n      </Box>\n      <Box mt={20}>\n        {!nearestPost ? (\n          <NoItemFound />\n        ) : (\n          <ListGrid\n            data={nearestPost}\n            columnWidth={[1, 1 / 2, 1 / 3, 1 / 4]}\n            limit={QUERY_VARIABLES.LIMIT}\n            component={renderNearestPost}\n            loading={loading}\n            placeholder={<PostLoader />}\n          />\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default PostByLocation;\n"]},"metadata":{},"sourceType":"module"}