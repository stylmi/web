{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olaji\\\\OneDrive\\\\Documents\\\\sellit\\\\template\\\\packages\\\\web\\\\pages\\\\add-post\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useContext, useEffect } from 'react';\nimport { Grid, Row, Col } from 'react-styled-flexboxgrid';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Modal } from '@redq/reuse-modal';\nimport { GET_POST_FOR_EDIT } from '../../../core/graphql/Post.query';\nimport Alert from '../../../reusecore/src/elements/Alert';\nimport SecretPage from '../../hoc/secretPage';\nimport withLayout from '../../hoc/withLayout';\nimport { adPostSteps, STEPS, AddPostContext, AddPostProvider } from '../../contexts/AddPostContext';\nimport PageMeta from '../../components/PageMeta';\nimport PickImages from '../../containers/AddPost/PickImages';\nimport TitleAndPriceInfo from '../../containers/AddPost/TitleAndPriceInfo';\nimport CategoryAndDetailInfo from '../../containers/AddPost/CategoryAndDetailInfo';\nimport LocationInfo from '../../containers/AddPost/LocationInfo';\nimport ContactNumberInfo from '../../containers/AddPost/ContactNumberInfo';\nimport TopToolBar from '../../containers/AddPost/TopToolBar';\nimport AdImagesInfo from '../../containers/AddPost/AddImage';\nimport Progress from '../../components/Progress';\nimport { withApollo } from '../../helpers/apollo';\nlet counter = 0;\n\nconst AddPost = ({\n  isLoggedIn,\n  userId,\n  email\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(AddPostContext);\n  const {\n    step\n  } = state;\n  const {\n    query: {\n      id\n    }\n  } = useRouter();\n\n  if (id != 'new') {\n    const {\n      data,\n      loading,\n      error\n    } = useQuery(GET_POST_FOR_EDIT, {\n      variables: {\n        id\n      }\n    });\n    useEffect(() => {\n      if (!loading && Object.keys(data).length) {\n        if (counter < 1) {\n          dispatch({\n            type: 'UPDATE_STEP',\n            payload: {\n              step: 1\n            }\n          });\n\n          if (id) {\n            dispatch({\n              type: 'UPDATE_FULL_ADPOST',\n              payload: {\n                id: id\n              }\n            });\n          }\n\n          let location = null;\n\n          if (data.post.formattedLocation && data.post.formattedLocation.lat) {\n            location = {\n              lat: data.post.formattedLocation && data.post.formattedLocation.lat,\n              lng: data.post.formattedLocation && data.post.formattedLocation.lng,\n              formattedAddress: data.post.formattedLocation && data.post.formattedLocation.formattedAddress ? data.post.formattedLocation.formattedAddress : ''\n            };\n          }\n\n          dispatch({\n            type: 'UPDATE_FULL_ADPOST',\n            payload: {\n              title: data.post.title,\n              condition: data.post.condition,\n              price: data.post.price,\n              image: data.post.image,\n              gallery: data.post.gallery,\n              isNegotiable: data.post.isNegotiable,\n              authorId: userId,\n              content: data.post.content,\n              status: data.post.status,\n              slug: data.post.slug,\n              location,\n              categories: data.post.categories,\n              contactNumber: data.post.contactNumber\n            }\n          });\n          counter++;\n        }\n      }\n\n      return () => {\n        null;\n      };\n    }, [data]); // Error Rendering.\n\n    if (error) return __jsx(Alert, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }\n    }, `Error! ${error.message}`);\n  }\n\n  return __jsx(React.Fragment, null, adPostSteps[step] && adPostSteps[step] === STEPS.STEP_CHOOSE_IMAGES ? __jsx(PickImages, {\n    userId: userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }) : __jsx(Grid, {\n    style: {\n      paddingTop: '80px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, __jsx(TopToolBar, {\n    onClose: () => dispatch({\n      type: 'CANCEL_AD_POSTING'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }), __jsx(Progress, {\n    color: \"#30c56d\",\n    progress: 1 / 4 * step,\n    height: 4,\n    style: {\n      marginBottom: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 7,\n    md: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, __jsx(AdImagesInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 5,\n    md: 5,\n    style: {\n      marginBottom: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, adPostSteps[step] && adPostSteps[step] === STEPS.STEP_SET_TITLE_AND_PRICE && __jsx(TitleAndPriceInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }), adPostSteps[step] && adPostSteps[step] === STEPS.STEP_SET_LOCATION && __jsx(LocationInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }), adPostSteps[step] && adPostSteps[step] === STEPS.STEP_SET_CATEGORY_AND_TAGS && __jsx(CategoryAndDetailInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }), adPostSteps[step] && adPostSteps[step] === STEPS.STEP_SET_CONTACT_NUMBER && __jsx(ContactNumberInfo, {\n    userId: userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  })))));\n};\n\nfunction AdPostPage(props) {\n  return __jsx(React.Fragment, null, __jsx(PageMeta, {\n    title: \"Add post\",\n    description: \"Add post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), __jsx(AddPostProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, __jsx(AddPost, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  })), __jsx(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default withApollo(SecretPage(withLayout(AdPostPage)));","map":{"version":3,"sources":["C:/Users/olaji/OneDrive/Documents/sellit/template/packages/web/pages/add-post/[id].js"],"names":["useContext","useEffect","Grid","Row","Col","useRouter","useQuery","Modal","GET_POST_FOR_EDIT","Alert","SecretPage","withLayout","adPostSteps","STEPS","AddPostContext","AddPostProvider","PageMeta","PickImages","TitleAndPriceInfo","CategoryAndDetailInfo","LocationInfo","ContactNumberInfo","TopToolBar","AdImagesInfo","Progress","withApollo","counter","AddPost","isLoggedIn","userId","email","state","dispatch","step","query","id","data","loading","error","variables","Object","keys","length","type","payload","location","post","formattedLocation","lat","lng","formattedAddress","title","condition","price","image","gallery","isNegotiable","authorId","content","status","slug","categories","contactNumber","message","STEP_CHOOSE_IMAGES","paddingTop","marginBottom","STEP_SET_TITLE_AND_PRICE","STEP_SET_LOCATION","STEP_SET_CATEGORY_AND_TAGS","STEP_SET_CONTACT_NUMBER","AdPostPage","props"],"mappings":"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","sourcesContent":["import { useContext, useEffect } from 'react';\r\nimport { Grid, Row, Col } from 'react-styled-flexboxgrid';\r\nimport { useRouter } from 'next/router';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Modal } from '@redq/reuse-modal';\r\nimport { GET_POST_FOR_EDIT } from '../../../core/graphql/Post.query';\r\nimport Alert from '../../../reusecore/src/elements/Alert';\r\nimport SecretPage from '../../hoc/secretPage';\r\nimport withLayout from '../../hoc/withLayout';\r\nimport {\r\n  adPostSteps,\r\n  STEPS,\r\n  AddPostContext,\r\n  AddPostProvider,\r\n} from '../../contexts/AddPostContext';\r\nimport PageMeta from '../../components/PageMeta';\r\nimport PickImages from '../../containers/AddPost/PickImages';\r\nimport TitleAndPriceInfo from '../../containers/AddPost/TitleAndPriceInfo';\r\nimport CategoryAndDetailInfo from '../../containers/AddPost/CategoryAndDetailInfo';\r\nimport LocationInfo from '../../containers/AddPost/LocationInfo';\r\nimport ContactNumberInfo from '../../containers/AddPost/ContactNumberInfo';\r\nimport TopToolBar from '../../containers/AddPost/TopToolBar';\r\nimport AdImagesInfo from '../../containers/AddPost/AddImage';\r\n\r\nimport Progress from '../../components/Progress';\r\nimport { withApollo } from '../../helpers/apollo';\r\nlet counter = 0;\r\nconst AddPost = ({ isLoggedIn, userId, email }) => {\r\n  const { state, dispatch } = useContext(AddPostContext);\r\n  const { step } = state;\r\n  const {\r\n    query: { id },\r\n  } = useRouter();\r\n  if (id != 'new') {\r\n    const { data, loading, error } = useQuery(GET_POST_FOR_EDIT, {\r\n      variables: { id },\r\n    });\r\n    useEffect(() => {\r\n      if (!loading && Object.keys(data).length) {\r\n        if (counter < 1) {\r\n          dispatch({\r\n            type: 'UPDATE_STEP',\r\n            payload: { step: 1 },\r\n          });\r\n          if (id) {\r\n            dispatch({\r\n              type: 'UPDATE_FULL_ADPOST',\r\n              payload: { id: id },\r\n            });\r\n          }\r\n          let location = null;\r\n          if (data.post.formattedLocation && data.post.formattedLocation.lat) {\r\n            location = {\r\n              lat:\r\n                data.post.formattedLocation && data.post.formattedLocation.lat,\r\n              lng:\r\n                data.post.formattedLocation && data.post.formattedLocation.lng,\r\n              formattedAddress:\r\n                data.post.formattedLocation &&\r\n                data.post.formattedLocation.formattedAddress\r\n                  ? data.post.formattedLocation.formattedAddress\r\n                  : '',\r\n            };\r\n          }\r\n\r\n          dispatch({\r\n            type: 'UPDATE_FULL_ADPOST',\r\n            payload: {\r\n              title: data.post.title,\r\n              condition: data.post.condition,\r\n              price: data.post.price,\r\n              image: data.post.image,\r\n              gallery: data.post.gallery,\r\n              isNegotiable: data.post.isNegotiable,\r\n              authorId: userId,\r\n              content: data.post.content,\r\n              status: data.post.status,\r\n              slug: data.post.slug,\r\n              location,\r\n              categories: data.post.categories,\r\n              contactNumber: data.post.contactNumber,\r\n            },\r\n          });\r\n          counter++;\r\n        }\r\n      }\r\n      return () => {\r\n        null;\r\n      };\r\n    }, [data]);\r\n\r\n    // Error Rendering.\r\n    if (error) return <Alert>{`Error! ${error.message}`}</Alert>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {adPostSteps[step] && adPostSteps[step] === STEPS.STEP_CHOOSE_IMAGES ? (\r\n        <PickImages userId={userId} />\r\n      ) : (\r\n        <Grid\r\n          style={{\r\n            paddingTop: '80px',\r\n          }}\r\n        >\r\n          <Row>\r\n            <Col xs={12} sm={12}>\r\n              <TopToolBar\r\n                onClose={() => dispatch({ type: 'CANCEL_AD_POSTING' })}\r\n              />\r\n              <Progress\r\n                color=\"#30c56d\"\r\n                progress={(1 / 4) * step}\r\n                height={4}\r\n                style={{ marginBottom: '40px' }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={12} sm={7} md={7}>\r\n              <AdImagesInfo />\r\n            </Col>\r\n            <Col xs={12} sm={5} md={5} style={{ marginBottom: 50 }}>\r\n              {adPostSteps[step] &&\r\n                adPostSteps[step] === STEPS.STEP_SET_TITLE_AND_PRICE && (\r\n                  <TitleAndPriceInfo />\r\n                )}\r\n              {adPostSteps[step] &&\r\n                adPostSteps[step] === STEPS.STEP_SET_LOCATION && (\r\n                  <LocationInfo />\r\n                )}\r\n              {adPostSteps[step] &&\r\n                adPostSteps[step] === STEPS.STEP_SET_CATEGORY_AND_TAGS && (\r\n                  <CategoryAndDetailInfo />\r\n                )}\r\n              {adPostSteps[step] &&\r\n                adPostSteps[step] === STEPS.STEP_SET_CONTACT_NUMBER && (\r\n                  <ContactNumberInfo userId={userId} />\r\n                )}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction AdPostPage(props) {\r\n  return (\r\n    <>\r\n      <PageMeta title=\"Add post\" description=\"Add post\" />\r\n      <AddPostProvider>\r\n        <AddPost {...props} />\r\n        <Modal />\r\n      </AddPostProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withApollo(SecretPage(withLayout(AdPostPage)));\r\n"]},"metadata":{},"sourceType":"module"}