{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\olaji\\\\OneDrive\\\\Documents\\\\sellit\\\\template\\\\packages\\\\web\\\\containers\\\\Home\\\\NearestPost\\\\index.js\";\nimport React from 'react';\nimport Link from 'next/link';\nimport { CURRENCY } from '../../../Config';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_NEAREST_POST } from '../../../../core/graphql/NearestPost.query';\nimport { NEAREST_POST_PAGE, SINGLE_POST_PAGE } from '../../../../core/navigation/constant';\nimport { PostLoader } from '../../../components/Placeholder';\nimport ListGrid from '../../../../reusecore/src/elements/ListGrid';\nimport Box from '../../../../reusecore/src/elements/Box';\nimport Heading from '../../../../reusecore/src/elements/Heading';\nimport Button from '../../../../reusecore/src/elements/Button';\nimport PostCard from '../../../components/PostCard';\nimport NoItemFound from '../../../components/NoItemFound';\nimport OnError from '../../../components/OnError';\n\nconst NearestPost = ({\n  location\n}) => {\n  // QUERY SECTION\n  const QUERY_VARIABLES = {\n    page: 1,\n    LIMIT: 8,\n    location\n  };\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_NEAREST_POST, {\n    variables: QUERY_VARIABLES\n  }); // Error Rendering.\n\n  if (error) return /*#__PURE__*/_jsxDEV(OnError, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }, this); // Extract Post Data\n\n  const nearestPost = data && data.nearest ? data.nearest.data : []; // Post Loop Control Area\n\n  const renderNearestPost = item => {\n    const {\n      price,\n      image: {\n        url,\n        largeUrl\n      },\n      title,\n      slug\n    } = item;\n    return /*#__PURE__*/_jsxDEV(Link, {\n      href: `${SINGLE_POST_PAGE}/[slug]`,\n      as: `${SINGLE_POST_PAGE}/${slug}`,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: /*#__PURE__*/_jsxDEV(PostCard, {\n          currency: CURRENCY,\n          title: title,\n          price: price,\n          imageSrc: [url, largeUrl]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      flexBox: true,\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        content: \"Nearest Post\",\n        mb: 0,\n        fontSize: 20,\n        fontWeight: 600\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: NEAREST_POST_PAGE,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            title: \"See all\",\n            color: \"#8c8c8c\",\n            fontWeight: 500,\n            variant: \"textButton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: !nearestPost ? /*#__PURE__*/_jsxDEV(NoItemFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ListGrid, {\n        data: nearestPost,\n        columnWidth: [1, 1 / 2, 1 / 3, 1 / 4],\n        limit: QUERY_VARIABLES.LIMIT,\n        component: renderNearestPost,\n        loading: loading,\n        placeholder: /*#__PURE__*/_jsxDEV(PostLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default NearestPost;","map":{"version":3,"sources":["C:/Users/olaji/OneDrive/Documents/sellit/template/packages/web/containers/Home/NearestPost/index.js"],"names":["React","Link","CURRENCY","useQuery","GET_NEAREST_POST","NEAREST_POST_PAGE","SINGLE_POST_PAGE","PostLoader","ListGrid","Box","Heading","Button","PostCard","NoItemFound","OnError","NearestPost","location","QUERY_VARIABLES","page","LIMIT","data","loading","error","variables","nearestPost","nearest","renderNearestPost","item","price","image","url","largeUrl","title","slug"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\nimport { CURRENCY } from '../../../Config';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { GET_NEAREST_POST } from '../../../../core/graphql/NearestPost.query';\r\nimport { NEAREST_POST_PAGE, SINGLE_POST_PAGE } from '../../../../core/navigation/constant';\r\nimport { PostLoader } from '../../../components/Placeholder';\r\n\r\nimport ListGrid from '../../../../reusecore/src/elements/ListGrid';\r\nimport Box from '../../../../reusecore/src/elements/Box';\r\nimport Heading from '../../../../reusecore/src/elements/Heading';\r\nimport Button from '../../../../reusecore/src/elements/Button';\r\nimport PostCard from '../../../components/PostCard';\r\nimport NoItemFound from '../../../components/NoItemFound';\r\nimport OnError from '../../../components/OnError';\r\n\r\nconst NearestPost = ({ location }) => {\r\n  // QUERY SECTION\r\n  const QUERY_VARIABLES = {\r\n    page: 1,\r\n    LIMIT: 8,\r\n    location,\r\n  };\r\n  const { data, loading, error } = useQuery(GET_NEAREST_POST, {\r\n    variables: QUERY_VARIABLES,\r\n  });\r\n\r\n  // Error Rendering.\r\n  if (error) return <OnError />;\r\n  // Extract Post Data\r\n  const nearestPost = data && data.nearest ? data.nearest.data : [];\r\n\r\n  // Post Loop Control Area\r\n  const renderNearestPost = item => {\r\n    const {\r\n      price,\r\n      image: { url, largeUrl },\r\n      title,\r\n      slug,\r\n    } = item;\r\n    return (\r\n      <Link\r\n        href={`${SINGLE_POST_PAGE}/[slug]`}\r\n        as={`${SINGLE_POST_PAGE}/${slug}`}\r\n      >\r\n        <a>\r\n          <PostCard\r\n            currency={CURRENCY}\r\n            title={title}\r\n            price={price}\r\n            imageSrc={[url, largeUrl]}\r\n          />\r\n        </a>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box flexBox justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Heading content=\"Nearest Post\" mb={0} fontSize={20} fontWeight={600} />\r\n        <Link href={NEAREST_POST_PAGE}>\r\n          <a>\r\n            <Button\r\n              title=\"See all\"\r\n              color=\"#8c8c8c\"\r\n              fontWeight={500}\r\n              variant=\"textButton\"\r\n            />\r\n          </a>\r\n        </Link>\r\n      </Box>\r\n      <Box mt={20}>\r\n        {!nearestPost ? (\r\n          <NoItemFound />\r\n        ) : (\r\n          <ListGrid\r\n            data={nearestPost}\r\n            columnWidth={[1, 1 / 2, 1 / 3, 1 / 4]}\r\n            limit={QUERY_VARIABLES.LIMIT}\r\n            component={renderNearestPost}\r\n            loading={loading}\r\n            placeholder={<PostLoader />}\r\n          />\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NearestPost;\r\n"]},"metadata":{},"sourceType":"module"}